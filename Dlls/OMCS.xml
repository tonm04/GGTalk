<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OMCS</name>
    </assembly>
    <members>
        <member name="T:OMCS.Tools.HeadImagePanel">
            <summary>
            头像选择控件。
            注意事项：在使用HeadImagePanel控件时，需要将其大小设置为摄像头采集分辨率的大小。
            </summary>
        </member>
        <member name="F:OMCS.Tools.HeadImagePanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Tools.HeadImagePanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Tools.HeadImagePanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Tools.HeadImagePanel.Start(System.Int32,System.Drawing.Size,System.Int32)">
            <summary>
            初始化摄像头，并启动它。
            </summary>
            <param name="cameraDeviceIndex">摄像头的索引</param>
            <param name="cameraSize">摄像头采集分辨率</param>
            <param name="outputImageLen">输出的正方形头像的边长</param>
        </member>
        <member name="M:OMCS.Tools.HeadImagePanel.GetHeadImage">
            <summary>
            获取结果头像。
            </summary>        
        </member>
        <member name="M:OMCS.Tools.HeadImagePanel.Stop">
            <summary>
            停止摄像头。
            </summary>
        </member>
        <member name="E:OMCS.Tools.HeadImagePanel.HeadImageSelected">
            <summary>
            当选择的头像区域发生改变时，会触发此事件。参数为头像位图。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.WhiteBoardDevice">
            <summary>
            电子白板设备。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IMultimediaDevice">
            <summary>
            多媒体设备基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.AddGuest(System.String)">
            <summary>
            添加一个连接到当前设备的客人。
            </summary>
            <param name="guestID">客人的UserID</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.RemoveGuest(System.String)">
            <summary>
            从当前设备的客人列表中移除目标客人。
            </summary>
            <param name="guestID"></param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.ContainsGuest(System.String)">
            <summary>
            当前设备的客人列表中是否包含目标客人。
            </summary>
            <param name="guestID">客人的UserID</param>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.GetGuests">
            <summary>
            获取所有连接到当前设备的客人的UserID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnCommand(System.String,System.Int32,System.Byte[])">
            <summary>
            处理来自Guest的命令。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnQuery(System.String,System.Int32,System.Byte[])">
            <summary>
            处理来自Guest的查询。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnSelfOffline">
            <summary>
            当自己掉线时。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaDevice.MultimediaDeviceType">
            <summary>
            当前多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaDevice.IsValid">
            <summary>
            设备是否运行正常。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.Tools">
            <summary>
            Some miscellaneous functions.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Tools.GetPin(OMCS.Engine.DShow.Core.IBaseFilter,OMCS.Engine.DShow.Core.PinDirection,System.Int32)">
            <summary>
            Get filter's pin.
            </summary>
            
            <param name="filter">Filter to get pin of.</param>
            <param name="dir">Pin's direction.</param>
            <param name="num">Pin's number.</param>
            
            <returns>Returns filter's pin.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Tools.GetInPin(OMCS.Engine.DShow.Core.IBaseFilter,System.Int32)">
            <summary>
            Get filter's input pin.
            </summary>
            
            <param name="filter">Filter to get pin of.</param>
            <param name="num">Pin's number.</param>
            
            <returns>Returns filter's pin.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Tools.GetOutPin(OMCS.Engine.DShow.Core.IBaseFilter,System.Int32)">
            <summary>
            Get filter's output pin.
            </summary>
            
            <param name="filter">Filter to get pin of.</param>
            <param name="num">Pin's number.</param>
            
            <returns>Returns filter's pin.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IGraphBuilder">
            <summary>
            This interface provides methods that enable an application to build a filter graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.AddFilter(OMCS.Engine.DShow.Core.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph and gives it a name.
            </summary>
            
            <param name="filter">Filter to add to the graph.</param>
            <param name="name">Name of the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.RemoveFilter(OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Removes a filter from the graph.
            </summary>
            
            <param name="filter">Filter to be removed from the graph.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.EnumFilters(OMCS.Engine.DShow.Core.IEnumFilters@)">
            <summary>
            Provides an enumerator for all filters in the graph.
            </summary>
            
            <param name="enumerator">Filter enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.FindFilterByName(System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Finds a filter that was added with a specified name.
            </summary>
            
            <param name="name">Name of filter to search for.</param>
            <param name="filter">Interface of found filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.ConnectDirect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects two pins directly (without intervening filters).
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            <param name="mediaType">Media type to use for the connection.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Reconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Disconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Disconnects a specified pin.
            </summary>
            
            <param name="pin">Pin to disconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Connect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Connects two pins. If they will not connect directly, this method connects them with intervening transforms.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Render(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Adds a chain of filters to a specified output pin to render it.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.RenderFile(System.String,System.String)">
            <summary>
            Builds a filter graph that renders the specified file.
            </summary>
            
            <param name="file">Specifies a string that contains file name or device moniker.</param>
            <param name="playList">Reserved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.AddSourceFilter(System.String,System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Adds a source filter to the filter graph for a specific file.
            </summary>
            
            <param name="fileName">Specifies the name of the file to load.</param>
            <param name="filterName">Specifies a name for the source filter.</param>
            <param name="filter">Variable that receives the interface of the source filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.SetLogFile(System.IntPtr)">
            <summary>
            Sets the file for logging actions taken when attempting to perform an operation.
            </summary>
            
            <param name="hFile">Handle to the log file.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Abort">
            <summary>
            Requests that the graph builder return as soon as possible from its current task.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.ShouldOperationContinue">
            <summary>
            Queries whether the current operation should continue.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2">
            <summary>
            This interface builds capture graphs and other custom filter graphs. 
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.SetFiltergraph(OMCS.Engine.DShow.Core.IGraphBuilder)">
            <summary>
            Specify filter graph for the capture graph builder to use.
            </summary>
            
            <param name="graphBuilder">Filter graph's interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.GetFiltergraph(OMCS.Engine.DShow.Core.IGraphBuilder@)">
            <summary>
            Retrieve the filter graph that the builder is using.
            </summary>
            
            <param name="graphBuilder">Filter graph's interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.SetOutputFileName(System.Guid,System.String,OMCS.Engine.DShow.Core.IBaseFilter@,System.IntPtr@)">
            <summary>
            Create file writing section of the filter graph.
            </summary>
            
            <param name="type">GUID that represents either the media subtype of the output or the
            class identifier (CLSID) of a multiplexer filter or file writer filter.</param>
            <param name="fileName">Output file name.</param>
            <param name="baseFilter">Receives the multiplexer's <see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interface.</param>
            <param name="fileSinkFilter">Receives the file writer's IFileSinkFilter interface. Can be NULL.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.FindInterface(System.Guid,System.Guid,OMCS.Engine.DShow.Core.IBaseFilter,System.Guid,System.Object@)">
            <summary>
            Searche the graph for a specified interface, starting from a specified filter.
            </summary>
            
            <param name="category">GUID that specifies the search criteria.</param>
            <param name="type">GUID that specifies the major media type of an output pin, or NULL.</param>
            <param name="baseFilter"><see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interface of the filter. The method begins searching from this filter.</param>
            <param name="interfaceID">Interface identifier (IID) of the interface to locate.</param>
            <param name="retInterface">Receives found interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.RenderStream(System.Guid,System.Guid,System.Object,OMCS.Engine.DShow.Core.IBaseFilter,OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Connect an output pin on a source filter to a rendering filter, optionally through a compression filter.
            </summary>
            
            <param name="category">Pin category.</param>
            <param name="mediaType">Major-type GUID that specifies the media type of the output pin.</param>
            <param name="source">Starting filter for the connection.</param>
            <param name="compressor">Interface of an intermediate filter, such as a compression filter. Can be NULL.</param>
            <param name="renderer">Sink filter, such as a renderer or mux filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.ControlStream(System.Guid,System.Guid,OMCS.Engine.DShow.Core.IBaseFilter,System.Int64,System.Int64,System.Int16,System.Int16)">
            <summary>
            Set the start and stop times for one or more streams of captured data.
            </summary>
            
            <param name="category">Pin category.</param>
            <param name="mediaType">Major-type GUID that specifies the media type.</param>
            <param name="filter"><see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interface that specifies which filter to control.</param>
            <param name="start">Start time.</param>
            <param name="stop">Stop time.</param>
            <param name="startCookie">Value that is sent as the second parameter of the
            EC_STREAM_CONTROL_STARTED event notification.</param>
            <param name="stopCookie">Value that is sent as the second parameter of the
            EC_STREAM_CONTROL_STOPPED event notification.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.AllocCapFile(System.String,System.Int64)">
            <summary>
            Preallocate a capture file to a specified size.
            </summary>
            
            <param name="fileName">File name to create or resize.</param>
            <param name="size">Size of the file to allocate, in bytes.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.CopyCaptureFile(System.String,System.String,System.Boolean,System.IntPtr)">
            <summary>
            Copy the valid media data from a capture file.
            </summary>
            
            <param name="oldFileName">Old file name.</param>
            <param name="newFileName">New file name.</param>
            <param name="allowEscAbort">Boolean value that specifies whether pressing the ESC key cancels the copy operation.</param>
            <param name="callback">IAMCopyCaptureFileProgress interface to display progress information, or NULL.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.FindPin(System.Object,OMCS.Engine.DShow.Core.PinDirection,System.Guid,System.Guid,System.Boolean,System.Int32,OMCS.Engine.DShow.Core.IPin@)">
            <summary>
            
            </summary>
            
            <param name="source">Interface on a filter, or to an interface on a pin.</param>
            <param name="pinDirection">Pin direction (input or output).</param>
            <param name="category">Pin category.</param>
            <param name="mediaType">Media type.</param>
            <param name="unconnected">Boolean value that specifies whether the pin must be unconnected.</param>
            <param name="index">Zero-based index of the pin to retrieve, from the set of matching pins.</param>
            <param name="pin">Interface of the matching pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="P:OMCS.Engine.Paint.Messages.PositionChangedContract.Closed">
            <summary>
            closed 如果为true，表示关闭了激光笔。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ISendingFileParasDecider.GetSendingFileParas(System.String)">
            <summary>
            将文件发送给目标用户时，采用的数据包的大小和发送时间间隔。
            </summary>
            <param name="accepterID">文件接收者的UserID</param>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager">
            <summary>
            UdpChannelManager 基于UDP的P2P通道管理器。
            （1）客户端定时向UDP服务器发送UDP心跳消息，以保活端口。（当P2P通道是非可靠UDP时，是必须的）
            （2）内部自动对每个已存在的UDP通道启用定时保活机制。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager">
            <summary>
            IPlusP2PChannelManager TcpChannelManager和UdpChannelManager实现了此接口。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IP2PChannelManager">
            <summary>
            用于管理所有客户《＝》客户之间的P2P通道。
            zhuweisky 2006.06.02
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IP2PChannelManager.SendMessage(System.String,OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            通过P2PChannel发送消息。
            </summary>
            <param name="destUserID">目标用户ID</param>
            <param name="msg">要发送的消息（注意，该消息已经过MessagePipe）</param>            
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <returns>如果P2PChannel存在且可用，则返回true（即使P2P通道繁忙而被丢弃）；否则返回false。</returns>    
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IP2PChannelManager.IsP2PChannelExist(System.String)">
            <summary>
            到目标用户的P2P通道是否存在。
            </summary>
            <param name="destUserID">目标用户ID</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.IsP2PChannelExist(System.String)">
            <summary>
            与目标用户之间是否存在P2P通道。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.P2PConnect(OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo)">
            <summary>
            尝试P2P连接目标用户。
            </summary>
            <param name="destUser">目标用户的数据</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.P2PConnectAsyn(OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo)">
            <summary>
            尝试P2P连接目标用户。异步方式。
            </summary>
            <param name="destUser">目标用户的数据</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.UserOffline(System.String)">
            <summary>
            接收通知p2PSessionMessageTypeRoom.UserOfflineNotify，由P2PSessionPassiveProcesser调用
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.OnSelfOffline">
            <summary>
            OnSelfOffline 当客户端与服务器失去联系(掉线)时调用。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.OnSelfRebuildSucceed">
            <summary>
            OnSelfRebuildSucceed 当客户端重连服务器成功时调用。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.GetP2PChannelState">
            <summary>
            GetP2PChannelState 获取所有P2P通道的状态。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.GetP2PChannelState(System.String)">
            <summary>
            获取目标用户的P2P通道的状态。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.LocalPortBinding">
            <summary>
            P2P引擎绑定的本地端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.EnableChannelWhenEstablished">
            <summary>
            当通道创建成功时，是否自动启用通道。默认值为true。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager.Initialize(System.String,System.String)">
            <summary>
            Initialize 初始化。也可以是断线重连成功时，再度重新初始化。
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager.P2PChannelCompleted(System.String,OMCS.Communication.Basic.AgileIPEndPoint,OMCS.Communication.Basic.AgileIPEndPoint)">
            <summary>
            仅用于UDP Channel。接收通知p2PSessionMessageTypeRoom.ReceiveP2PProbe，由P2PSessionPassiveProcesser调用。
            </summary>
            <param name="destUserID">P2P通道的另一方</param>
            <param name="source">可能是自己的私有本地IPE，也可能是映射后的IPE，取决于destUserID与自己是否处于同一局网</param>    
            <param name="end">通道对方的IPE</param>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager.OnReceiveP2PProbeFrom(OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo)">
            <summary>
            仅用于UDP Channel。当收到对方(destUser)的P2PProbe消息（表示对方到自己的P2P通道已经建立）时调用(被P2PSessionPassiveProcesser)。
            </summary> 
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager.PublicUdpPort">
            <summary>
            向UDP服务器请求自己的公网UDP Port。未返回结果之前为0。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom">
            <summary>
            P2PSessionMessageTypeRoom 与P2P Session相关的消息类型的空间。
            zhuweisky 2005.06.19
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.BaseMessageTypeRoom">
            <summary>
            具体的消息类型空间的基类。具体的实现类只需要加入具体的MessageTypes和PushKeyList    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.IMessageTypeRoom">
            <summary>
            消息类型空间，用于定义一组相同性质的消息类型，比如所有的FTP消息类型。 
            zhuweisky 2006.04
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IMessageTypeRoom.Initialize">
            <summary>
            依据StartKey的设置，初始化各个key的值。注意：在Initialize之前，KeyScope/KeyScopeStr/PushKeyList属性和Contains方法的返回都是不正确的。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IMessageTypeRoom.Contains(System.Int32)">
            <summary>
            是否包含指定的消息类型。
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Plus.Core.IMessageTypeRoom.StartKey">
            <summary>
            当前消息类型空间的起始值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Core.IMessageTypeRoom.MaxKeyValue">
            <summary>
            初始化完成后，即可获取最大的值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Core.IMessageTypeRoom.PushKeyList">
            <summary>
            指示客户端需要将哪些类型的消息Push到IResponseManager
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Core.BaseMessageTypeRoom.StartKey">
            <summary>
            当前消息类型空间的起始值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.P2PLogon">
            <summary>
            P2P登陆。经由TCP，主体为P2PLogonContract，Client => Server
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.ReqUserData">
            <summary>
            获取好友P2P地址列表。经由TCP，请求主体为ReqUserDataContract，回复ResUserDataContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.InviteTcpP2P">
            <summary>
            邀请对方TCP P2P连接自己。协议体为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.InviteUdpP2P">
            <summary>
            邀请对方Udp P2P连接自己。协议体为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.GetMyPublicIPE">
            <summary>
            获取自己的公网IPE。经由TCP，请求主体为空，回复UserIPEResponseContract Client => Server
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.P2PUdpProbe">
            <summary>
            UDP探测消息。经由UDP，P2P探测，只在客户端之间传递。绝不会经过服务端。Client => Client
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.ReceiveUdpP2PProbe">
            <summary>
            接收到了某客户端的UDP探测。经由TCP服务器转发，请求主体为ReceiveP2PProbeNotifyContract，Client => Server。
            当ClientA收到B的P2PProbe时，会通过服务端中转告诉ClientB，表示ClientB => ClientA 的P2P通道已经建立了。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.TcpP2PChannelTest">
            <summary>
            基于TCP的P2P测试消息。经由TcpP2P通道发送给对方的P2P消息，当通过TCP P2P连接上某个好友时，会经此通道向好友发送该测试消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.GetMyPublicUdpPort">
            <summary>
            获取自己的公网UDP Port。由UDP服务端处理，请求主体为空，回复ResPublicUdpPortContract
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Passive.IFriendsOutter">
            <summary>
            用于获取好友列表及接收好友状态改变通知。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Friends.Passive.IFriendsOutter.GetAllOnlineFriends">
            <summary>
            获取所有在线的好友列表。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Friends.Passive.IFriendsOutter.GetFriends(System.String)">
            <summary>
            获取好友列表。
            </summary>      
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Friends.Passive.IFriendsOutter.FriendConnected">
            <summary>
             当好友上线时，触发此事件。参数为好友的UserID
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Friends.Passive.IFriendsOutter.FriendOffline">
            <summary>
             当好友下线时，触发此事件。参数为好友的UserID
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState">
            <summary>
            UdpSession的状态。
            zhuweisky 2010.05.07
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.DestIdentity">
            <summary>
            对方的身份标志
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.DestIPE">
            <summary>
            当前session对方的端点。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.OpenTime">
            <summary>
            UdpSession打开的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.SlideWindowSize">
            <summary>
            滑动窗口的大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.WaitAckCount">
            <summary>
            发送之后等待确认的数据报个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.CountInRecieveCache">
            <summary>
            接收缓存中数据报的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.ResendCount">
            <summary>
            重发的次数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.MaxDatagramIDSended">
            <summary>
            已经发送的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.MaxDatagramIDReceived">
            <summary>
            已经接收的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.PingDelayInMSecs">
            <summary>
            ping对方的延时（毫秒）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.RequestFRSpanInMSecs">
            <summary>
            快速重传请求的时间间隔
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.MaxDatagramIDReceivedOtherSide">
            <summary>
            对方已经接收的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.ResendCountOtherSide">
            <summary>
            Session的对方重发的次数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.CountInRecieveCacheOtherSide">
            <summary>
            对方接收缓存中数据报的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.PMTU">
            <summary>
            当前使用的PMTU的值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.PingCount">
            <summary>
            已经发送的ping个数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.PingReceivedCount">
            <summary>
            接收到对方的ping的个数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSessionState.PingAckCount">
            <summary>
            已经接收的pingAck个数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessage">
            <summary>
            在网络上传递的消息的基础接口。 注意，不要将一个消息分为多段发送，在多线程环境中，会导致片段交叉。   
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessage.GetMessageLength">
            <summary>
            获取整个消息的长度。如果为文本消息，则为整个文本的长度；如果为流消息，则为消息转化为流之后流的长度。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessage.ToStream">
            <summary>
            将消息转化为字节流，以备发送或持久化。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessage.SourceAddress">
            <summary>
            消息的源地址。任何一个NetEngine都会保证，在接收完一条消息的时候，会为该字段正确地赋值。
            如果是服务器接收到来自客户端的消息，则该字段表示用户的地址；
            如果是客户端接收到来自服务器的消息，则该字段表示服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessage.Header">
            <summary>
            消息头。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.NetworkHelper">
            <summary>
            网络基础功能帮助类。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetIPList">
            <summary>
            获取本地的IP地址列表。根据EnableIPv6属性决定返回的IP列表中是否包含IPv6地址。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetIPList(System.Net.Sockets.AddressFamily)">
            <summary>
            获取本地的IP地址列表。参数指定IPV4或IPV6
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetFirstIP">
            <summary>
            获取本地IP列表中的第一个IP地址。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.ReceiveData(System.Net.Sockets.NetworkStream,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.ReceiveData(System.Net.Sockets.NetworkStream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据 ，存放在buff中offset处。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetMinMTU">
            <summary>
            获取本机所有网卡的最小的MTU。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.IsIPAddress(System.String)">
            <summary>
            文本是否为IP地址。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.AsynOrderedExecutor`1">
            <summary>
            异步顺序执行器。使用Enqueue的调用线程来处理对象，保证处理的顺序为加入的顺序。
            </summary>    
        </member>
        <member name="M:OMCS.Communication.Basic.AsynOrderedExecutor`1.WaitOnFull">
            <summary>
            当队列中的消息数达到最大时，则一直阻塞。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AsynOrderedExecutor`1.Enqueue(`0)">
            <summary>
            将消息放入到队列中，等待处理。
            </summary>       
        </member>
        <member name="T:OMCS.Engine.Soundcard.WasapiCapture">
            <summary>
            Audio Capture using Wasapi
            See http://msdn.microsoft.com/en-us/library/dd370800%28VS.85%29.aspx
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.IWaveIn">
            <summary>
            Generic interface for wave recording
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.IWaveIn.StartRecording">
            <summary>
            Start Recording
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.IWaveIn.StopRecording">
            <summary>
            Stop Recording
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.IWaveIn.WaveFormat">
            <summary>
            Recording WaveFormat
            </summary>
        </member>
        <member name="E:OMCS.Engine.Soundcard.IWaveIn.DataAvailable">
            <summary>
            Indicates recorded data is available 
            </summary>
        </member>
        <member name="E:OMCS.Engine.Soundcard.IWaveIn.RecordingStopped">
            <summary>
            Indicates that all recorded data has now been received.
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.#ctor">
            <summary>
            Initialises a new instance of the WASAPI capture class
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.#ctor(OMCS.Engine.Soundcard.MMDevice)">
            <summary>
            Initialises a new instance of the WASAPI capture class
            </summary>
            <param name="captureDevice">Capture device to use</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.GetDefaultCaptureDevice">
            <summary>
            Gets the default audio capture device
            </summary>
            <returns>The default audio capture device</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.GetAudioClientStreamFlags">
            <summary>
            To allow overrides to specify different flags (e.g. loopback)
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.StartRecording">
            <summary>
            Start Recording
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.StopRecording">
            <summary>
            Stop Recording (requests a stop, wait for RecordingStopped event to know it has finished)
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiCapture.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="E:OMCS.Engine.Soundcard.WasapiCapture.DataAvailable">
            <summary>
            Indicates recorded data is available 
            </summary>
        </member>
        <member name="E:OMCS.Engine.Soundcard.WasapiCapture.RecordingStopped">
            <summary>
            Indicates that all recorded data has now been received.
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WasapiCapture.ShareMode">
            <summary>
            Share Mode - set before calling StartRecording
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WasapiCapture.WaveFormat">
            <summary>
            Recording wave format
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.DataFlow">
            <summary>
            The EDataFlow enumeration defines constants that indicate the direction 
            in which audio data flows between an audio endpoint device and an application
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DataFlow.Render">
            <summary>
            Audio rendering stream. 
            Audio data flows from the application to the audio endpoint device, which renders the stream.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DataFlow.Capture">
            <summary>
            Audio capture stream. Audio data flows from the audio endpoint device that captures the stream, 
            to the application
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DataFlow.All">
            <summary>
            Audio rendering or capture stream. Audio data can flow either from the application to the audio 
            endpoint device, or from the audio endpoint device to the application.
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioEndpointVolumeStepInformation">
            <summary>
            Audio Endpoint Volume Step Information
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeStepInformation.Step">
            <summary>
            Step
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeStepInformation.StepCount">
            <summary>
            StepCount
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.IPage">
            <summary>
            IPage 用于管理当前页的所有IView对象。
            IPage的方法的所有位置参数都采用绝对的坐标（即采用与View对象所使用的坐标一致的表示）。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.IPage.NewView(OMCS.Engine.Paint.Views.IView)">
            <summary>
            如果view不再Page的Boundary之内，则view不会被添加到page中。
            </summary>       
        </member>
        <member name="M:OMCS.Engine.Paint.Views.IPage.SubscribeAllViewsEvents">
            <summary>
            SubscribeAllViewsEvents 预定所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.IPage.Draw(System.Drawing.Graphics)">
            <summary>
            当控件Paint事件时，调用该方法绘制各视图对象。
            </summary>        
        </member>
        <member name="M:OMCS.Engine.Paint.Views.IPage.GetBoundary">
            <summary>
            获取真实的边界。如果Boundary属性值不为null，则直接返回。否则，返回所有view的Bounds的并集。
            </summary>        
        </member>
        <member name="E:OMCS.Engine.Paint.Views.IPage.ViewAddedByOther">
            <summary>
            当其它协作者向白板中添加一个View时，触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.CoordinateTransformatter">
            <summary>
            CoordinateTransformatter 用于进行缩放、滚动条的坐标变换。
            将在ViewEditor的viewPanel1_Paint方法中设定Graphics的绘制比例和变形偏移。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.CoordinateTransformatter.Translate(System.Drawing.Point)">
            <summary>
            Translate 将鼠标位置转换（Scroll和Scale）还原为实际位置。
            </summary>      
        </member>
        <member name="M:OMCS.Engine.Paint.Views.CoordinateTransformatter.Translate(System.Drawing.Rectangle)">
            <summary>
            Translate 将鼠标绘制的矩形转换（Scroll和Scale）还原为实际的矩形。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.CoordinateTransformatter.AntiTranslate(System.Drawing.Point)">
            <summary>
            AntiTranslate 将实际位置变换（Scroll和Scale）为鼠标位置。
            </summary>  
        </member>
        <member name="M:OMCS.Engine.Paint.Views.CoordinateTransformatter.AntiTranslate(System.Drawing.Rectangle)">
            <summary>
            AntiTranslate 将实际矩形变换（Scroll和Scale）为鼠标矩形。
            </summary>    
        </member>
        <member name="T:OMCS.Engine.Paint.Application.WorkSpaceDevice">
            <summary>
            WorkSpaceDevice 白板工作者设备。
            1. 激光笔，视频会议中主持人使用激光笔来指示位置。跟work没有关系，被ViewEditor控件使用。
            (1)显示并捕捉当前用户的激光笔位置（红色），并触发LaserPointerPositionChanged事件。
            (2)显示远程用户的激光笔的位置（蓝色）。
            2. 滚动条
            (1)当滚动时，触发WorkSpaceScrollPositionChanged事件。
            (2)当接收到远程滚动位置变化时，同步本地滚动条。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.WorkSpaceDevice.ClearEvent">
            <summary>
            ClearEvent 清除PositionChanged和VisibleChanged事件的处理器。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Paint.Application.WorkSpaceDevice.LaserPointerPositionChanged">
            <summary>
            本地激光笔的位置发生变化。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Paint.Application.WorkSpaceDevice.LaserPointerVisibleChanged">
            <summary>
            本地激光笔的可见性发生变化。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Paint.Application.WorkSpaceDevice.WorkSpaceScrollPositionChanged">
            <summary>
            当工作区的滚动条位置发生变化时，触发该事件。参数为AutoScrollPosition
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.WorkSpaceDevice.SpringEventWhenScrollWorkSpace">
            <summary>
            当滚动工作区的滚动条时，是否触发WorkSpaceScrollPositionChanged事件。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.WorkSpaceDevice.LaserPointerVisible">
            <summary>
            是否绘制本地激光笔。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.WorkSpaceDevice.RemoteLaserPointerPosition">
            <summary>
            RemoteLaserPointerPosition 远程主持人当前的激光笔的位置。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Application.ViewEditor">
            <summary>
            集合了所有Paint功能的用户控件。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.ViewEditor.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetCurrentViewType(OMCS.Engine.Paint.Views.ViewType)">
            <summary>
            设置当前要绘制的View的类型。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetLineDash(System.Boolean)">
            <summary>
            设置线条是否为虚线。
            </summary>   
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetLineWidth(System.Int32)">
            <summary>
            设置线条的宽度。
            </summary> 
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetTextBoxMinSize(System.Drawing.Size)">
            <summary>
            设置文本输入框的最小尺寸。
            </summary>        
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetFilledColor(System.Drawing.Color)">
            <summary>
            设置填充颜色。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetLineColor(System.Drawing.Color)">
            <summary>
            设置线条颜色。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewEditor.SetTextFormat(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            设置文本格式（字体、颜色）。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.KeyMoveDistance">
            <summary>
            KeyMoveDistance 当ArrowKeyEnabled为true时，每按一下方向键时移动选中的ViewObject的距离
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.ArrowKeyEnabled">
            <summary>
            ArrowKeyEnabled 是否启用方向键来移动选中的ViewObject
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.NewViewSelected">
            <summary>
            是否选中新创建的view。默认值false。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.ToolBarVisiable">
            <summary>
            工具栏是否可见。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.PagedMenuVisiable">
            <summary>
            是否可以看到“新建一页”、“删除本页”的菜单。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.SpringEventWhenScrollWorkSpace">
            <summary>
            当滚动工作区的滚动条时，是否触发WorkSpaceScrollPositionChanged事件。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewEditor.FocusOnNewViewByOther">
            <summary>
            如果协作者新建了一个view，则自动选中该view，并调节滚动条使其在可视区域内。
            </summary>
        </member>
        <member name="T:OMCS.Tools.HandwritingPanel">
            <summary>
            手写输入板。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.HandWritingBoard.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.HandWritingBoard.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.HandWritingBoard.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.HandWritingBoard.GetHandWriting">
            <summary>
            获取涂鸦的结果（位图）。
            </summary>       
        </member>
        <member name="M:OMCS.Engine.Paint.Application.HandWritingBoard.Clear">
            <summary>
            清空画板。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.HandWritingBoard.PenColor">
            <summary>
            设置画笔颜色。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.HandWritingBoard.PenWidth">
            <summary>
            设置画笔粗细。
            </summary>
        </member>
        <member name="F:OMCS.Tools.HandwritingPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Tools.HandwritingPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Tools.HandwritingPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IMultimediaConnector">
            <summary>
            多媒体连接器。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.SetMultimediaManager(OMCS.Passive.IMultimediaManager)">
            <summary>
            当一个进程中有多个IMultimediaManager实例时，调用该方法来指定当前连接器究竟要使用哪一个。该方法必须在BeginConnect方法之前调用。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.IsDisposed">
            <summary>
            连接器是否已经被释放？
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.WaitOwnerOnlineSpanInSecs">
            <summary>
            当调用BeginConnect连接Owner的设备时，如果Owner不在线，则等待对方上线的最长时间。如果超过这个时间，owner还没连接上来，则BeginConnect的结果仍然为TargetUserOffline。 
            单位：秒。默认值0。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BaseConnectorComponent.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器已经连接成功、或上次的连接尝试还未结束，则将抛出相应的异常。      
            </summary>       
            <param name="destUserID">目标用户的UserID</param>        
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.Disconnect">
            <summary>
            与目标设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.IsDisposed">
            <summary>
            连接器是否已经被释放？
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.WaitOwnerOnlineSpanInSecs">
            <summary>
            当调用BeginConnect连接Owner的设备时，如果Owner不在线，则等待对方上线的最长时间。如果超过这个时间，owner还没连接上来，则BeginConnect的结果仍然为TargetUserOffline。 
            单位：秒。默认值0。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.Disconnected">
            <summary>
            当与目标设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.ConnectEnded">
            <summary>
            当连接对方设备的尝试结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_BS_VERSION">
            XVID_BS_VERSION -> 50
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ERR_FAIL">
            XVID_ERR_FAIL -> -1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ERR_MEMORY">
            XVID_ERR_MEMORY -> -2
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ERR_FORMAT">
            XVID_ERR_FORMAT -> -3
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ERR_VERSION">
            XVID_ERR_VERSION -> -4
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ERR_END">
            XVID_ERR_END -> -5
        </member>
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_PLANAR”忽略有格式错误的 XML 注释 -->
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_USER">
            XVID_CSP_USER -> XVID_CSP_PLANAR
        </member>
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_I420”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_YV12”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_YUY2”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_UYVY”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_YVYU”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_RGB”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_BGRA”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_ABGR”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_RGBA”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_ARGB”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_BGR”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_RGB555”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_RGB565”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_SLICE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_INTERNAL”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_NULL”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CSP_VFLIP”忽略有格式错误的 XML 注释 -->
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_S_L0">
            XVID_PROFILE_S_L0 -> 0x08
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_S_L1">
            XVID_PROFILE_S_L1 -> 0x01
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_S_L2">
            XVID_PROFILE_S_L2 -> 0x02
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_S_L3">
            XVID_PROFILE_S_L3 -> 0x03
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_ARTS_L1">
            XVID_PROFILE_ARTS_L1 -> 0x91
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_ARTS_L2">
            XVID_PROFILE_ARTS_L2 -> 0x92
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_ARTS_L3">
            XVID_PROFILE_ARTS_L3 -> 0x93
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_ARTS_L4">
            XVID_PROFILE_ARTS_L4 -> 0x94
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_AS_L0">
            XVID_PROFILE_AS_L0 -> 0xf0
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_AS_L1">
            XVID_PROFILE_AS_L1 -> 0xf1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_AS_L2">
            XVID_PROFILE_AS_L2 -> 0xf2
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_AS_L3">
            XVID_PROFILE_AS_L3 -> 0xf3
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PROFILE_AS_L4">
            XVID_PROFILE_AS_L4 -> 0xf4
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAR_11_VGA">
            XVID_PAR_11_VGA -> 1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAR_43_PAL">
            XVID_PAR_43_PAL -> 2
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAR_43_NTSC">
            XVID_PAR_43_NTSC -> 3
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAR_169_PAL">
            XVID_PAR_169_PAL -> 4
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAR_169_NTSC">
            XVID_PAR_169_NTSC -> 5
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAR_EXT">
            XVID_PAR_EXT -> 15
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_VOL">
            XVID_TYPE_VOL -> -1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_NOTHING">
            XVID_TYPE_NOTHING -> 0
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_AUTO">
            XVID_TYPE_AUTO -> 0
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_IVOP">
            XVID_TYPE_IVOP -> 1 相当于关键帧
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_PVOP">
            XVID_TYPE_PVOP -> 2
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_BVOP">
            XVID_TYPE_BVOP -> 3
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_TYPE_SVOP">
            XVID_TYPE_SVOP -> 4
        </member>
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_FORCE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_ASM”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_MMX”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_MMXEXT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_SSE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_SSE2”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_SSE3”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_SSE41”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_3DNOW”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_3DNOWEXT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_TSC”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_CPU_ALTIVEC”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_ERROR”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_STARTCODE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_HEADER”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_TIMECODE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_MB”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_COEFF”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_MV”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_RC”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBUG_DEBUG”忽略有格式错误的 XML 注释 -->
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEC_CREATE">
            XVID_DEC_CREATE -> 0
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEC_DESTROY">
            XVID_DEC_DESTROY -> 1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEC_DECODE">
            XVID_DEC_DECODE -> 2
        </member>
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_LOWDELAY”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DISCONTINUITY”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBLOCKY”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEBLOCKUV”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_FILMEFFECT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DERINGUV”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DERINGY”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEC_FAST”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEC_DROP”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_DEC_PREROLL”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ZONE_QUANT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ZONE_WEIGHT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PLG_CREATE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PLG_DESTROY”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PLG_INFO”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PLG_BEFORE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PLG_FRAME”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PLG_AFTER”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_REQORIGINAL”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_REQPSNR”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_REQDQUANTS”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_REQLAMBDA”忽略有格式错误的 XML 注释 -->
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAYBACK_BIAS">
            XVID_PAYBACK_BIAS -> 0
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_PAYBACK_PROP">
            XVID_PAYBACK_PROP -> 1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ENC_CREATE">
            XVID_ENC_CREATE -> 0
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ENC_DESTROY">
            XVID_ENC_DESTROY -> 1
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ENC_ENCODE">
            XVID_ENC_ENCODE -> 2
        </member>
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_GLOBAL_PACKED”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_GLOBAL_CLOSED_GOP”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_GLOBAL_EXTRASTATS_ENABLE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_GLOBAL_DIVX5_USERDATA”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOL_MPEGQUANT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOL_EXTRASTATS”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOL_QUARTERPEL”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOL_GMC”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOL_REDUCED_ENABLE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOL_INTERLACING”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_DEBUG”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_HALFPEL”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_INTER4V”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_TRELLISQUANT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_CHROMAOPT”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_CARTOON”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_GREYSCALE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_HQACPRED”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_MODEDECISION_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_FAST_MODEDECISION_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_RD_BVOP”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_TOPFIELDFIRST”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_ALTERNATESCAN”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_VOP_REDUCED”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_ADVANCEDDIAMOND16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_ADVANCEDDIAMOND8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_USESQUARES16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_USESQUARES8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_HALFPELREFINE16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_HALFPELREFINE8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_QUARTERPELREFINE16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_QUARTERPELREFINE8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_GME_REFINE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_EXTSEARCH16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_EXTSEARCH8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_CHROMA_PVOP”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_CHROMA_BVOP”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_FASTREFINE16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_FASTREFINE8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_HALFPELREFINE16_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_HALFPELREFINE8_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_QUARTERPELREFINE16_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_QUARTERPELREFINE8_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_EXTSEARCH_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_CHECKPREDICTION_RD”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_DETECT_STATIC_MOTION”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_SKIP_DELTASEARCH”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_FAST_MODEINTERPOLATE”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_BFRAME_EARLYSTOP”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_UNRESTRICTED16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_OVERLAPPING16”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_UNRESTRICTED8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_ME_OVERLAPPING8”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:OMCS.Engine.Video.Codec.Xvid.XVID.XVID_KEYFRAME”忽略有格式错误的 XML 注释 -->
        <member name="T:OMCS.Engine.DShow.Core.IFileSourceFilter">
            <summary>
            The interface is exposed by source filters to set the file name and media type of the media file that they are to render.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFileSourceFilter.Load(System.String,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Loads the source filter with the file.
            </summary>
            
            <param name="fileName">The name of the file to open.</param>
            <param name="mediaType">Media type of the file. This can be null.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFileSourceFilter.GetCurFile(System.String@,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Retrieves the current file.
            </summary>
            
            <param name="fileName">Name of media file.</param>
            <param name="mediaType">Receives media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IEnumPins">
            <summary>
            Enumerates pins on a filter.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Next(System.Int32,OMCS.Engine.DShow.Core.IPin[],System.Int32@)">
            <summary>
            Retrieves a specified number of pins.
            </summary>
            
            <param name="cPins">Number of pins to retrieve.</param>
            <param name="pins">Array of size <b>cPins</b> that is filled with <b>IPin</b> pointers.</param>
            <param name="pinsFetched">Receives the number of pins retrieved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Skip(System.Int32)">
            <summary>
            Skips a specified number of pins in the enumeration sequence.
            </summary>
            
            <param name="cPins">Number of pins to skip.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Reset">
            <summary>
            Resets the enumeration sequence to the beginning.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Clone(OMCS.Engine.DShow.Core.IEnumPins@)">
            <summary>
            Makes a copy of the enumerator with the same enumeration state. 
            </summary>
            
            <param name="enumPins">Duplicate of the enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.CoursewareLoadedWaiter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareLoadedWaiter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareLoadedWaiter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.IChatGroup">
            <summary>
            封装一个聊天组的信息。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroup.GetMember(System.String)">
            <summary>
            获取组成员的信息。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroup.GetOtherMembers">
            <summary>
            获取组内除自己之外的其它成员的信息。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.IChatGroup.SomeoneJoin">
            <summary>
            当有新成员加入聊天组时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.IChatGroup.SomeoneExit">
            <summary>
            当某成员掉线或离开聊天组时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatGroup.GroupID">
            <summary>
            聊天组的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatGroup.ChatType">
            <summary>
            聊天组的类型。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatGroup.MyChatUnit">
            <summary>
            自己的Unit对象（当第一次调用时创建）。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.ChatGroup">
            <summary>
            封装一个聊天组的信息。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatGroup.GetOtherMembers">
            <summary>
            获取组内除自己之外的其它成员的信息。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatGroup.GetMember(System.String)">
            <summary>
            获取组成员的信息。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatGroup.DisconnectAllConnectors">
            <summary>
            断开属于当前组的所有连接器。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.ChatGroup.SomeoneJoin">
            <summary>
            当有新成员加入聊天组时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.ChatGroup.SomeoneExit">
            <summary>
            当某成员掉线或离开聊天组时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatGroup.GroupID">
            <summary>
            聊天组的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatGroup.ChatType">
            <summary>
            聊天组的类型。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.RapidServerEngine">
            <summary>
            迅捷的服务端引擎。基于TCP、使用二进制协议。默认允许的最大消息尺寸为100k，心跳超时为30秒。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IRapidServerEngine">
            <summary>
            迅捷的服务端引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IRapidEngine">
            <summary>
            Rapid 引擎基础接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidEngine.LogFilePath">
            <summary>
            记录OMCS.Communication.Basic日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidEngine.Logger">
            <summary>
            日志记录器。如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler,OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
            <param name="basicHandler">用于验证客户端登陆密码。如果不需要验证，则直接传入null。</param>    
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Close">
            <summary>
            关闭服务端引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.FriendsManager">
            <summary>
            【可选】如果需要好友关系支持，则必须设置该属性。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.GroupManager">
            <summary>
            【可选】如果需要组关系支持，则必须设置该属性。可以使用内置的动态组DynamicGroupManager。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.IPAddressBinding">
            <summary>
            通过哪个IP地址提供服务。如果设为null，则表示绑定本地所有IP。默认值为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，就视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeController.QueryClient方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.AutoRespondHeartBeat">
            <summary>
            是否自动回复客户端发过来的心跳消息（将心跳消息原封不动地发回客户端）。默认值为true。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.UseAsP2PServer">
            <summary>
            是否同时作为P2P服务器运行。默认值为true（P2P服务器将使用UDP端口，端口号为当前引擎监听的端口号加1）。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Port">
            <summary>
            当前监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.ServerID">
            <summary>
            服务端实例的唯一编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.UncompletedSendingCount4Busy">
            <summary>
            当通道上尚未发送完成的消息个数大于该值时，判定通道为繁忙（配合发送方法的ActionTypeOnChannelIsBusy参数使用）？默认值为：0。（小于0，表示始终判定为不繁忙）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.UserManager">
            <summary>
            通过此接口，可以获取用户的相关信息以及用户上/下线的事件通知。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.PlatformUserManager">
            <summary>
            平台用户管理器（用于ESPlatform，通常为ASM的远程引用）。可以获取群集中所有在线用户信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.BasicController">
            <summary>
            通过此接口，服务端可以将目标用户从服务器中踢出，并关闭其对应的tcp连接。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.CustomizeController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送/投递自定义信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.FileController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送文件。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.FriendsController">
            <summary>
            通过此接口，服务端可以控制好友通知。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.GroupController">
            <summary>
            通过此接口，服务端可以控制组友通知和主动向某个组广播信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.IMessageVerifier">
            <summary>
            消息验证器，用于验证每个TCP连接上接收到消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.IMessageVerifier.VerifyMessage(System.Net.IPEndPoint,OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState,OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            验证每个TCP连接上接收到消息。如果通不过验证，服务端TCP引擎将会关闭对应的连接。
            </summary>
            <param name="message">将被验证的消息</param>
            <param name="address">TCP连接的客户端地址</param>
            <param name="state">TCP连接的状态</param>
            <returns>验证是否通过</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler,OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
            <param name="basicHandler">用于验证客户端登陆密码。如果不需要验证，则直接传入null。</param> 
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.CreateUdpServerEngineP2P(System.Int32,OMCS.Communication.Plus.Core.IPlusContractHelper,OMCS.Communication.Plus.Application.P2PSession.Server.P2PSessionProcesser,ESBasic.Loggers.IAgileLogger)">
            <summary>
            UDP服务端引擎，用于协助UDP打洞，其只做一件事情：处理客户端的P2PSessionMessageTypeRoom.GetMyPublicUdpPort请求，返回客户端经过NAT之后的UDP端口。
            （1）仅仅使用P2PSessionProcesser处理P2PSessionMessageTypeRoom.GetMyPublicUdpPort消息。
            （2）不需要任何MessageSpy或MessageTransformer。
            （3）监听的端口号默认为TCP引擎的端口号加1。
            （4）该UDP引擎可以从AS中拆出来，作为一个独立的服务器。所有的AS可以公用这同一个UDP服务器，用于协助UDP打洞。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.Close">
            <summary>
            关闭服务端引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.LogFilePath">
            <summary>
            记录OMCS.Communication.Basic日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.Logger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.UserManager">
            <summary>
            通过此接口，可以获取用户的相关信息以及用户上/下线的事件通知。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.PlatformUserManager">
            <summary>
            平台用户管理器。可以获取群集中所有在线用户信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.BasicController">
            <summary>
            通过此接口，服务端可以将目标用户从服务器中踢出，并关闭其对应的tcp连接。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.CustomizeController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送/投递自定义信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.FileController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送文件。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，则视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.AutoRespondHeartBeat">
            <summary>
            是否自动回复客户端发过来的心跳消息（将心跳消息原封不动地发回客户端）。默认值为true。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeInfoController.QueryClient方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.FriendsManager">
            <summary>
            【可选】如果需要好友关系支持，则必须设置该属性。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.GroupManager">
            <summary>
            【可选】如果需要组关系支持，则必须设置该属性。可以使用内置的动态组DynamicGroupManager。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.GroupController">
            <summary>
            通过此接口，服务端可以主动向某个组广播信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.FriendsController">
            <summary>
            通过此接口，服务端可以控制好友通知。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.IPAddressBinding">
            <summary>
            通过哪个IP地址提供服务。如果设为null，则表示绑定本地所有IP。默认值为null。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.UseAsP2PServer">
            <summary>
            是否同时作为P2P服务器运行。默认值为true（P2P服务器将使用UDP端口，端口号为当前引擎监听的端口号加1）。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.P2PEnabled">
            <summary>
            客户端是否开启P2P。即使框架授权了P2P功能，也可以通过该属性关闭P2P。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.Port">
            <summary>
            当前监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.ServerID">
            <summary>
            服务端实例的唯一编号。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageDispatcher">
            <summary>
            消息分派器，核心的消息组件，通过MessagePipe聚合了MessageFilter、MessageSpy。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageDispatcher.DispatchMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            分派并处理消息。该方法不允许抛出异常！内部异常信息可记录到日志！
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.RapidPassiveEngine">
            <summary>
            迅捷的客户端引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine">
            <summary>
            迅捷的客户端引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Initialize(System.String,System.String,System.String,System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成客户端引擎的初始化，与服务器建立TCP连接，连接成功后立即验证用户密码。如果连接失败，则抛出异常。
            </summary>
            <param name="userID">当前登录的用户ID，由数字和字母组成，最大长度为10</param>
            <param name="logonPassword">用户登陆密码。</param>
            <param name="serverIP">服务器的IP地址。</param>
            <param name="serverPort">服务器的端口。</param>       
            <param name="customizeHandler">自定义处理器，用于处理服务器或其它用户发送过来的消息</param>             
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Close">
            <summary>
            关闭并释放客户端通信引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ConnectionInterrupted">
            <summary>
            当客户端与服务器的TCP连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ConnectionRebuildStart">
            <summary>
            自动重连开始时，触发此事件。如果重连成功则将重新登录，并触发RelogonCompleted事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.RelogonCompleted">
            <summary>
            当断线重连成功时，会自动登录服务器验证用户账号密码，并触发此事件。如果验证失败，则与服务器的连接将会断开，且后续不会再自动重连。事件参数表明了登录验证的结果。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ServerAddress">
            <summary>
            当前引擎所连接的服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Connected">
            <summary>
            当前是否处于连接状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ChannelIsBusy">
            <summary>
            与服务器之间的通道是否处于繁忙状态？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.SystemToken">
            <summary>
            系统标志。引擎在初始化时会提交给服务器验证客户端是否是正确的系统。（也可以被借用于登陆增强验证）。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.CurrentUserID">
            <summary>
            当前登录的用户UserID。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.HeartBeatSpanInSecs">
            <summary>
            每隔多长时间（秒）发送一次心跳消息。如果小于等于0，表示不发送定时心跳。默认值为10秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeOutter进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值：0。0表示不设定超时。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.SocketSendBuffSize">
            <summary>
            Socket(网卡)发送缓冲区的大小。默认为8k。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息。如果不需要代理，则设置为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.P2PServerAddress">
            <summary>
            P2P服务器的地址。默认值为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            如果服务端引擎开启了UseAsP2PServer，则可以不设置该属性。如果同时又设置该属性为非null值，则以设置值为准。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.AutoReconnect">
            <summary>
            掉线后，是否自动重连。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.BasicOutter">
            <summary>
            该接口用于向服务器发送基本的请求，如获取自己的IP、获取所有在线用户列表等等。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.CustomizeOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送自定义信息。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.FileOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送文件。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.P2PController">
            <summary>
            该接口用于控制和管理所有的P2P通道。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.FriendsOutter">
            <summary>
            该接口用于获取好友列表及接收好友状态改变通知。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.GroupOutter">
            <summary>
            该接口用于客户端发送与组操作相关的信息和广播信息。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Initialize(System.String,System.String,System.String,System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成客户端引擎的初始化，与服务器建立TCP连接，连接成功后立即验证用户密码。如果连接失败，则抛出异常。
            </summary>
            <param name="userID">当前登录的用户ID，由数字和字母组成，最大长度为10</param>
            <param name="logonPassword">用户登陆密码。</param>
            <param name="serverIP">服务器的IP地址</param>
            <param name="serverPort">服务器的端口</param>       
            <param name="customizeHandler">自定义处理器，用于处理服务器或其它用户发送过来的消息</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Close">
            <summary>
            关闭客户端通信引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ConnectionInterrupted">
            <summary>
            当客户端与服务器的TCP连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ConnectionRebuildStart">
            <summary>
            自动重连开始时，触发此事件。如果重连成功则将重新登录，并触发RelogonCompleted事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.RelogonCompleted">
            <summary>
            当断线重连成功时，会自动登录服务器验证用户账号密码，并触发此事件。如果验证失败，则与服务器的连接将会断开，且后续不会再自动重连。事件参数表明了登录验证的结果。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ServerAddress">
            <summary>
            当前引擎所连接的服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Connected">
            <summary>
            当前是否处于连接状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.LogFilePath">
            <summary>
            记录OMCS.Communication.Basic日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Logger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.BasicOutter">
            <summary>
            该接口用于向服务器发送基本的请求，如获取自己的IP、获取所有在线用户列表等等。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.CustomizeOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送自定义信息。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.FileOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送文件。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.P2PController">
            <summary>
            该接口用于控制和管理所有的P2P通道。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.FriendsOutter">
            <summary>
            该接口用于获取好友列表及接收好友状态改变通知。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.GroupOutter">
            <summary>
            该接口用于客户端发送与组操作相关的信息和广播信息。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.HeartBeatSpanInSecs">
            <summary>
            每隔多长时间（秒）发送一次心跳消息。如果小于等于0，表示不发送定时心跳。默认值为10秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeInfoOutter.Query方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.SystemToken">
            <summary>
            系统标志。引擎在初始化时会提交给服务器验证客户端是否是正确的系统。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.CurrentUserID">
            <summary>
            当前登录的用户UserID。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.P2PServerAddress">
            <summary>
            如果需要启用P2P支持，则需要设定P2P服务器的地址。默认值为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ChannelIsBusy">
            <summary>
            与服务器之间的通道是否处于繁忙状态？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.StressTesting">
            <summary>
            是否用于性能测试。如果是，则设为true，以加快客户端引擎的启动速度，方便测试。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.AutoReconnect">
            <summary>
            掉线后，是否自动重连。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值：0。0表示不设定超时。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents">
            <summary>
            与文件传送相关的事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransStarted">
            <summary>
            当某个文件开始传送时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileResumedTransStarted">
            <summary>
            当某个文件续传开始时，触发该事件。（将不再触发FileTransStarted事件）
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransProgress">
            <summary>
            文件传送的进度。参数为projectID（文件传送项目的编号） ,total（文件大小） ,transfered（已传送字节数）
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransDisruptted">
            <summary>
            文件传送中断时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransCompleted">
            <summary>
            文件传送完成时，触发该事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType">
            <summary>
            文件传输中断的原因。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.RejectAccepting">
            <summary>
            接收方拒绝接收
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.ActiveCancel">
            <summary>
            自己主动取消
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.DestCancel">
            <summary>
            对方取消
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.DestOffline">
            <summary>
            对方掉线
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.ReliableP2PChannelClosed">
            <summary>
            与对方的可靠的P2P通道关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.SelfOffline">
            <summary>
            网络中断、自己掉线
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.InnerError">
            <summary>
            自己系统内部错误，如文件读取失败等
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.DestInnerError">
            <summary>
            对方系统内部错误，如文件读取失败等
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.IPlusContractHelper">
            <summary>
            增强的IContractHelper，增加了创建消息等功能。即可用于服务端、也可用于客户端。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IContractHelper">
            <summary>
            与消息协议相关的决策。
            2005.10.07
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IPlusContractHelper.ParseBody``1(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            解析消息体。
            </summary>
            <typeparam name="TBody">消息体的类型</typeparam>
            <param name="msg">被解析的消息</param>
            <returns>解析得到的消息体对象</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IPlusContractHelper.CreateMessage``1(OMCS.Communication.Basic.Core.IMessageHeader,``0)">
            <summary>
            创建消息。实现该方法时，需要根据body的长度来设置header中MessageBodyLength属性。通常给Server端使用。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.InConnectionManager">
            <summary>
            InConnectionManager 用于管理所有外来进入的TCP P2P连接。
            zhuweisky 2010.05.24
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.Passive.GroupOutter">
            <summary>
            IGroupOutter 的实现。
            (1)内置组成员及其状态缓存。
            (2)尽可能使用P2P通道发送广播信息。
            (3)在从服务器获取组成员时，尝试与在线的组成员创建P2P连接。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.Passive.IGroupOutter">
            <summary>
            用于客户端发送与组操作相关的信息和广播信息。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Group.Passive.IGroupOutter.GetGroupMembers(System.String)">
            <summary>
            获取组的成员。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Group.Passive.IGroupOutter.Broadcast(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在组内广播信息。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">信息的内容</param>       
            <param name="action">当通道繁忙时采取的操作。</param>        
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Group.Passive.IGroupOutter.GroupmateConnected">
            <summary>
            当组成员上线时，触发该事件。参数：MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Group.Passive.IGroupOutter.GroupmateOffline">
            <summary>
            当组成员下线时，触发该事件。参数：MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Group.Passive.IGroupOutter.BroadcastReceived">
            <summary>
            当接收到某个组内的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent。
            如果broadcasterID为null，表示是服务端发送的广播。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.FriendsMessageTypeRoom">
            <summary>
            所有基本好友空间的消息类型空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.FriendsMessageTypeRoom.FriendNotify">
            <summary>
            FriendNotify 当某个用户上下线时，通知其好友。对应协议为FriendNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.FriendsMessageTypeRoom.GetFriends">
            <summary>
            获取好友列表。请求协议为ReqFriendsContract，回复的消息主体为ResFriendsContract。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.Server.IFileController">
            <summary>
            服务端的OMCS.Communication.Plus.Application.FileTransfering.Server.FileMessageProcesser实现了该接口。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController">
            <summary>
            用于控制文件（夹）发送及文件传送状态的查看。即可用于客户端也可用户服务端。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginSendFile(System.String,System.String,System.String,System.String@)">
            <summary>
            发送方准备发送文件（夹）。目标用户必须在线。如果对方同意接收，则后台会自动发送文件（夹）；如果对方拒绝接收，则会取消发送。（通过FileAnswerReceived事件，可以得知对方是否同意接收。）
            </summary>
            <param name="accepterID">接收文件（夹）的用户ID</param>
            <param name="fileOrDirPath">被发送文件（夹）的路径</param>    
            <param name="comment">其它附加备注。如果是在类似FTP的服务中，该参数可以是保存文件（夹）的路径</param>       
            <param name="projectID">返回文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginSendFile(System.String,System.String,System.String,OMCS.Communication.Plus.FileTransceiver.SendingFileParas,System.String@)">
            <summary>
            发送方准备发送文件（夹）。目标用户必须在线。如果对方同意接收，则后台会自动发送文件；如果对方拒绝接收，则会取消发送。（通过FileResponseReceived事件，可以得知对方是否同意接收。）
            </summary>
            <param name="accepterID">接收文件（夹）的用户ID</param>
            <param name="fileOrDirPath">被发送文件（夹）的路径</param>       
            <param name="comment">其它附加备注。如果是在类似FTP的服务中，该参数可以是保存文件（夹）的路径</param>
            <param name="paras">发送参数设定。传入null，表示采用IFileSenderManager的默认设置。</param>
            <param name="projectID">返回文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginReceiveFile(System.String,System.String)">
            <summary>
            接收方如果同意接收文件（夹），则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="savePath">存储文件（夹）的路径。请特别注意，如果已经存在同名的文件（夹），将覆盖之。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginReceiveFile(System.String,System.String,System.Boolean)">
            <summary>
            接收方如果同意接收文件（夹），则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="savePath">存储文件（夹）的路径。请特别注意，如果已经存在同名的文件（夹），将覆盖之。</param>
            <param name="allowResume">如果满足续传条件，是否启用续传。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.RejectFile(System.String)">
            <summary>
            接收方如果拒绝接收文件（夹），则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.RejectFile(System.String,System.String)">
            <summary>
            接收方如果拒绝接收文件（夹），则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="cause">拒绝接收的原因</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.GetTransferingAbout(System.String)">
            <summary>
            获取与目标用户相关的所有文件传送项目的projectID的列表（包括未被接收方回复的传送项目）。
            </summary>
            <param name="destUserID">目标用户ID。如果为null，则表示获取所有正在传送项目的projectID。</param>
            <returns>projectID的列表</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelTransfering(System.String)">
            <summary>
            主动取消正在发送或接收的文件（夹）（包括未被接收方回复的传送项目），并通知对方。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelTransfering(System.String,System.String)">
            <summary>
            主动取消正在发送或接收的文件（夹）（包括未被接收方回复的传送项目），并通知对方。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelTransferingAbout(System.String)">
            <summary>
            取消与目标用户相关的正在传送项目（包括未被接收方回复的传送项目）。
            </summary>
            <param name="destUserID">目标用户ID。如果为null，则表示取消所有正在传送项目。</param> 
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelAllTransfering">
            <summary>
            取消所有正在传送项目（包括未被接收方回复的传送项目）。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.GetTransferingProject(System.String)">
            <summary>
            获取正在发送或接收中的文件传送项目（包括未被接收方回复的传送项目）。如果不存在目标项目，则返回null。
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件（夹）。单位：秒。默认值：300。
            如果值小于等于0，表示不使用续传功能。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileRequestReceived">
            <summary>
            当文件接收方收到了来自发送方发送文件（夹）的请求时，触发此事件。该事件将在后台线程中触发，如果处理该事件时需要刷新UI，则需要转发到UI线程。
            当接收方确定要接收或拒绝文件时，请调用BeginReceiveFile方法或RejectFile方法。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileResponseReceived">
            <summary>
            当文件接收方回复了同意/拒绝接收文件（夹）时，在发送方触发此事件。参数为 TransmittingProject - bool（同意？）。可以通过参数TransmittingProject的AccepterID属性得知接收方的UserID。
            通常，客户端预定该事件，只需要告知文件发送者，而不需要再做任何额外处理。该事件将在后台线程中触发，如果处理该事件时需要刷新UI，则需要转发到UI线程。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileSendingEvents">
            <summary>
            该事件接口暴露了所有正在发送文件（夹）的实时状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileReceivingEvents">
            <summary>
            该事件接口暴露了所有正在接收的文件（夹）的实时状态。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler">
            <summary>
            自定义信息处理器接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler.HandleInformation(System.String,System.Int32,System.Byte[])">
            <summary>
            处理接收到的自定义信息（包括大数据块信息）。
            </summary>
            <param name="sourceUserID">发送该信息的用户ID。如果为null，表示信息发送者为服务端。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler.HandleQuery(System.String,System.Int32,System.Byte[])">
            <summary>
            处理接收到的请求并返回应答信息。
            </summary>
            <param name="sourceUserID">发送该请求信息的用户ID。如果为null，表示信息发送者为服务端。</param>     
            <param name="informationType">自定义请求信息的类型</param>  
            <param name="info">请求信息</param>
            <returns>应答信息</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.EmptyCustomizeHandler">
            <summary>
            不做任何处理的CustomizeHandler。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.HandingException">
            <summary>
            在处理Query系列方法发出的的请求时，如果处理方出现未捕获的异常，则请求方的Query调用会抛出HandingException。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.CallbackHandler">
            <summary>
            用于处理回复信息的方法委托。
            </summary>
            <param name="ee">如果为TimeoutException，表示超时没有回；如果为HandingException，表示处理方在处理时抛出异常。只有为null时，response参数才有效。</param>
            <param name="response">回复消息</param>
            <param name="tag">状态数据</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract">
            <summary>
            大数据块的某个片段。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.BlobID">
            <summary>
            大数据块唯一编号。从1开始计数，逐个递增。对于那些只有一个Fragment的Blob，可以将BlobID设置为-1，以减少编号的使用。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.FragmentIndex">
            <summary>
            片段的索引。从0开始计数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.Fragment">
            <summary>
            片段内容。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.IsLast">
            <summary>
            是否为最后一个片段。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IRegularSender">
            <summary>
            客户端正规消息发送器。将消息发送给服务端或其他在线用户（可使用P2P通道），并保证消息在发送之前经过MessagePipe。  
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IRegularSender.IsP2PChannelExist(System.String)">
            <summary>
            到目标用户的P2P通道是否存在。
            </summary>
            <param name="destUserID">目标用户ID</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IRegularSender.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.Boolean,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送给服务端或其他在线用户（如果P2P通道可用，且可靠（比如TCP通道、或增强的UDP通道），则将使用P2P通道发送），并保证消息在发送之前经过MessagePipe。
            </summary>
            <param name="msg">要发送的消息</param>      
            <param name="directToServer">如果值为true，当为P2P消息时，即使P2P Channel可用，是否也通过服务器中转</param>     
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IRegularSender.SendByP2PChannel(OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel,System.Boolean,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            使用P2P通道（不一定可靠）将消息发送给其他在线用户，并保证消息在发送之前经过MessagePipe。
            </summary>
            <param name="p2pMessage">要发送的P2P消息</param>      
            <param name="actionType">当为P2P通道不存在时，采取的策略</param>    
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="destUserID">接收P2P消息的用户ID</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IRegularSender.Connected">
            <summary>
            与服务器是否连接。如果是基于UDP，则返回null。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs">
            <summary>
            常见的网络的最大传输单元值。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.SuperChannel">
            <summary>
            超通道。65535
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.TokenRing16M">
            <summary>
            16M令牌环。17914
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.TokenRing4M">
            <summary>
            4M令牌环。4464
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.FDDI">
            <summary>
            4352
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.Ethernet">
            <summary>
            以太网。1500
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.IEEE802_3">
            <summary>
            IEEE802.3/802.2。1492
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.X_25">
            <summary>
            X.25。576
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.LowDelay">
            <summary>
            点对点，低时延。296
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.MTUs.MTUValueArrayInAscOrder">
            <summary>
            常见的MTU值的数组，升序排列
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine">
            <summary>
            BaseUdpEngine Udp引擎的基类，支持增强型的UDP。由ContractFormatStyle属性指定采用的协议类型。
            注意：理论上网络支持的最大的udp数据报为65507(64k减去各协议头)，由MaxUdpDatagramSize常量表示。 
            MaxUdpDatagramLength 属性可以设置拆分后得到的UDP数据报的最大尺寸。当要发送的消息大于MaxUdpDatagramLength时，BaseUdpEngine会将其拆分为多个小的UDP数据报发送（异步发送不会拆分消息）。
            zhuweisky 2007.04.06
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.IUdpEngine">
            <summary>
            IUdpEngine Udp引擎基础接口。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.INetworkEngine">
            <summary>
            所有网络引擎（包括服务端引擎、客户端引擎、TCP引擎、UDP引擎、二进制引擎、文本引擎）的基础接口。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.INetworkEngine.Initialize">
            <summary>
            初始化并启动网络引擎。如果修改了引擎配置参数，在应用新参数之前必须先重新调用该方法初始化引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.INetworkEngine.DisposeAsyn">
            <summary>
            当不再使用当前引擎实例时，释放它。（异步方式）
            注意：对于UDP或客户端引擎，如果消息是同步处理的(HandleMessageAsynchronismly为false)，请不要在消息处理器中调用Dispose方法，否则，会导致死锁。因为停止引擎要等到最后一条消息处理完毕才会返回。
            可以转向调用异步的DisposeAsyn方法。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ProtocolType">
            <summary>            
            传输层协议类型，TCP或UDP
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ContractFormatStyle">
            <summary>
            引擎所采用的协议类型（二进制、文本）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.CreateTime">
            <summary>
            引擎实例的创建时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ServerID">
            <summary>
            每个服务器的唯一标识。该属性用于ESPlatform。
            如果当前引擎为服务端引擎，该ID表示当前服务端实例的编号。
            如果当前引擎为客户端引擎，该ID表示当前客户端连接上的服务端实例的编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.Port">
            <summary>
            表示要监听本地的哪个端口。如果设定其值小于等于0，则表示由系统自动分配。      
            注意，引擎初始化完成后，不能再修改该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.IPAddress">
            <summary>
            对于服务端引擎，表示要绑定本地的哪个IP，如果设为null，则表示绑定本地所有IP。
            对于客户端引擎，表示要绑定本地的哪个IP与服务器进行通信。如果设为null（其值会在初始化完成后被修改，断线重连后也可能改变），则自动选择地址列表中的某一个。
            注意，引擎初始化完成后，不能再修改该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.EsfLogger">
            <summary>
            OMCS.Communication.Basic 规定的标准的日志记录器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.SocketSendBuffSize">
            <summary>
            Socket(网卡)发送缓冲区的大小。默认为8k。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.SocketReceiveBuffSize">
            <summary>
            Socket(网卡)接收缓冲区的大小。默认为8k。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.MaxMessageSize">
            <summary>
            网络引擎能够接收的最大的消息尺寸。据此网络引擎可以为每个Session/Connection开辟适当大小的接收缓冲区。
            默认为1k。当接收到的消息尺寸超过MaxMessageSize时，将会关闭对应的连接（对TCP）或丢弃数据（对UDP）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.MessageDispatcher">
            <summary>
            消息分派器。网络引擎将调用它来分派接收到的消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ContractHelper">
            <summary>
            依据ContractFormatStyle属性，注入相应的ContractHelper。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.Disposed">
            <summary>
            引擎实例是否已经被释放。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.UncompletedSendingCount4Busy">
            <summary>
            当通道上尚未发送完成的消息个数大于该值时，判定通道为繁忙（配合发送方法的ActionTypeOnChannelIsBusy参数使用）？默认值为：0。（小于0，表示始终判定为不繁忙）
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.EngineDisposed">
            <summary>
            当引擎实例被释放时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.MessageReceived">
            <summary>
            接收到一个完整的消息时触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.MessageSent">
            <summary>
            将消息成功发送之后触发该事件
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.InvalidMessageReceived">
            <summary>
            当接收到不完整或无法解析的数据时触发该事件
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IUdpEngine.ContractFormatStyle">
            <summary>
            引擎所采用的协议类型（二进制、文本）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IUdpEngine.UseEnhancedUdp">
            <summary>
            内部是否使用增强型的EnhancedUdpClinet。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IUdpEngine.EnhancedUdpClient">
            <summary>
            引擎内部采用的EnhancedUdpClient实例。       
            get方法：如果UseEnhancedUdp为false，则返回null。暴露该属性使得应用可以监控增强型的EnhancedUdpClient的运行状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.Port">
            <summary>
            绑定的Udp端口。对于服务端，将会精确的绑定到指定的端口，如果端口已经被占用，则在初始化时将抛出异常；
            对于客户端，如果指定的端口被占用，则会选取相邻的端口进行绑定，此时可以通过get属性得到其绑定的端口号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.ContractHelper">
            <summary>
            依据ContractFormatStyle属性，注入相应的ContractHelper
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.SocketSendBuffSize">
            <summary>
            网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.SocketReceiveBuffSize">
            <summary>
            网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.UseEnhancedUdp">
            <summary>
            内部是否使用增强型的EnhancedUdpClinet。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.EnhancedUdpClient">
            <summary>
            引擎内部采用的EnhancedUdpClient实例。        
            get方法：如果UseEnhancedUdp为false，则返回null。暴露该属性使得应用可以监控增强型的EnhancedUdpClient的运行状态。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.NetworkEngineFactory">
            <summary>
            网络引擎工厂。用于创建各种类型的网络引擎实例。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.BaseMessageTransformer">
            <summary>
            消息变换器的基类。使得可以配置要捕获哪些类型消息或不捕获哪些类型的消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageTransformer">
            <summary>
            消息变换器。用于对请求消息和回复消息进行截获,然后处理转换这些消息，比如加密/解密、记录、追踪等。
            将接收到的消息交给CaptureReceivedMessage处理，将要发送的消息交给CaptureBeforeSendMessage处理即可。
            zhuweisky 2005.12.28
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageTransformer.CaptureBeforeSendMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            截获即将发出去的消息，可以对截获到的消息进行转换，比如加密、压缩等。
            </summary>
            <param name="msg">即将发送的消息</param>
            <returns>经过截获转换得到的结果</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageTransformer.CaptureReceivedMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            截获收到的消息，可以对截获到的消息进行转换，比如解密、解压缩等。
            </summary>      
            <param name="msg">从网络接收到的消息</param>
            <returns>经过截获转换得到的结果</returns>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle">
            <summary>
            消息捕获的模式。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle.Default">
            <summary>
            默认截获所有消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle.CapturedList">
            <summary>
            配置的列表为捕获列表，只捕获列表中列出的消息类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle.NotCapturedList">
            <summary>
            配置的列表为不捕获列表，只捕获列表中没有列出的消息类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.NetworkMonitor">
            <summary>
            网络状态监控器。当本地网络连接状态发生变化时，将触发NetworkStateChanged事件来通知外部。
            ???? 在某些电脑上与视频组件有冲突。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkMonitor.Initialize(System.Int32,System.Boolean)">
            <summary>
            初始化检测器。
            </summary>
            <param name="detectSpanInSecs">每隔几秒检测一次网络状态。</param>
        </member>
        <member name="T:NAudio.Utils.HResult">
            <summary>
            HResult
            </summary>
        </member>
        <member name="F:NAudio.Utils.HResult.S_OK">
            <summary>
            S_OK
            </summary>
        </member>
        <member name="F:NAudio.Utils.HResult.S_FALSE">
            <summary>
            S_FALSE
            </summary>
        </member>
        <member name="F:NAudio.Utils.HResult.E_INVALIDARG">
            <summary>
            E_INVALIDARG (from winerror.h)
            </summary>
        </member>
        <member name="M:NAudio.Utils.HResult.MAKE_HRESULT(System.Int32,System.Int32,System.Int32)">
            <summary>
            MAKE_HRESULT macro
            </summary>
        </member>
        <member name="M:NAudio.Utils.HResult.GetHResult(System.Runtime.InteropServices.COMException)">
            <summary>
            Helper to deal with the fact that in Win Store apps,
            the HResult property name has changed
            </summary>
            <param name="exception">COM Exception</param>
            <returns>The HResult</returns>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.IAudioClient">
            <summary>
            Windows CoreAudio IAudioClient interface
            Defined in AudioClient.h
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IAudioClient.GetBufferSize(System.UInt32@)">
            <summary>
            The GetBufferSize method retrieves the size (maximum capacity) of the endpoint buffer.
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IAudioClient.GetService(System.Guid,System.Object@)">
            <summary>
            The GetService method accesses additional services from the audio client object.
            </summary>
            <param name="interfaceId">The interface ID for the requested service.</param>
            <param name="interfacePointer">Pointer to a pointer variable into which the method writes the address of an instance of the requested interface. </param>
        </member>
        <member name="T:OMCS.Contracts.WBWorkTagType">
            <summary>
            白板Work的Tag的类型。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.WBWorkTagType.CoursewareList">
            <summary>
            课件列表。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.WBWorkTagType.CurrentCoursewareFile">
            <summary>
            Work当前使用的课件的文件。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.CurveView">
            <summary>
            CurveView 自由曲线。
            zhuweisky 2010.03.23
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.BaseRectangleView">
            <summary>
            BaseRectangleView 所有拥有矩形边框的View都可从此基类继承。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.BaseView">
            <summary>
            BaseView 所有视图元件的基类。
            注意，在视频会议系统中，必须保证BaseView的各个与事件是NonSerialized，从而在New View时，不会序列化这些事件的预订者。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.IView">
            <summary>
            IView 所有可视化主体的基础接口。
            zhuweisky 2006.09.19
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.IView.Contains(System.Drawing.Point)">
            <summary>
            Contains 判断目标点是否落在IViewObject的范围内
            </summary>      
        </member>
        <member name="M:OMCS.Engine.Paint.Views.IView.OnClick(OMCS.Engine.Paint.Views.IPanel,OMCS.Engine.Paint.Views.CoordinateTransformatter)">
            <summary>
            如果View在被Click的时候，有特别的行为，则可以实现该方法。
            </summary>        
        </member>
        <member name="P:OMCS.Engine.Paint.Views.IView.CheckBoundary">
            <summary>
            是否检测边界。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.IView.CanvasBoundary">
            <summary>
            画布的边界。值为null时，表示没有边界。如果边界存在，则View只能在边界内移动。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.BaseView.CanvasBoundary">
            <summary>
            画布的边界。值为null时，表示没有边界。如果边界存在，则View只能在边界内移动。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.BaseView.CheckBoundary">
            <summary>
            是否检测边界。
            </summary>
        </member>
        <!-- 对于成员“T:OMCS.Engine.Paint.ViewEditors.LineEditor”忽略有格式错误的 XML 注释 -->
        <member name="T:OMCS.Engine.Paint.ViewEditors.IViewEditor">
            <summary>
            IViewEditor 用于接收鼠标的拖拽事件，以编辑即将新加入的View对象的编辑器的基础接口。
            zhuweisky 2010.03.21
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.ViewEditors.IViewEditor.OnPaint(System.Drawing.Graphics)">
            <summary>
            当控件Paint事件时，调用该方法绘制当前正在编辑的对象。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.IAudioCapturer">
            <summary>
            原始声音采集器。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.IAudioCapturer.Start">
            <summary>
            开始采集
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.IAudioCapturer.Stop">
            <summary>
            停止采集
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.IAudioCapturer.DataFromOMCS">
            <summary>
            采集的数据是否来自OMCS的MicrophoneConnector  的 AudioDataEncodedReceived  事件。一般返回false即可。
            （比如，在部署相互关联的多套OMCS服务器时，可在桥接器上使用。注意，若启用该属性，则在连接自己测试时，要将IMultimediaManager.Advanced.UseOriginImage4Myself设置为false。）
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.IAudioCapturer.AudioCaptured">
            <summary>
            当采集到10ms的声音数据（16bit，16000，1声道）时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.IAudioCapturer.CaptureError">
            <summary>
            当采集发生错误时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.IAudioCapturer.IsCapturing">
            <summary>
            是否正在采集？
            </summary>
        </member>
        <member name="T:OMCS.Tools.SoundDevice">
            <summary>
            音频设备。用于获取本地所有音频设备信息。
            </summary>
        </member>
        <member name="M:OMCS.Tools.SoundDevice.GetMicrophoneCount">
            <summary>
            获取麦克风的数量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Tools.SoundDevice.GetMicrophones">
            <summary>
            枚举当前计算机上的所有麦克风设备。
            </summary>        
        </member>
        <member name="M:OMCS.Tools.SoundDevice.GetSpeakerCount">
            <summary>
            获取扬声器的数量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Tools.SoundDevice.GetSpeakers">
            <summary>
            枚举当前计算机上的所有扬声器设备。
            </summary>        
        </member>
        <member name="M:OMCS.Tools.SoundDevice.IsSoundCardInstalled">
            <summary>
            当前计算机是否安装了声卡。
            </summary>        
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector">
            <summary>
            动态远程桌面连接器。可以动态修改绘制的面板。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.SetViewer(System.Windows.Forms.ScrollableControl)">
            <summary>
            设置用于显示桌面的控件。必须要在UI线程中调用该方法。
            注意：请启用控件的双缓冲绘制，以避免闪烁。调用SetStyle(ControlStyles.OptimizedDoubleBuffer, true);
            </summary>
            <param name="newPanel">要绘制视频的控件。可以为null。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.GetCurrentImage">
            <summary>
            获取当前正在绘制的图像。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.GetVideoQuality">
            <summary>
            获取当前视频的编码质量。0~31，数值越小越清晰。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的桌面的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出桌面</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ChangeOwnerDesktopEncodeQuality(System.Int32)">
            <summary>
            修改Owner的桌面编码质量。
            </summary>
            <param name="quality">编码质量。取值0~31，值越小，越清晰。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.GetReceivedFrameCount">
            <summary>
            获取自连接成功后接收到的视频帧的总数。
            </summary>
            <returns></returns>
        </member>
        <member name="F:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerDesktopSizeChanged">
            <summary>
            当Owner共享桌面的大小发生变化时，触发此事件。参数为新的大小。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerOutputChanged">
            <summary>
            当Owner桌面图像输出控制改变时，触发此事件。【对应于Owner端的多媒体管理器的OutputDesktop属性的修改】
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerAllowControlChanged">
            <summary>
            当Owner允许guest操作桌面的授权改变时，触发此事件。【对应于Owner端的多媒体管理器的AllowControl属性的修改】
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerOutput">
            <summary>
            Owner是否输出了桌面图像。【对应于Owner端的多媒体管理器的OutputDesktop属性】
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerAllowControl">
            <summary>
            Owner是否允许操作桌面。【对应于Owner端的多媒体管理器的AllowControl属性】。注意其与WatchingOnly的区别：只有OwnerAllowControl为true的前提下，WatchingOnly的属性设置才有效果。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.WatchingOnly">
            <summary>
            是否仅仅允许查看远程桌面，但是不能进行操作。 默认值为true。注意：该属性用于guest端控制，前提是Owner端的AllowControl必须为true，才有效；否则，即使WatchingOnly为false，仍然不能操作桌面。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ShowMouseCursor">
            <summary>
            是否在远程桌面上显示Owner的鼠标光标。默认值为true。
            注意：前提是WatchingOnly为true时，该属性设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.DesktopSize">
            <summary>
            远程桌面的尺寸（长和宽都已经修正为8的整数倍）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.AdaptiveToViewerSize">
            <summary>
            是否将屏幕图像自动拉伸成Viewer控件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.DisplayVideoParameters">
            <summary>
            是否在桌面图像上面打印视频的相关信息（视频尺寸、编码质量、帧频）。默认值：false。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ISpecifyPropertyPages">
            <summary>
            The interface indicates that an object supports property pages.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISpecifyPropertyPages.GetPages(OMCS.Engine.DShow.Core.CAUUID@)">
            <summary>
            Fills a counted array of GUID values where each GUID specifies the
            CLSID of each property page that can be displayed in the property
            sheet for this object.
            </summary>
            
            <param name="pPages">Pointer to a CAUUID structure that must be initialized
            and filled before returning.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Server.WBWorkManager">
            <summary>
            白板Work管理器，课件管理器。
            课件列表由服务端主动管理。发生变化时，服务端主动通知对应的客户端。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Messages.Server.IWBWorkGetter">
            <summary>
            IWBWorkGetter 根据groupID获取对应的Work实例。
            </summary>
        </member>
        <member name="M:OMCS.Server.WBWorkManager.UpdateCoursewares(System.String)">
            <summary>
            当第一次新建白板的Work时，或者用户上传课件完成时，调用此方法刷新课件列表并通知白板用户。
            </summary>        
        </member>
        <member name="T:OMCS.Passive.ShortMessages.IShortMessageController">
            <summary>
            短信控制器。
            （1）可以采集当前用户的麦克风或/和摄像头的数据，以构造一个短信消息。
            （2）三种短信采集模式：仅仅采集语音，仅仅采集视频，同时采集语音和视频。
            （3）当收到来自其它用户短信时，将触发ShortMessageReceived事件。
            （4）可以发送短信给目标用户。
            注意：当IShortMessageController完成初始化后，将会持续占用摄像头/麦克风，直到将IShortMessageController释放。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IShortMessageController.Initialize">
            <summary>
            初始化短信组件。初始化完成时，将根据ShortMessageMode的设置，启动麦克风或（和）摄像头设备。
            如果不再使用短信组件，则请调用Dispose方法，以释放对设备的占用。
            调用Dispose方法释放后，可以在需要的时候重新调用Initialize，再次进行初始化。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IShortMessageController.StartCapture">
            <summary>
            开始采集短信。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IShortMessageController.StopCapture">
            <summary>
            结束采集短信，返回短信的唯一ID。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IShortMessageController.Send(OMCS.Passive.ShortMessages.ShortMessage,System.String)">
            <summary>
            发送短信。短信发送完毕，调用才会返回，如果不想阻塞，可考虑异步调用本方法。
            </summary>
            <param name="microMessage">短信</param>
            <param name="destUserID">接收者ID</param>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.IShortMessageController.ShortMessageReceived">
            <summary>
            当接收到目标用户的短信时，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.IShortMessageController.Initialized">
            <summary>
            是否已经初始化？
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.IShortMessageController.IsCapturing">
            <summary>
            是否正在采集短信。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.Codec.SpeexEncoder">
            <summary>
            对Speex的C#封装。
            zhuweisky 2010.05.13
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.Codec.IAudioEncoder">
            <summary>
            音频编码器基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.Codec.IAudioEncoder.Encode(System.Byte[])">
            <summary>
            对音频数据进行编码。如果编解码器已经被释放，则返回null。
            </summary>
            <param name="data">原始音频数据</param>
            <returns>编码后的数据。如果编解码器已经被释放，则返回null。</returns>
        </member>
        <member name="M:OMCS.Engine.Audio.Codec.SpeexEncoder.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化。
            </summary>
            <param name="quality">编码质量，取值0~10。值越大，质量越高。</param>
        </member>
        <member name="M:OMCS.Engine.Audio.Codec.SpeexEncoder.Encode(System.Byte[])">
            <summary>
            将采集到的音频数据进行编码。
            如果为静音帧，则返回长度为0的数组。
            </summary>       
        </member>
        <member name="T:OMCS.Engine.Audio.Codec.SpeexDecoder">
            <summary>
            对Speex的C#封装。
            zhuweisky 2010.05.13
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.Codec.IAudioDecoder">
            <summary>
            音频解码器基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.Codec.IAudioDecoder.Decode(System.Byte[])">
            <summary>
            对音频数据进行解码码。如果编解码器已经被释放，则返回null。
            </summary>
            <param name="data">编码后的音频数据</param>
            <returns>解码后的数据。如果编解码器已经被释放，则返回null。</returns>
        </member>
        <member name="M:OMCS.Engine.Audio.Codec.SpeexDecoder.#ctor(System.Int32)">
            <summary>
            初始化。
            </summary>
            <param name="quality">编码质量，取值0~10。值越大，质量越高。</param>
        </member>
        <member name="M:OMCS.Engine.Audio.Codec.SpeexDecoder.Decode(System.Byte[])">
            <summary>
            将编码后的数据进行解码得到原始的音频数据。
            </summary>      
        </member>
        <member name="M:OMCS.Engine.Audio.Mixer.EngineAction">
            <summary>
            每隔5秒调整一次JitterBuffer的大小，每隔10秒触发一次缺音频帧的统计事件
            </summary>        
        </member>
        <member name="M:OMCS.Engine.Audio.Mixer.Play(System.String,System.Byte[])">
            <summary>
            将接收到的音频数据包解析后并混音播放。
            </summary>
            <param name="lineID">音频数据的来源（UserID）</param>
            <param name="data">EncodedFrameCountInTransPackage个编码帧，EncodedFrameCountInTransPackage*12个采集帧</param>
        </member>
        <member name="M:OMCS.Engine.Audio.Mixer.RemoveAudioBuffer(System.String)">
            <summary>
            当不再使用目标AudioPlayBuffer后，调用此方法将其移除
            </summary>
            <param name="lineID">可以为virtualLineID</param>
        </member>
        <member name="M:OMCS.Engine.Audio.Mixer.GetDelayMSecs(System.String)">
            <summary>
            获取因为JitterBuffer而导致的音频延迟时间。
            </summary>       
        </member>
        <member name="M:OMCS.Engine.Audio.Mixer.GetNextMixedFrame">
            <summary>
            每次返回20ms的语音数据。如果返回的长度为0，则表示为静音帧。
            </summary>        
        </member>
        <member name="E:OMCS.Engine.Audio.Mixer.BufferDepthChanged">
            <summary>
            当某个JitterBuffer的尺寸发生变化时，将触发该事件。lineID - newSize - count。
            事件参数newSize为-1，表示在上一个统计周期内，接收到的帧数远远小于预期值。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.Mixer.AudioDataReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。（解码后的数据，20ms）
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.Mixer.DataLackStatis">
            <summary>
            每隔10秒就触发一次，事件参数指明了在这10秒内缺少音频数据的次数。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.Mixer.MaxAmplifier">
            <summary>
            声音放大的倍数。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.Mixer.LastFrameMaxUsedCount">
            <summary>
            在缺少音频帧时，使用最后一个音频帧进行填补的最大次数（一帧为10ms）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Serialization.CompactFieldSerializer">
            使用反射读取/设置Field的值(性能为CompactPropertySerializer的1/2)
            <summary>
            CompactFieldSerializer 紧凑序列化器，序列化所有没有标记为[NonSerialized]的Field(不支持混淆加密Field的名称，除非序列化和反序列化使用同一加密后的程序集)。   
            (1)支持类和结构的序列化。被序列化的类或结构必须有默认的Ctor（Font就没有默认Ctor）。
            (2)支持的类型：基础数据类型(如int，long，bool等)，string，byte[]。   
            (3)支持嵌套。
            (4)除byte[]/List()]/Dictionary(,)外，不支持其它的集合类型。
            (5)不支持循环引用。如果存在循环引用，序列化时将导致死循环。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Serialization.ICompactSerializer">
            <summary>
            ICompactSerializer 紧凑序列化器，产生紧凑的字节流。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Serialization.ICompactSerializer.Deserialize``1(System.Byte[],System.Int32)">
            <summary>
            反序列化。
            </summary>
            <typeparam name="T">反序列化后得到的对象的类型</typeparam>
            <param name="buff">数据缓冲区</param>
            <param name="startIndex">偏移起始点</param>
            <returns>类型为T的对象</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Serialization.ICompactSerializer.Serialize``1(``0)">
            <summary>
            将对象序列化为字节流。
            </summary>
            <typeparam name="T">对象的类型</typeparam>
            <param name="obj">要序列化的对象</param>
            <returns>序列化结果</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Serialization.ICompactSerializer.Serialize(System.Type,System.Object)">
            <summary>
            将对象序列化为字节流。
            </summary>
            <param name="type">要序列化的对象的类型</param>
            <param name="obj">要序列化的对象</param>
            <returns>序列化结果</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FilePackage">
            <summary>
            文件分割成包之后被传输的协议。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FilePackage.ProjectID">
            <summary>
            ProjectID 用于标志Package属于同一个文件，由"SenderID_随机数"构成	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FilePackage.Index">
            <summary>
            第一个Package的Index为1。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.PackageType">
            <summary>
            传送项目中数据包的类型
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.FileTransferingPackage">
            <summary>
            单个文件传送的数据包。或者，文件夹传送项目中某个文件的数据包。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.FoldTransferingNextFile">
            <summary>
            文件夹传送中的命令 -- 即将传送下一个文件。对应的Data应解析为FoldTransferingNextFileInfo
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.NewChildFolder">
            <summary>
            文件夹传送中的命令 -- 子文件夹。对应的Data使用UTF-8解析为Folder Name
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.Finished">
            <summary>
            全部传送完成
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FoldTransferingNextFileInfo.RelativeFilePath">
            <summary>
            要发送的文件相对于文件夹的路径
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter">
            <summary>
            智能P2P消息（Client->Client）发送器。
            当Client发送消息给另外一个Client时，如果存在P2P通道，则比较P2P通道和经服务器中转哪种模型更快，自动选择更快的通道。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.TestSpeed(System.String)">
            <summary>
            P2P更快?
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.SwitchChannel(System.String)">
            <summary>
            手动切换通道。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.IsUsingP2PChannel(System.String)">
            <summary>
            到目标用户是否使用的是P2P通道。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向在线用户发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.SendBlob(System.String,System.Int32,System.Byte[],System.Int32)">
            <summary>
            向在线用户或服务器发送大的数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大的数据块信息</param>  
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.PingTestSpanInSecs">
            <summary>
            定时进行ping测试以及自动切换通道的时间间隔，单位：秒。默认值为60。
            如果设置为小于等于0，则表示不进行定时ping测试，也不会自动切换通道。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IPassiveEngine">
            <summary>
            客户端引擎。封装了数据接收线程，完全向客户端隐藏了网络通信细节。
            Client所有的通过网络发送/接收数据都通过IPassiveEngine进行	
            zhuweisky 2006.01.12
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IPassiveEngine.CommitMessageToServer(OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送（同步）或投递（异步）给服务器，不经任何处理，直接发送。注意：如果引擎已经停止，则直接返回。   
            </summary>
            <param name="msg">要发送的消息</param>
            <param name="action">当通道繁忙时，所采取的动作</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IPassiveEngine.ServerIPEndPoint">
            <summary>
            服务器地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IPassiveEngine.ChannelIsBusy">
            <summary>
            发送消息的通道是否正忙。使用者可以根据该属性决定是否要丢弃后续某些消息的发送。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine">
            <summary>
            客户端的Tcp引擎，通过ContractFormatStyle属性指定采用的协议类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine">
            <summary>
            客户端TCP引擎。 封装了数据接收线程，完全向客户端隐藏了网络通信细节。
            Client所有的通过网络发送/接收数据都通过ITcpPassiveEngine进行。
            zhuweisky 2006.01.12
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接。如果AutoReconnect为true，将引发自动重连。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.Reconnect(System.Int32)">
            <summary>
            手动重连。如果当前处于连接状态，则直接返回。
            </summary>        
            <param name="retrySpanInMSecs">重试间隔时间，毫秒</param>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionInterrupted">
            <summary>
            当客户端与服务器的TCP连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionRebuildStart">
            <summary>
            自动重连开始时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionRebuildSucceed">
            <summary>
            自动重连成功后，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionRebuildFailure">
            <summary>
            自动重连超过最大重试次数时，表明重连失败，将触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息。如果不需要代理，则设置为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.Connected">
            <summary>
            当前是否处于连接状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.AutoReconnect">
            <summary>
            当与服务器断开连接时，是否自动重连。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.FirstCallbackOnConnectionRebuildSucceed">
            <summary>
            重连成功后，第一个调用的方法。在触发ConnectionRebuildSucceed事件之前。可以通过注入该属性，确保重连成功后发送的第一个消息的类型。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完（即数据还未提交到Socket缓冲区），则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接。如果AutoReconnect为true，将引发自动重连。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.MaxMessageSize">
            <summary>
            ReceiveBuffSize 应用程序开辟的接收缓冲区的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.ContractHelper">
            <summary>
            ContractHelper 依据ContractFormatStyle属性，注入相应的ContractHelper
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.IPAddress">
            <summary>
            绑定当前哪个IP地址。如果为null，则自动选择地址列表中的第一个。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.FirstCallbackOnConnectionRebuildSucceed">
            <summary>
            重连成功后，第一个调用的方法。在触发ConnectionRebuildSucceed事件之前。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完（即数据还未提交到Socket缓冲区），则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper">
            <summary>
            用于基于文本消息的协议决策。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IStringEncoder">
            <summary>
            字符串编解码器接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IStringEncoder.GetStrFromStream(System.Byte[],System.Int32,System.Int32)">
            <summary>
            将字节流解码为字符串。
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IStringEncoder.GetBytesFromStr(System.String)">
            <summary>
            对字符串进行编码返回字节数组。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.ParseMessageHeader(System.String)">
            <summary>
            解析消息头。如果消息头非法，请返回null。
            确保此方法不会抛出异常。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.IsRightFormatMessage(System.String)">
            <summary>
            验证消息的起始符和结束符是否正确。
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.StartToken">
            <summary>
            基于文本协议的消息的起始标志。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.EndToken">
            <summary>
            基于文本协议的消息的结束标志。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.IAudioClock">
            <summary>
            Defined in AudioClient.h
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.IAudioClock2">
            <summary>
            Defined in AudioClient.h
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.Interfaces.AudioClientErrors.NotInitialized">
            <summary>
            AUDCLNT_E_NOT_INITIALIZED
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.Interfaces.AudioClientErrors.UnsupportedFormat">
            <summary>
            AUDCLNT_E_UNSUPPORTED_FORMAT
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.Interfaces.AudioClientErrors.DeviceInUse">
            <summary>
            AUDCLNT_E_DEVICE_IN_USE
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.PageEventBase">
            <summary>
            PageEventBase Page和Work公用的事件。 
            注意，在视频会议系统中，可以使BaseView的各个与事件是Serialized，即使我们在服务端会保存当前work的完整实例，因为page仅仅被work引用，而且服务器上的work的事件预订者都是null。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Paint.Views.PageEventBase.PageCleared">
            <summary>
            PageCleared page上的所有view被移除。参数为pageID。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Application.RegionSelecter">
            <summary>
            用于可视化选择控件表面的一块正方形区域。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.RegionSelecter.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.RegionSelecter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.RegionSelecter.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Paint.Application.RegionSelecter.RegionSelected">
            <summary>
            当被选中的区域发生变化时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.RegionSelecter.SelectedRegion">
            <summary>
            选中的区域。
            </summary>
        </member>
        <member name="T:OMCS.WSHelper">
            <summary>
            WSHelper 静态类。
            </summary>
        </member>
        <member name="M:OMCS.WSHelper.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            InvokeWebService 动态调用web服务
            </summary>
            <param name="wsUrl">WebService 地址</param>
            <param name="methodname">方法名</param>
            <param name="args">参数，仅仅支持简单类型</param>		
        </member>
        <member name="M:OMCS.WSHelper.InvokeWebService(System.String,System.String,System.String,System.Object[])">
            <summary>
            InvokeWebService 动态调用web服务
            </summary>
        </member>
        <member name="M:OMCS.WSHelper.GetWsProxyType(System.String,System.String)">
            <summary>
            GetWsProxyType 获取目标Web服务对应的代理类型
            </summary>
            <param name="wsUrl">目标Web服务的url</param>
            <param name="classname">Web服务的class名称，如果不需要指定，则传入null</param>      
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Server.IFriendsManager">
            <summary>
            用于管理好友关系网络。即可用于本地应用服务器，也可以用于ESPlatform体系的平台服务器。
            主要用于实现好友上下线通知、获取在线好友列表等功能。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Friends.Server.IFriendsManager.GetFriendsList(System.String,System.String)">
            <summary>
            获取好友列表。该方法不允许返回null，如果没有任何好友，请返回元素个数为0的List。
            </summary>
            <param name="ownerID">主人的UserID</param>
            <param name="tag">自定义标签，比如当好友有分类时，可以传分类名称。如果传入null，表示获取所有好友。</param>
            <returns>好友列表</returns>
        </member>
        <member name="T:OMCS.Passive.MultimediaManager">
            <summary>
            多媒体管理器。用于管理本地的所有多媒体设备。
            (1)多媒体设备管理器初始化时与某个OMCS服务器连接，则该OMCS服务器称为当前用户的主OMCS服务器。
            (2)可以建立更多的指向不同OMCS服务器的通道，且可以将指定的设备绑定到某个通道。
            (3)按需分配：在客户端需要多媒体通信时，才连接OMCS服务器。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IChannelCallbck">
            <summary>
            当通道接收到来自Guest的指令时，将回调该接口的方法进行处理。即，所有的方法都是被Owner角色处理。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnConnect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Owner处理来自Guest的连接某设备的请求。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnDisconnect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Owner处理来自Guest的断开某设备的请求。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnCommand(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Owner执行来自Guest的指令。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnQuery(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Owner处理来自Guest的查询。
            </summary>  
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.IsMultimediaManagerAvailable">
            <summary>
            Owner回复Guest对管理器是否可用的查询
            </summary>
            <returns></returns>
        </member>
        <member name="T:OMCS.Passive.IMultimediaManager">
            <summary>
            多媒体设备管理器基础接口。用于管理本地的所有多媒体设备。
            注意，在进程关闭之前，一定要调用Dispose方法释放资源，否则，进程可能无法正常关闭。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.Initialize(System.String,System.String,System.String,System.Int32)">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            如果与服务器连接失败，将抛出网络异常。       
            </summary>     
            <param name="userID">当前登录的用户ID。</param>
            <param name="password">当前登录的用户的密码。</param>
            <param name="serverIP">OMCS服务器IP</param>
            <param name="serverPort">OMCS服务器端口</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.Initialize(System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{OMCS.MultimediaDeviceType,OMCS.Communication.Basic.AgileIPEndPoint})">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            如果与服务器连接失败，将抛出网络异常。       
            </summary>     
            <param name="userID">当前登录的用户ID。</param>
            <param name="password">当前登录的用户的密码。</param>
            <param name="serverIP">OMCS主服务器IP</param>
            <param name="serverPort">OMCS主服务器端口</param>
            <param name="deviceChannelDic">如果想分离某个设备的数据走专用的信道，则可以在此配置其设备类型及其对应的信道服务器地址。</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.ChangeCameraDeviceAsyn(System.Int32)">
            <summary>
            切换摄像头【异步调用】。如果切换成功，将触发CameraIndexChanged事件。
            </summary>
            <param name="deviceIndex">要切换到的目标摄像头的索引</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.DisconnectGuest(System.String,OMCS.MultimediaDeviceType,System.Boolean)">
            <summary>
            主动断开来访者guest到本地多媒体设备的连接。
            </summary>
            <param name="guestID">来访者的用户ID</param>
            <param name="deviceType">设备类型</param>
            <param name="notifyGuest">是否通知对方。如果通知对方，对方的连接器将触发Disconnected事件。</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.DisconnectGuest(System.Boolean)">
            <summary>
            主动断开所有来访者到本地多媒体设备的连接。
            </summary>       
            <param name="notifyGuest">是否通知对方。如果通知对方，对方的连接器将触发Disconnected事件。</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.GetGuests(OMCS.MultimediaDeviceType)">
            <summary>
            获取所有连接到当前多媒体设备的Guest列表。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.DeviceIsWorking(OMCS.MultimediaDeviceType)">
            <summary>
            查询本地的某设备是否正在工作？
            </summary>        
            <param name="deviceType">设备类型</param>
            <returns>工作中？</returns>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.IsP2PChannelExist(System.String)">
            <summary>
            和目标用户之间是否打通了P2P通道？
            </summary>
            <param name="destUserID">目标用户的ID</param>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与OMCS服务器的连接,将引发自动重连。
            </summary>
            <param name="reconnectNow">是否立即重连？</param>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ServerIPE">
            <summary>
            已连接的多媒体服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SystemToken">
            <summary>
            系统标志。用于区分不同的基于OMCS开发的系统。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CurrentUserID">
            <summary>
            当前登录用户的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Available">
            <summary>
            当前多媒体管理器是否可用？（与OMCS服务器成功连接？并且设备管理器已经初始化完成？）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Working">
            <summary>
            当前多媒体管理器是否正在工作？
            如果没有任何guest连接到本地多媒体设备，并且自己也没有连接到别人的设备，则返回false。否则返回true。
            </summary>      
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AutoReconnect">
            <summary>
            掉线后，是否自动重连。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ChatGroupEntrance">
            <summary>
            语音视频聊天组入口。（只有多媒体管理器初始化成功之后，该属性才有效）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ShortMessageController">
            <summary>
            短信控制器。在当前多媒体设备管理器初始化成功之前，该属性将返回null。
            注意：在正式使用短信控制器之前，先要调用IShortMessageController的Initialize方法将其初始化。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Advanced">
            <summary>
            OMCS高级控制选项。如果要修改AdvancedOptions的某些属性值，必须在调用Initialize方法之前设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AudioCapturerFactory">
            <summary>
            用于注入自定义的声音采集器工厂。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.MicrophoneDeviceIndex">
            <summary>
            要使用的麦克风的索引。如果设置为-1，则表示使用采集声卡得到的声音（win7及以上系统）。该属性的值可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SpeakerIndex">
            <summary>
            要使用的扬声器的索引。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OutputAudio">
            <summary>
            是否将话筒采集到的音频输出给Guest。（必须在初始化完成之后设置才有效，可动态修改。）
            如果为true，表示输出；否则，表示将采集到的音频数据丢弃，不发送给guest。默认值为true。（比如在视频会议中，只将发言人的OutputAudio设为true，以减少带宽和避免杂音）
            </summary>       
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.VolumeAmplifyFactor">
            <summary>
            输出音量的放大系数。取值范围1~10。默认值1(表示不放大)。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Mute">
            <summary>
            是否静音（来自任何owner的声音都不播放）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.VideoCapturerFactory">
            <summary>
            用于注入自定义的视频采集器工厂。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CameraDeviceIndex">
            <summary>
            要使用的摄像头的索引。默认值为0。如果不想使用摄像头，可以设置为-1。可以在运行时动态修改。
            【如果在初始化之前将CameraDeviceIndex设置为0，那么框架将自动选择第一个有效的摄像头，这意味着初始化完成后，CameraDeviceIndex的值可能不再是0。】
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CameraVideoSize">
            <summary>
            摄像头采集视频的大小。如果当前摄像头不支持指定的尺寸，则会自动匹配到最相近的分辨率。默认为320*240。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.MaxCameraFrameRate">
            <summary>
            摄像头的最大帧频。默认值：10。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CameraEncodeQuality">
            <summary>
            摄像头采集的视频的编码质量。取值0~31，默认值3。取值越小，质量越高。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AutoAdjustCameraEncodeQuality">
            <summary>
            [从Owner的角度]是否根据音频反馈以及视频丢帧情况自动调整视频编码质量。默认值为true。（以保证音频连贯性）。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OutputVideo">
            <summary>
            是否将摄像头集到的视频输出给Guest。 默认值为true。（必须在初始化完成之后设置才有效，可动态修改。）
            如果为true，表示输出；否则，表示将采集到的视频数据丢弃，不发送给guest。默认值为true。
            </summary> 
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.MaxDesktopFrameRate">
            <summary>
            桌面的最大帧频。默认值：3。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OutputDesktop">
            <summary>
            是否将桌面图像输出给Guest。默认值为true。（必须在初始化完成之后设置才有效，可动态修改。）        
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AllowControlDesktop">
            <summary>
            允许guest操作桌面。默认值为true。（必须在初始化完成之后设置才有效，可动态修改。）    
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.DesktopEncodeQuality">
            <summary>
            本地桌面的编码质量。取值0~31，默认值6。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.DesktopRegion">
            <summary>
            要捕捉的屏幕的区域。
            如果set为null，则表示捕捉整个屏幕。可以在运行时动态修改。【桌面采集器会将长和宽修正为8的整数倍】
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CoursewaresRootPath">
            <summary>
            用于缓存白板课件的根目录。默认值为运行目录下的"Coursewares"文件夹。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ImageConverterFactory">
            <summary>
            用于注入自定义的图片转换器工厂。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ChannelMode">
            <summary>
            [从Owner的角度]Owner发送帧数据给Guest时，通道的选择模型。默认值为P2PChannelFirst。必须在初始化前设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OmcsLogPath">
            <summary>
            记录OMCS日志的文件路径，默认值为在运行目录下的OmcsLog.txt文件。（运行目录下可能没有写权限）。
            设为null（且OmcsLogger也设为null），表示不记录任何日志（包括SecurityLogEnabled属性控制的安全日志）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OmcsLogger">
            <summary>
            如果被赋非null值，则OmcsLogPath属性将无效。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SecurityLogEnabled">
            <summary>
            是否记录安全日志（每次连接他人设备的结果和自己的设备被连接的结果）。默认值为false。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.ConnectionInterrupted">
            <summary>
            当与目标媒体服务器的连接断开时，触发此事件。事件参数：目标多媒体服务器的地址。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.ConnectionRebuildSucceed">
            <summary>
            当与目标媒体服务器重连成功时，触发此事件。事件参数：目标多媒体服务器的地址。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.DeviceConnected">
            <summary>
            当某个guest连接到当前设备时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.DeviceDisconnected">
            <summary>
            当某个guest从当前设备断开时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.DeviceErrorOccurred">
            <summary>
            当本地多媒体设备报错时，会触发该事件。参数为 MultimediaDeviceType - DeviceIndex - 错误描述
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.ConnectorDisconnected">
            <summary>
            当连接器与目标设备之间的连接断开时，触发此事件。参数为： 断开的连接器 - 断开的原因
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.AudioPlayed">
            <summary>
            刚刚播放的音频帧（20ms数据）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.AudioCaptured">
            <summary>
            刚刚从话筒采集的音频帧（20ms数据）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.CameraIndexChanged">
            <summary>
            当摄像头切换完成以后，触发此事件。参数为：切换之前摄像头索引 - 切换后的摄像头索引
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.JitterBufferDepthChanged">
            <summary>
            [从Guest角度]当某个JitterBuffer的尺寸发生变化时，将触发该事件。参数为：OwnerID - minSize - maxSize - currentSize。        
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.Initialize(System.String,System.String,System.String,System.Int32)">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.Initialize(System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{OMCS.MultimediaDeviceType,OMCS.Communication.Basic.AgileIPEndPoint})">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.GetGuests(OMCS.MultimediaDeviceType)">
            <summary>
            获取所有连接到当前多媒体设备的用户列表。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.DisconnectGuest(System.String,OMCS.MultimediaDeviceType,System.Boolean)">
            <summary>
            主动断开来访者到本地多媒体设备的连接。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.ConnectionInterrupted">
            <summary>
            当与媒体服务器的连接断开时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.ConnectionRebuildSucceed">
            <summary>
            当与媒体服务器重连成功时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.DeviceConnected">
            <summary>
            当Guest连接到当前设备时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.DeviceDisconnected">
            <summary>
            当Guest从当前设备断开时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.AudioPlayed">
            <summary>
            刚刚播放的音频帧。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.AudioCaptured">
            <summary>
            刚刚从话筒采集的音频帧。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.DeviceErrorOccurred">
            <summary>
            当本地多媒体设备报错时，会触发该事件。参数为 MultimediaDeviceType - 错误描述
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.OmcsLogPath">
            <summary>
            记录OMCS日志的文件路径，默认值为在运行目录下的OmcsLog.txt文件。设为null，表示不记录任何日志。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.OmcsLogger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CurrentUserID">
            <summary>
            当前登录用户的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CameraDeviceIndex">
            <summary>
            要使用的摄像头的索引。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.MicrophoneDeviceIndex">
            <summary>
            要使用的麦克风的索引。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.SpeakerIndex">
            <summary>
            要使用的扬声器的索引。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CameraEncodeQuality">
            <summary>
            摄像头采集的视频的编码质量。取值范围0-31，取值越小，质量越高。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.AutoAdjustCameraEncodeQuality">
            <summary>
             [从Owner的角度]是否根据音频反馈以及视频丢帧情况自动调整视频编码质量。默认值为true。（以保证音频连贯性）。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CameraVideoSize">
            <summary>
            摄像头采集视频的大小。默认为320*240。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.DesktopEncodeQuality">
            <summary>
            本地桌面的编码质量。取值0~31，取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.AutoReconnect">
            <summary>
            掉线后，是否自动重连。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.WhiteBoardConnector">
            <summary>
            电子白板连接器。支持掉线自动重连。   
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.IWhiteBoardConnector">
            <summary>
            白板连接器接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.GetCurrentImage">
            <summary>
            将当前白板页保存为一张位图。 
            </summary>      
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.GetCurrentImage(System.Drawing.Rectangle)">
            <summary>
            将当前白板页的部分区域保存为一张位图。 
            </summary>
            <param name="rect">要保存的区域</param>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.NewPage">
            <summary>
            新建一页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.RemovePage">
            <summary>
            删除当前页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetCurrentViewType(OMCS.Engine.Paint.Views.ViewType)">
            <summary>
            [使用自定义工具栏时]设置当前要绘制的View的类型。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetFilledColor(System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置填充颜色。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetLineColor(System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置线条颜色。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetLineDash(System.Boolean)">
            <summary>
            [使用自定义工具栏时]设置线条是否为虚线。
            </summary>   
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetLineWidth(System.Int32)">
            <summary>
            [使用自定义工具栏时]设置线条的宽度。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetTextBoxMinSize(System.Drawing.Size)">
            <summary>
            [使用自定义工具栏时]设置文本输入框的最小尺寸。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetTextFormat(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置文本格式（字体、颜色）。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SortH">
            <summary>
            [使用自定义工具栏时]水平对齐。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SortV">
            <summary>
            [使用自定义工具栏时]垂直对齐。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ChangeLaserPointerState">
            <summary>
            [使用自定义工具栏时]开启或关闭激光笔。一般每点击一次工具栏上的“激光笔”按钮就调用该方法一次。第一次调用，将开启；再次调用，将关闭；然后再调用，由开启；如此循环。
            返回值表示调用后激光笔的状态是否为开启？
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.CaptureScreen">
            <summary>
            [使用自定义工具栏时]截屏。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.InsertImage(System.Drawing.Image)">
            <summary>
            [使用自定义工具栏时]在白板的左上角位置插入图片。
            </summary>
            <param name="img">被插入的图片</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.InsertImageFromFile">
            <summary>
            [使用自定义工具栏时]插入图片（选择图片文件）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.AutoReconnect">
            <summary>
            是否开启自动重连的功能。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.WatchingOnly">
            <summary>
            仅仅允许查看白板，但是不能进行操作。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ContextMenuEnglish">
            <summary>
            右键菜单文字是否使用英语。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.CoursewareEnabled">
            <summary>
            是否需要开启课件功能（前提当IsManager为true时该属性才有效。）？
            如果不开启课件功能，则只有新建页/删除页 的功能。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.DisplayPageBorder">
            <summary>
            是否显示白板页的边框。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.FocusOnNewViewByOther">
            <summary>
            如果他人新建了一个view，则自动选中该view，并调节滚动条使其在可视区域内。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：上传课件、打开课件、删除课件、翻页等。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.PageSize">
            <summary>
            白板页的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.Timeout4LoadContent">
            <summary>
            初始加载白板内容时的超时，单位：秒。默认值为120秒。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ToolBarVisiable">
            <summary>
            工具栏是否可见。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ZoomFactor">
            <summary>
            白板页面的缩放比例。
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardConnector.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.GetCurrentImage">
            <summary>
            将当前白板页保存为一张位图。 
            </summary>      
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.GetCurrentImage(System.Drawing.Rectangle)">
            <summary>
            将当前白板页的部分区域保存为一张位图。 
            </summary>
            <param name="rect">要保存的区域</param>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.RemovePage">
            <summary>
            删除当前页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.NewPage">
            <summary>
            新建一页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SortH">
            <summary>
            [使用自定义工具栏时]水平对齐。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SortV">
            <summary>
            [使用自定义工具栏时]垂直对齐。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.ChangeLaserPointerState">
            <summary>
            [使用自定义工具栏时]开启或关闭激光笔。一般每点击一次工具栏上的“激光笔”按钮就调用该方法一次。第一次调用，将开启；再次调用，将关闭；然后再调用，由开启；如此循环。
            返回值表示调用后激光笔的状态是否为开启？
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.CaptureScreen">
            <summary>
            [使用自定义工具栏时]截屏。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.InsertImage(System.Drawing.Image)">
            <summary>
            [使用自定义工具栏时]在白板的左上角位置插入图片。
            </summary>
            <param name="img">被插入的图片</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.InsertImageFromFile">
            <summary>
            [使用自定义工具栏时]插入图片（选择图片文件）。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetCurrentViewType(OMCS.Engine.Paint.Views.ViewType)">
            <summary>
            [使用自定义工具栏时]设置当前要绘制的View的类型。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetLineDash(System.Boolean)">
            <summary>
            [使用自定义工具栏时]设置线条是否为虚线。
            </summary>   
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetLineWidth(System.Int32)">
            <summary>
            [使用自定义工具栏时]设置线条的宽度。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetTextBoxMinSize(System.Drawing.Size)">
            <summary>
            [使用自定义工具栏时]设置文本输入框的最小尺寸。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetFilledColor(System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置填充颜色。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetLineColor(System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置线条颜色。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.WhiteBoardConnector.SetTextFormat(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置文本格式（字体、颜色）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.WhiteBoardConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.WhiteBoardConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.WaitOwnerOnlineSpanInSecs">
            <summary>
            当调用BeginConnect连接Owner的设备时，如果Owner不在线，则等待对方上线的最长时间。如果超过这个时间，owner还没连接上来，则BeginConnect的结果仍然为TargetUserOffline。 
            单位：秒。默认值0。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.ToolBarVisiable">
            <summary>
            工具栏是否可见。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.Timeout4LoadContent">
            <summary>
            初始加载白板内容时的超时，单位：秒。默认值为120秒。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.AutoReconnect">
            <summary>
            是否开启自动重连的功能。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.WatchingOnly">
            <summary>
            仅仅允许查看白板，但是不能进行操作。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：上传课件、打开课件、删除课件、翻页等。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.CoursewareEnabled">
            <summary>
            是否需要开启课件功能（前提当IsManager为true时该属性才有效。）？
            如果不开启课件功能，则只有新建页/删除页 的功能。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.BackImageOfPage">
            <summary>
            白板页的背景图片（在不使用课件功能的前提下才有效）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.PageSize">
            <summary>
            白板页的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.ContextMenuEnglish">
            <summary>
            右键菜单文字是否使用英语。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.FocusOnNewViewByOther">
            <summary>
            如果他人新建了一个view，则自动选中该view，并调节滚动条使其在可视区域内。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.DisplayPageBorder">
            <summary>
            是否显示白板页的边框。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardConnector.ZoomFactor">
            <summary>
            白板页面的缩放比例。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.IVideoEncoder">
            <summary>
            视频编码器的基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.IVideoEncoder.Encode(System.Byte[],System.Boolean,OMCS.Engine.Video.FrameType@,System.Byte@)">
            <summary>
            进行视频编码。
            </summary>
            <param name="imageBuff">RGB24位图数据，不包含Header</param>
            <param name="frameType">编码帧的类型。1--I帧，2--P帧，3--B帧</param>
            <param name="forceIFrame">强制编码为I帧</param>
            <param name="frameNumber">编码帧的序号，从1开始计数到达最大后再循环</param>
            <returns>编码后的数据。（DataBuffer是要被复用的，所以调用者根据需要可能要拷贝编码结果）</returns>       
        </member>
        <member name="T:OMCS.Engine.Video.IVideoDecoder">
            <summary>
            视频解码器的基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.IVideoDecoder.Decode(ESBasic.DataBuffer)">
            <summary>
            进行解码。如果编解码器已经被释放，则返回null。
            </summary>
            <param name="data">编码后的数据</param>
            <returns>RGB位图数据，不包含Header。如果编解码器已经被释放，则返回null。</returns>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IVideoWindow">
            <summary>
            The interface sets properties on the video window.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Caption(System.String)">
            <summary>
            Sets the video window caption.
            </summary>
            
            <param name="caption">Caption.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Caption(System.String@)">
            <summary>
            Retrieves the video window caption.
            </summary>
            
            <param name="caption">Caption.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_WindowStyle(System.Int32)">
            <summary>
            Sets the window style on the video window.
            </summary>
            
            <param name="windowStyle">Window style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_WindowStyle(System.Int32@)">
            <summary>
            Retrieves the window style on the video window.
            </summary>
            
            <param name="windowStyle">Window style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_WindowStyleEx(System.Int32)">
            <summary>
            Sets the extended window style on the video window.
            </summary>
            
            <param name="windowStyleEx">Window extended style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_WindowStyleEx(System.Int32@)">
            <summary>
            Retrieves the extended window style on the video window.
            </summary>
            
            <param name="windowStyleEx">Window extended style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_AutoShow(System.Boolean)">
            <summary>
            Specifies whether the video renderer automatically shows the video window when it receives video data.
            </summary>
            
            <param name="autoShow">Specifies whether the video renderer automatically shows the video window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_AutoShow(System.Boolean@)">
            <summary>
            Queries whether the video renderer automatically shows the video window when it receives video data.
            </summary>
            
            <param name="autoShow">REceives window auto show flag.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_WindowState(System.Int32)">
            <summary>
            Shows, hides, minimizes, or maximizes the video window.
            </summary>
            
            <param name="windowState">Window state.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_WindowState(System.Int32@)">
            <summary>
            Queries whether the video window is visible, hidden, minimized, or maximized.
            </summary>
            
            <param name="windowState">Window state.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_BackgroundPalette(System.Boolean)">
            <summary>
            Specifies whether the video window realizes its palette in the background.
            </summary>
            
            <param name="backgroundPalette">Value that specifies whether the video renderer realizes it palette in the background.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_BackgroundPalette(System.Boolean@)">
            <summary>
            Queries whether the video window realizes its palette in the background.
            </summary>
            
            <param name="backgroundPalette">Receives state of background palette flag.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Visible(System.Boolean)">
            <summary>
            Shows or hides the video window.
            </summary>
            
            <param name="visible">Value that specifies whether to show or hide the window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Visible(System.Boolean@)">
            <summary>
            Queries whether the video window is visible.
            </summary>
            
            <param name="visible">Visibility flag.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Left(System.Int32)">
            <summary>
            Sets the video window's x-coordinate.
            </summary>
            
            <param name="left">Specifies the x-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Left(System.Int32@)">
            <summary>
            Retrieves the video window's x-coordinate.
            </summary>
            
            <param name="left">x-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Width(System.Int32)">
            <summary>
            Sets the width of the video window.
            </summary>
            
            <param name="width">Specifies the width, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Width(System.Int32@)">
            <summary>
            Retrieves the width of the video window.
            </summary>
            
            <param name="width">Width, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Top(System.Int32)">
            <summary>
            Sets the video window's y-coordinate.
            </summary>
            
            <param name="top">Specifies the y-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Top(System.Int32@)">
            <summary>
            Retrieves the video window's y-coordinate.
            </summary>
            
            <param name="top">y-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Height(System.Int32)">
            <summary>
            Sets the height of the video window.
            </summary>
            
            <param name="height">Specifies the height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Height(System.Int32@)">
            <summary>
            Retrieves the height of the video window.
            </summary>
            
            <param name="height">Height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Owner(System.IntPtr)">
            <summary>
            Specifies a parent window for the video window?
            </summary>
            
            <param name="owner">Specifies a handle to the parent window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Owner(System.IntPtr@)">
            <summary>
            Retrieves the video window's parent window, if any?
            </summary>
            
            <param name="owner">Parent window's handle.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_MessageDrain(System.IntPtr)">
            <summary>
            Specifies a window to receive mouse and keyboard messages from the video window.
            </summary>
            
            <param name="drain">Specifies a handle to the window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_MessageDrain(System.IntPtr@)">
            <summary>
            Retrieves the window that receives mouse and keyboard messages from the video window, if any.
            </summary>
            
            <param name="drain">Window's handle.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_BorderColor(System.Int32@)">
            <summary>
            Retrieves the color that appears around the edges of the destination rectangle.
            </summary>
            
            <param name="color">Border's color.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_BorderColor(System.Int32)">
            <summary>
            Sets the color that appears around the edges of the destination rectangle.
            </summary>
            
            <param name="color">Specifies the border color.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_FullScreenMode(System.Boolean@)">
            <summary>
            Queries whether the video renderer is in full-screen mode.
            </summary>
            
            <param name="fullScreenMode">Full-screen mode.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_FullScreenMode(System.Boolean)">
            <summary>
            Enables or disables full-screen mode.
            </summary>
            
            <param name="fullScreenMode">Boolean value that specifies whether to enable or disable full-screen mode.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.SetWindowForeground(System.Int32)">
            <summary>
            Places the video window at the top of the Z order.
            </summary>
            
            <param name="focus">Value that specifies whether to give the window focus.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.NotifyOwnerMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Forwards a message to the video window.
            </summary>
            
            <param name="hwnd">Handle to the window.</param>
            <param name="msg">Specifies the message.</param>
            <param name="wParam">Message parameter.</param>
            <param name="lParam">Message parameter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.SetWindowPosition(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the position of the video window?
            </summary>
            
            <param name="left">Specifies the x-coordinate, in pixels.</param>
            <param name="top">Specifies the y-coordinate, in pixels.</param>
            <param name="width">Specifies the width, in pixels.</param>
            <param name="height">Specifies the height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetWindowPosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the position of the video window.
            </summary>
            
            <param name="left">x-coordinate, in pixels.</param>
            <param name="top">y-coordinate, in pixels.</param>
            <param name="width">Width, in pixels.</param>
            <param name="height">Height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetMinIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the minimum ideal size for the video image.
            </summary>
            
            <param name="width">Receives the minimum ideal width, in pixels.</param>
            <param name="height">Receives the minimum ideal height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetMaxIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the maximum ideal size for the video image.
            </summary>
            
            <param name="width">Receives the maximum ideal width, in pixels.</param>
            <param name="height">Receives the maximum ideal height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetRestorePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the restored window position.
            </summary>
            
            <param name="left">x-coordinate, in pixels.</param>
            <param name="top">y-coordinate, in pixels.</param>
            <param name="width">Width, in pixels.</param>
            <param name="height">Height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.HideCursor(System.Boolean)">
            <summary>
            Hides the cursor.
            </summary>
            
            <param name="hideCursor">Specifies whether to hide or display the cursor.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.IsCursorHidden(System.Boolean@)">
            <summary>
            Queries whether the cursor is hidden.
            </summary>
            
            <param name="hideCursor">Specifies if cursor is hidden or not.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IPropertyBag">
            <summary>
            The <b>IPropertyBag</b> interface provides an object with a property bag in
            which the object can persistently save its properties. 
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPropertyBag.Read(System.String,System.Object@,System.IntPtr)">
            <summary>
            Read a property from property bag.
            </summary>
            
            <param name="propertyName">Property name to read.</param>
            <param name="pVar">Property value.</param>
            <param name="pErrorLog">Caller's error log.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPropertyBag.Write(System.String,System.Object@)">
            <summary>
            Write property to property bag.
            </summary>
            
            <param name="propertyName">Property name to read.</param>
            <param name="pVar">Property value.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IEnumFilters">
            <summary>
            This interface is used by applications or other filters to determine
            what filters exist in the filter graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Next(System.Int32,OMCS.Engine.DShow.Core.IBaseFilter[],System.Int32@)">
            <summary>
            Retrieves the specified number of filters in the enumeration sequence.
            </summary>
            
            <param name="cFilters">Number of filters to retrieve.</param>
            <param name="filters">Array in which to place <see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interfaces.</param>
            <param name="filtersFetched">Actual number of filters placed in the array.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Skip(System.Int32)">
            <summary>
            Skips a specified number of filters in the enumeration sequence.
            </summary>
            
            <param name="cFilters">Number of filters to skip.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Reset">
            <summary>
            Resets the enumeration sequence to the beginning.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Clone(OMCS.Engine.DShow.Core.IEnumFilters@)">
            <summary>
            Makes a copy of the enumerator with the same enumeration state.
            </summary>
            
            <param name="enumFilters">Duplicate of the enumerator.</param>
            
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
            
        </member>
        <member name="T:OMCS.Passive.Video.DynamicCameraConnector">
            <summary>
            动态摄像头连接器。可以动态修改绘制的面板。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Video.DynamicCameraConnector.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.SetViewer(System.Windows.Forms.Control)">
            <summary>
            设置要显示视频的控件。必须要在UI线程中调用该方法。
            注意：请启用控件的双缓冲绘制，以避免闪烁。调用SetStyle(ControlStyles.OptimizedDoubleBuffer, true);
            </summary>
            <param name="newPanel">要绘制视频的控件。可以为null。</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.GetCurrentImage">
            <summary>
            获取当前正在绘制的图像。 
            </summary>      
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.GetVideoQuality">
            <summary>
            获取当前视频的编码质量。0~31，数值越小越清晰。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerCameraVideoSize(System.Drawing.Size)">
            <summary>
            修改Owner的摄像头的采集分辨率。如果其摄像头不支持该分辨率，则将切换到最接近指定值的分辨率上。如果Owner方修改成功，将会触发本地的OwnerCameraVideoSizeChanged事件。
            </summary>
            <param name="newSize">新的采集分辨率</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerCameraVideoSize(System.Int32)">
            <summary>
            修改Owner的摄像头的采集分辨率。如果其摄像头不支持该分辨率，则将切换到最接近指定值的分辨率上。如果Owner方修改成功，将会触发本地的OwnerCameraVideoSizeChanged事件。
            </summary>
            <param name="widthAddHeight">新的采集分辨率的宽和高之和。比如分辨率为（320*240），则该参数为320+240=560</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerAutoAdjustCameraEncodeQuality(System.Boolean)">
            <summary>
            修改Owner的是否自动调节视频编码质量的控制。
            </summary>
            <param name="autoAdjust">是否自动调节</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的摄像头的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出视频</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerCameraEncodeQuality(System.Int32)">
            <summary>
            修改Owner的视频编码质量。
            </summary>
            <param name="quality">编码质量。取值0~31，值越小，越清晰。</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.GetReceivedFrameCount">
            <summary>
            获取自连接成功后接收到的视频帧的总数。
            </summary>
            <returns></returns>
        </member>
        <member name="E:OMCS.Passive.Video.DynamicCameraConnector.OwnerCameraVideoSizeChanged">
            <summary>
            当检测到Owner的摄像头采集的视频大小发生变化时，触发此事件。参数为新的视频大小。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.DynamicCameraConnector.OwnerOutputChanged">
            <summary>
            当Owner视频输出控制改变时，触发此事件。【对应于Owner端的多媒体管理器的OutputVideo属性的修改】
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.DynamicCameraConnector.FrameEncodedReceived">
            <summary>
            当接收到目标用户的摄像头的一帧视频数据（尚未解码）时，触发该事件。（注意，如果是连接自己，则是没有经过编码的原始帧。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.DynamicCameraConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.DynamicCameraConnector.AutoSynchronizeVideoToAudio">
            <summary>
            [从Guest的角度]如果连接了同一个Owner的摄像头和话筒，那么，CameraConnector在播放视频时是否自动与音频保持同步。默认值为true。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.DynamicCameraConnector.OwnerOutput">
            <summary>
            Owner是否输出了视频。【对应于Owner端的多媒体管理器的OutputVideo属性】
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.DynamicCameraConnector.VideoSize">
            <summary>
            视频的尺寸（长和宽都已经修正为8的整数倍）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.DynamicCameraConnector.DisplayVideoParameters">
            <summary>
            是否在视频图像上面打印视频的相关信息（视频尺寸、编码质量、帧频）。默认值：false。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.MicrophoneConnector">
            <summary>
            话筒连接器。通过该组件可以连接到对方的话筒，播放对方话筒捕获到的声音。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的麦克风的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出音频</param>
        </member>
        <member name="F:OMCS.Passive.Audio.MicrophoneConnector.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnector.AudioDataReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。（解码后的数据，20ms）
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnector.AudioDataEncodedReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。（尚未解码的数据，20ms）
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.SpringReceivedEventWhenMute">
            <summary>
            当Mute属性设置为true时，不会播放接收到的数据，但是，此时需要触发AudioDataReceived事件吗？默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.Mute">
            <summary>
            是否静音。默认值false。注意，即使设置为true，也不影响AudioDataReceived事件的触发。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.OwnerOutput">
            <summary>
            Owner是否输出了音频。【对应于Owner端的多媒体管理器的OutputAudio属性】
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnector.OwnerOutputChanged">
            <summary>
            当Owner音频输出控制改变时，触发此事件。【对应于Owner端的多媒体管理器的OutputAudio属性的修改】
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.IMixAlgorithm">
            <summary>
            多路音频混音器。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.IMixAlgorithm.Mix(System.Collections.Generic.IList{System.Byte[]})">
            <summary>
            混音。
            </summary>        
        </member>
        <member name="P:OMCS.Engine.Audio.IMixAlgorithm.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.MixAlgorithm16Bit">
            <summary>
            采样位数16bit的混音算法
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.MixAlgorithm16Bit.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.MixAlgorithm32Bit">
            <summary>
            采样位数32bit的混音算法
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.MixAlgorithm32Bit.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.MixAlgorithm8Bit">
            <summary>
            采样位数8bit的混音算法
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.MixAlgorithm8Bit.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio.JitterBuffer">
            <summary>
            抖动缓冲区。根据网络抖动的变化情况自动修改缓冲深度。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.JitterBuffer.BufferDepthChanged">
            <summary>
            当某个JitterBuffer的尺寸发生变化时，将触发该事件。lineID - newSize - count。       
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.JitterBuffer.AudioDataReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。（解码后的数据，20ms）
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.JitterBuffer.OwnerOutputAudio">
            <summary>
            麦克风的主人是否输出了语音？
            </summary>
        </member>
        <member name="P:OMCS.Contracts.VideoFrameContract.FrameIndex">
            <summary>
            帧索引。（目前只对视频数据有效）
            注意：frameIndex=0 表示为I帧，如果为P帧或B帧，则顺序递增。当又遇到I帧时，frameIndex又重置为0。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.VideoFrameContract.VideoQuality">
            <summary>
            视频编码的清晰度。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.BaseSerializeContract">
            <summary>
            如果流协议Body采用.NET二进制序列化的方式与网络流相互转换，则Body的Contract可使用此作为基类。
            具体的协议主体类，只需要添加协议成员即可。
            在大多数情况下，可以被ESBasic.Serialization.CompactPropertySerializer取代。
            注意：使用.NET二进制序列化会对加密的Contract的dll有限制，各个通信端必须使用同一个加密的dll，否则将可能导致反序列化失败。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.BaseSerializeContract.ParseBodyContract``1(OMCS.Communication.Basic.Engine.ContractStyle.Stream.StreamMessage)">
            <summary>
            将NetMessage的Body部分使用二进制反序列化为IContract对象
            注意：目标Contract必须是通过二进制反序列化实现的ToStream方法
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileReceiverManager">
            <summary>
            FileReceiverManager IFileReceiverManager 参考实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager">
            <summary>
            管理所有的FileReceiver，处理所有接收到的与文件相关的消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.MappingResumedFile4Receive(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            在接收文件之前，寻找是否存在续传匹配项。如果FileResumingEnabled为false，则将始终返回null。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.AddNotConfirmedFile(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            保存还未确认接收或拒绝的项目。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.RemoveNotConfirmedFile(System.String)">
            <summary>
            删除还未确认接收或拒绝的项目。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.GetNotConfirmedFile(System.String)">
            <summary>
            获取还未确认接收或拒绝的项目。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.ReadyToAcceptFile(OMCS.Communication.Plus.FileTransceiver.TransferingProject,OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem)">
            <summary>
            在回复对方同意接受文件之前调用。
            </summary>
            <param name="project">接收文件的信息</param>
            <param name="resumedFileItem">续传对象，如果为null，则表示没有续传项</param>     
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.HandleFilePackage(System.String,OMCS.Communication.Plus.FileTransceiver.FilePackage)">
            <summary>
            将从网络接收到的文件数据包交给对应的文件接收器去处理。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.CancelFileReceiving(System.String,OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType,System.String)">
            <summary>
            取消文件接收（主动、被动）
            </summary>		
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.OnSelfOffline">
            <summary>
            自己掉线。将关闭所有的文件接收器。 
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.OnDestUserOffline(System.String)">
            <summary>
            目标用户destUserID掉线，将关闭与该用户相关的文件接收器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.OnReliableP2PChannelClosed(System.String)">
            <summary>
            与目标用户之间的可靠P2P通道关闭，将关闭与该用户相关的文件接收器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.GetFileInfo(System.String)">
            <summary>
            获取正在接收的或还未被回复的文件传送项目。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.GetAllReceivingFileIDs(System.String)">
            <summary>
            获取发送者为senderID的正在传送的文件ID。
            </summary>
            <param name="senderID">发送者的UserID。如果为null，则表示要获取所有正在接收的文件ID</param>
            <returns>文件ID的列表</returns>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.ResumedFileManager">
            <summary>
            文件续传项目管理器。如果设置为null，表示不启用续传。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件（夹）。单位：秒。默认值：300。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileReceiverManager.TempFileExtendName">
            <summary>
            当文件未接收完时，临时文件的扩展名。默认为".tmpe$"
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Base.Server.UserSecurityLogBridge">
            <summary>
            用于将用户的上下线事件记录到用户安全日志（可以是文件、数据库、内存数据库等）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Base.Server.UserSecurityLogBridge.SecurityLogger">
            <summary>
            可使用ESBasic.Loggers.SecurityFileLogger 或 DataRabbit.Application.Log.SecurityOperationTableLogger
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PSessionPassiveProcesser">
            <summary>
            P2PSessionPassiveProcesser 用于处理TCP连接上接收到的所有来自Server的消息，以及来自于其它Client的UDP消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageProcesser">
            <summary>
            消息处理器基础接口。
            2005.07.12
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageProcesser.CanProcess(System.Int32)">
            <summary>
            该消息处理器是否能够处理类型为messageType的消息。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageProcesser.ProcessMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            处理消息并返回回复消息，如果返回null，表示没有回复消息。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState">
            <summary>
            P2PChannelState P2P通道实例的状态。
            </summary>   
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.Enabled">
            <summary>
            是否启用当前的P2P通道。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.DestUserID">
            <summary>
            当前P2P会话对方的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.ProtocolType">
            <summary>
            当前P2P通道的协议类型（TCP/UDP）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.DestIPE">
            <summary>
            当前P2P会话对方的地址信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.Reliable">
            <summary>
            是否为可靠的P2P通道。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.MessageSentCount">
            <summary>
            通过当前P2P通道发送的消息的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.LastMessageSentTime">
            <summary>
            通过当前P2P通道发送的最后一个消息的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.OpenTime">
            <summary>
            当前P2P通道创建的时间。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Information">
            <summary>
            一个完整的自定义信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.InformationType">
            <summary>
            自定义信息类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.Content">
            <summary>
            信息的内容
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController">
            <summary>
            服务端主动向用户发送/投递自定义信息以及同步调用客户端的控制接口。   
            zhuweisky 2010.08.17
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.Send(System.String,System.Int32,System.Byte[])">
            <summary>
            向ID为userID的在线用户发送信息。如果用户不在线，则直接返回。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>          
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.SendCertainlyToLocalClient(System.String,System.Int32,System.Byte[])">
            <summary>
            向当前AS上的在线用户发送信息，并等待其ACK。当前调用线程会一直阻塞，直到收到ACK；如果超时都没有收到ACK，则将抛出Timeout异常。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>          
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向ID为userID的在线用户发送信息。如果用户不在线，则直接返回。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>        
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.SendBlob(System.String,System.Int32,System.Byte[],System.Int32)">
            <summary>
            向ID为userID的在线用户发送大数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大数据块信息</param>
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.QueryLocalClient(System.String,System.Int32,System.Byte[])">
            <summary>
            询问当前AS的在线用户，并返回应答信息。如果超时没有应答则将抛出Timeout异常。如果客户端在处理请求时出现未捕获的异常，则该调用会抛出HandingException。
            </summary>      
            <param name="userID">接收并处理服务器询问的目标用户ID</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>客户端给出的应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.QueryLocalClient(System.String,System.Int32,System.Byte[],OMCS.Communication.Plus.Application.CustomizeInfo.CallbackHandler,System.Object)">
            <summary>
            回复异步调用。当前AS的在线用户发送请求信息，当收到应答信息或超时时，将回调CallbackHandler函数。
            </summary>      
            <param name="userID">接收并处理服务器询问的目标用户ID</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <param name="handler">用于处理回复信息的处理器</param>
            <param name="tag">携带的状态数据，将被传递给回调函数handler</param>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.TransmitFailed">
            <summary>
            当因为目标用户不在线而导致服务端转发自定义信息失败时，将触发该事件。参数为转发失败的信息。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.InformationReceived">
            <summary>
            当服务端接收到来自客户端的信息时（包括转发的信息，但不包括Blob信息），触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.CustomizePassiveProcesser">
            <summary>
            处理所有"自定义信息"的消息的客户端处理器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.BinaryInformationContract.InformationType">
            <summary>
            当MessageType为CustomizeInfoMessageTypeRoom.Response时，忽略该属性。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupHandler">
            <summary>
            与ESPlatform结合：
            (1)由事件（比如加入组）发生的宿主服务器（即导致事件发生的用户所在的服务器）负责通知群内成员或群友。
            (2)如果事件是由平台或服务端触发，同理，则由目标用户所在的服务器负责通知。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.IIntegratedCustomizeHandler">
            <summary>
            能够被ComplexCustomizeHandler集成的ICustomizeHandler。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.IIntegratedCustomizeHandler.CanHandle(System.Int32)">
            <summary>
            当前的处理器能否处理目标类型的自定义信息。
            </summary>
            <param name="informationType">自定义信息的类型</param>
            <returns>能处理？</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController">
            <summary>
            组控制器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.Broadcast(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在组内广播信息。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.BroadcastReceived">
            <summary>
            当服务端接收到要转发的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.GroupNotifyEnabled">
            <summary>
            加入/退出组、上下线等事件是否通知组友。默认值为true。
            注意，如果关闭该选项，客户端则不能保持实时的组的状态，将导致广播信息发送出现错误（IGroupOutter.Broadcast方法）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.UseGroupNotifyThread">
            <summary>
            组友上下线通知是否使用单独的线程。默认值为false。
            如果要开启组友通知线程，必须先开启组友通知（即必须先将GroupNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupHandler.UseGroupNotifyThread">
            <summary>
            组友上下线通知是否使用单独的线程。默认值为false。
            如果要开启组友通知线程，必须先开启组友通知（即必须先将GroupNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter">
            <summary>
            用于客户端发送与组操作相关的信息和广播信息。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.JoinGroup(System.String)">
            <summary>
            加入组。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.QuitGroup(System.String)">
            <summary>
            退出组。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.GetGroupMembers(System.String)">
            <summary>
            获取组成员列表。如果本地有缓存，有直接从本地缓存提取。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.GetGroupMembersFromServer(System.String)">
            <summary>
            从服务器获取组成员列表。即使本地有缓存，也查询服务器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.Broadcast(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.ActionTypeOnChannelIsBusy,OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode)">
            <summary>
            在组内广播信息。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">信息的内容</param>
            <param name="broadcastChannelMode">选择通道模型。</param>
            <param name="action">当通道繁忙时采取的操作。</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.BroadcastAllowDiscard(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode)">
            <summary>
            在组内广播允许丢弃的信息。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">信息的内容</param>
            <param name="broadcastChannelMode">选择通道模型。</param>
            <param name="discardOnToBeRejudge">当通道处于ChannelGuessState.ToBeRejudge状态时，是否直接丢弃消息。</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.BroadcastBlob(System.String,System.Int32,System.Byte[],System.Int32,System.Int32,OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode)">
            <summary>
            在组内广播大数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="blobContent">大数据块的内容</param>
            <param name="broadcastChannelMode">选择通道模型。</param>
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneJoinGroup">
            <summary>
            当新成员加入组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneQuitGroup">
            <summary>
            当成员退出组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.GroupmateOffline">
            <summary>
            当用户掉线，从所有动态组中退出时，触发该事件。参数：MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.BroadcastReceived">
            <summary>
            当接收到某个组内的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent。
            如果broadcasterID为null，表示是服务端发送的广播。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.TryP2PWhenGroupmateConnected">
            <summary>
            当组友上线时，是否自动进行P2P连接。默认值为true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode">
            <summary>
            广播通道选择模型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode.P2PChannelFirst">
            <summary>
            如果和某个用户之间的P2P通道存在，则到该用户的广播经过P2P通道传送；否则，经过服务器中转。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode.AllTransferByServer">
            <summary>
            全部经过服务器中转，不使用任何P2P通道。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.BroadcastChannelMode.AllByP2PChannel">
            <summary>
            仅仅使用P2P通道。如果与某个用户之间的P2P通道不存在，则不发送广播到该用户。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser">
            <summary>
            客户端通过此处理器来处理接收到的所有消息。2011.01.25最后修改。
            (1)将指定MessageType的消息进行Push到responseManager以等到以后提取。    
            (2)如果AsynMessageQueueEnabled为true，则启动消息队列，所有接收到的非push消息都先放到队列中，再由后台线程逐个取出处理。
            (3)如果AsynMessageQueueEnabled设为true，就没必要再将客户端引擎的HandleMessageAsynchronismly属性设为true了。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.AddPushedMessageType(System.Int32)">
            <summary>
            增加待提取的消息类型。
            </summary>
            <param name="messageType">待提取的消息类型</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.Dispose">
            <summary>
            释放异步消息队列线程。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.ProcesserList">
            <summary>
            挂接的所有客户端消息处理器的列表。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.ResponseManager">
            <summary>
            用于管理从服务器接收的待提取的回复消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.PushKeyDispersiveKeyScope">
            <summary>
            增加待提取的消息类型的离散集合。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.EsfLogger">
            <summary>
            日志记录器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.AsynMessageQueueEnabled">
            <summary>
            是否启用异步消息队列，默认值true。
            注意，如果需要在处理某个消息时，又要同步调用服务器，则必须设为true，否则，将会一直阻塞到调用超时。
            最好不要在消息处理线程中发出同步调用，因为即使开启了异步队列，如果同步调用的回复比较久，在这段时间内也会一直堵塞处理线程，导致后续的消息不能及时处理。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.MessageTransceiver">
            <summary>
            用于发送异步消息处理的结果。如果AsynMessageQueueEnabled为false，则该属性不需要设置。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel">
            <summary>
            当要经过P2P发送消息而P2P通道又不存在时，采取的操作。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel.TransferByServer">
            <summary>
            通过服务器中转
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel.Discard">
            <summary>
            丢弃消息
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.StreamTcpEngine">
            <summary>
            基于流协议的TCP服务端引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine">
            <summary>
            tcp服务端引擎基础组件。  
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine">
            <summary>
            TCP服务端引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.IServerEngine">
            <summary>
            服务端引擎接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.ChannelIsBusy(System.Net.IPEndPoint)">
            <summary>
            到目标客户的通道是否繁忙？
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.SendMessageToClient(System.Net.IPEndPoint,OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            主动给某个客户同步发信息，不经任何处理，直接发送。注意：如果引擎已经停止，则直接返回。      
            </summary>		
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.PostMessageToClient(System.Net.IPEndPoint,OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            主动给某个客户异步投递信息，不经任何处理，直接发送。注意：如果引擎已经停止，则直接返回。      
            </summary>		
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.CloseOneConnection(System.Net.IPEndPoint,OMCS.Communication.Basic.Server.DisconnectedType)">
            <summary>
            主动关闭连接，将触发SomeOneDisconnected事件。
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.CloseAllConnection">
            <summary>
            关闭所有连接。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ChangeListenerState(System.Boolean)">
            <summary>
            关闭或开启监听器。该方法调用不影响网络引擎的消息接收和处理。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.InvalidateConnection(System.Net.IPEndPoint)">
            <summary>
            使连接失效。如果再收到该连接上的后续消息时，则自动断开连接。（比如，用于被挤掉线）
            </summary>
            <param name="adderss">目标连接的客户端地址</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.BindConnection(System.Net.IPEndPoint,System.String)">
            <summary>
            将UserID与对应的连接绑定起来。(比如，通过登录验证后，才将其绑定)
            </summary>
            <param name="adderss">要绑定的连接的客户端地址。</param>
            <param name="userID">要绑定的用户帐号</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.GetConnectionBoundState(System.Net.IPEndPoint)">
            <summary>
            获取连接的绑定状态。
            </summary>
            <param name="adderss">目标连接的客户端地址。</param>
            <returns>如果目标连接不存在，则返回null。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.GetAddressList">
            <summary>
            获取所有在线连接的客户端的地址。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MessageVerifier">
            <summary>
            服务端引擎会使用MessageVerifier来验证从每个连接上接收到的消息。如果通不过验证，引擎将会关闭对应的连接。
            如果不需要验证连接上收到的消息，则设为null即可。
            （1）通常我们可以验证处于ConnectionBoundState.NotBound状态的连接上收到的所有消息的类型，如果不是期望的，则关闭对应的连接。
            （2）对于大多数应用，前面的几个消息通常是尝试登陆消息（包含了登陆密码），如果有的应用需要在客户端登陆失败时，立即关闭其对应的连接，则可以利用该机制 -- 即在IMessageVerifier的实现中，解析登录消息，并验证登陆密码。
            （3）登录通过之后，可以调用BindIPE方法，使连接进入已绑定状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ExpiredSpanInSecs">
            <summary>
            某个连接连上后，如果在ExpiredSpanInSecs时间内不发送任何数据，则将关闭该连接。
            如果ExpiredSpanInSecs小于等于0，则不做过期检查。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完，则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.AsynMessageQueueEnabled">
            <summary>
            是否开启异步消息队列。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            【该设置用于防止服务器为速度慢的通道缓存太多的消息，而导致服务器内存无限制增长】
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.UseIpeAsUserID">
            <summary>
            是否使用客户端的IPE作为其UserID。默认值为false。通常，当客户端发过来的消息头中不包含UserID信息，将其设为true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.IsListening">
            <summary>
            监听器是否开启。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.PassiveServer">
            <summary>
            是否用于客户端的服务器引擎。【for p2p】
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ConnectionBound">
            <summary>
            当连接与具体的UserID绑定起来时（表明已经通过验证），触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.SomeOneDisconnected">
            <summary>
            当某连接断开或者从该连接上接收非法/无效的消息时，触发该事件
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.SomeOneConnected">
            <summary>
            当tcp连接建立成功时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ConnectionCountChanged">
            <summary>
            当tcp连接数量发生变化时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MessageReceived2">
            <summary>
            当引擎接收到消息时触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ListenerStateChanged">
            <summary>
            当连接监听器的状态发生变化时，触发此事件。事件参数为true，表明连接监听器启动；事件参数为false，表明连接监听器已停止。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.IConnectionCountGetter">
            <summary>
            IConnectionCountGetter 获取当前已经存在的TCP连接数
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.DisposeUser(OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey,OMCS.Communication.Basic.Server.DisconnectedType)">
            <summary>
            对于一个连接来说，可以保证SomeOneDisconnected事件只触发一次
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.CloseOneConnection(System.Net.IPEndPoint,OMCS.Communication.Basic.Server.DisconnectedType)">
            <summary>
            对于一个连接来说，只触发一次SomeOneDisconnected事件
            </summary>   
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.MessageVerifier">
            <summary>
            如果不需要验证连接上收到的消息，则设为null即可。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.SocketSendBuffSize">
            <summary>
            SocketSendBuffSize 网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完，则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.AsynMessageQueueEnabled">
            <summary>
            是否开启异步消息队列。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.UseIpeAsUserID">
            <summary>
            是否使用客户端的IPE作为其UserID。默认值为false。通常，当客户端发过来的消息头中不包含UserID信息，将其设为true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey">
            <summary>
            用于封装一个TCP连接的相关信息。一个IContextKey实例与一个Tcp连接对应。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey.UserID">
            <summary>
            当前连接对应的UserID。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState">
            <summary>
            连接与用户帐号的绑定状态
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState.NotBound">
            <summary>
            连接建立时的状态，还未与UserID绑定。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState.Bound">
            <summary>
            连接已与用户ID绑定
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState.Invalid">
            <summary>
            连接已经失效，即将被释放。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.MessagePipe">
            <summary>
            IMessagePipe接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessagePipe">
            <summary>
            消息管道，由Filter和Spy组合而成，将多个MessageFilter和MessageSpy组合成一个有序的管道。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessagePipe.PipeOutMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            消息在发送之前经过管道处理。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessagePipe.PipeInMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            接收到的消息在被NakeDispatcher分派之前经过管道处理。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessagePipe.GatewayMessageSpy">
            <summary>
            工作于网关层，网络组件收到的消息需要经过的第一个组件就是GatewayMessageSpy，
            发送的消息在到达网络组件前经过的最后一个组件也是GatewayMessageSpy
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessagePipe.InnerMessageSpy">
            <summary>
            接收的消息到达处理器之前经过的最后一个组件就是InnerMessageSpy，
            处理器返回的结果消息经过的第一个组件也是InnerMessageSpy
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.IMessagePipe.MessageForbidden">
            <summary>
            当消息在Pipe中传递被Pipe丢弃时，触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.ServerConfiguration">
            <summary>
            服务器的基础配置信息。
            </summary>
        </member>
        <member name="T:ESBasic.Network.IStringEncoder">
            <summary>
            StringEncoder 指定字符串转换成流时的编码格式
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.PropertyKeys">
            <summary>
            Property Keys
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_DeviceInterface_FriendlyName">
            <summary>
            PKEY_DeviceInterface_FriendlyName
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_FormFactor">
            <summary>
            PKEY_AudioEndpoint_FormFactor
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_ControlPanelPageProvider">
            <summary>
            PKEY_AudioEndpoint_ControlPanelPageProvider
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_Association">
            <summary>
            PKEY_AudioEndpoint_Association
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_PhysicalSpeakers">
            <summary>
            PKEY_AudioEndpoint_PhysicalSpeakers
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_GUID">
            <summary>
            PKEY_AudioEndpoint_GUID
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_Disable_SysFx">
            <summary>
            PKEY_AudioEndpoint_Disable_SysFx 
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_FullRangeSpeakers">
            <summary>
            PKEY_AudioEndpoint_FullRangeSpeakers 
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_Supports_EventDriven_Mode">
            <summary>
            PKEY_AudioEndpoint_Supports_EventDriven_Mode 
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEndpoint_JackSubType">
            <summary>
            PKEY_AudioEndpoint_JackSubType
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEngine_DeviceFormat">
            <summary>
            PKEY_AudioEngine_DeviceFormat 
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_AudioEngine_OEMFormat">
            <summary>
            PKEY_AudioEngine_OEMFormat
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKeys.PKEY_Device_FriendlyName">
            <summary>
            PKEY _Devie_FriendlyName
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.MMDeviceEnumeratorComObject">
            <summary>
            implements IMMDeviceEnumerator
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioStreamCategory">
            <summary>
            Specifies the category of an audio stream.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.Other">
            <summary>
            Other audio stream.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.ForegroundOnlyMedia">
            <summary>
            Media that will only stream when the app is in the foreground.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.BackgroundCapableMedia">
            <summary>
            Media that can be streamed when the app is in the background.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.Communications">
            <summary>
            Real-time communications, such as VOIP or chat.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.Alerts">
            <summary>
            Alert sounds.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.SoundEffects">
            <summary>
            Sound effects.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.GameEffects">
            <summary>
            Game sound effects.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioStreamCategory.GameMedia">
            <summary>
            Background audio for games.
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioEndpointVolumeChannel">
            <summary>
            Audio Endpoint Volume Channel
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeChannel.VolumeLevel">
            <summary>
            Volume Level
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeChannel.VolumeLevelScalar">
            <summary>
            Volume Level Scalar
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.RectHotPointCache">
            <summary>
            RectHotPointCache 用于缓存一个矩形上的8个热点对象。
            zhuweisky 2010.03.22
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.RectHotPointCache.GetCursor(OMCS.Engine.Paint.Views.RectHotPointPosition)">
            <summary>
            GetCursor 根据热点所处于Rectangle的位置，获取表示修改Rectangle尺寸的正确光标。
            </summary>       
        </member>
        <member name="T:OMCS.Engine.Paint.ViewEditors.OperationMockEditor">
            <summary>
            虚拟的View编辑器，主要用于单选或框选View对象、或移动、改变它们的大小。
            zhuweisky 2010.03.21
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Application.PageZoomFactor">
            <summary>
            白板页面的缩放系数。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent25">
            <summary>
            0.25
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent50">
            <summary>
            0.5
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent75">
            <summary>
            0.75
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent100">
            <summary>
            1.0
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent125">
            <summary>
            1.25
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent150">
            <summary>
            1.5
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.PageZoomFactor.Percent200">
            <summary>
            2.0
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultimediaManagerFactory">
            <summary>
            用于创建或获取MultimediaManager单例。
            保证在整个Appdomain中只有一个IMultimediaManager实例。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaManagerFactory.GetSingleton">
            <summary>
            获取多媒体管理器的单件实例。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.MultimediaManagerFactory.GetSingleton(System.Boolean)">
            <summary>
            获取多媒体管理器的单件实例。
            </summary>
            <param name="createNew">是否创建一个新的单件实例。如果原先的Singleton已经被释放，则传入true。</param>             
        </member>
        <member name="T:OMCS.Engine.Video.DibDrawer">
            <summary>
            DibDrawer 用于绘制DIB位图。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.DibDrawer.ChangeRegion(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            更改要绘制的区域。
            </summary>
            <param name="src">要绘制的源区域</param>
            <param name="dst">要绘制的目标区域，如果为null，表示始终绘制整个表面</param>
        </member>
        <member name="T:OMCS.Engine.Video.AgileDibDrawer">
            <summary>
            AgileDibDrawer 支持以下功能。
            (1)在绘制之前是否使用XVID先进行解码。
            (2)采用异步解码并绘制。
            (3)绘制时是否始终填满整个Panel。
            (4)动态更改绘制的控件。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.AgileDibDrawer.#ctor(System.Windows.Forms.Control,OMCS.Engine.BitmapInfoHeader,System.Boolean,System.Int32,System.Drawing.Rectangle,System.Nullable{System.Drawing.Rectangle})">
            <summary>
            构造函数。
            </summary>
            <param name="thePanel">在哪个控件的表面绘制。可以传入null，然后通过ChangePanel方法更改。</param>
            <param name="header">帧的头信息</param>        
            <param name="codecEnabled">在绘制之前是否使用XVID先进行解码</param>        
            <param name="src">要绘制帧的哪个部分</param>
            <param name="dst">要绘制到目标表面的哪个区域。如果为null，表示始终绘制整个表面</param>
        </member>
        <member name="M:OMCS.Engine.Video.AgileDibDrawer.ChangePanel(System.Windows.Forms.Control)">
            <summary>
            更改绘制的控件。
            </summary>        
        </member>
        <member name="M:OMCS.Engine.Video.AgileDibDrawer.ChangeRegion(System.Drawing.Rectangle,System.Nullable{System.Drawing.Rectangle})">
            <summary>
            更改要绘制的区域。
            </summary>
            <param name="src">要绘制的源区域</param>
            <param name="dst">要绘制的目标区域，如果为null，表示始终绘制整个表面</param>
        </member>
        <member name="M:OMCS.Engine.Video.AgileDibDrawer.GetBitmap">
            <summary>
            将当前图像保存为位图。
            </summary>      
        </member>
        <member name="P:OMCS.Engine.Video.AgileDibDrawer.AdaptiveDestRegion">
            <summary>
            是否自适应绘制满目标控件表面。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.AgileDibDrawer.MaxIdleSpan4BlackScreen">
            <summary>
            连续多长时间没有新的帧绘制，就显示黑屏。单位：秒。默认值-1。
            若取值小于等于0，则表示不使用黑屏。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.AgileDibDrawer.OnlyDrawInPaint">
            <summary>
            是否仅仅在控件的Paint事件中绘制。默认值为true。
            当OnlyDrawInPaint为true时，如果要绘制新的帧，则调用Panel的Refresh方法，以间接触发Paint事件以进行绘制。
            若OnlyDrawInPaint为false，表示要绘制新的帧时，直接生硬地调用DrawDibDraw在Panel表面绘制。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.AgileDibDrawer.FrameQueueFull">
            <summary>
            视频帧队列是否已满？
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.ImageConvertPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.ImageConvertPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.ImageConvertPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.ImageConvertPanel.ConvertCompleted">
            <summary>
            事件参数：是否成功？
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareManagePanel.ReloadCoursewareSubMenuItem">
            <summary>
            重新加载 “打开课件”和“删除课件”的子菜单
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareManagePanel.OnCoursewareUsed(System.Boolean)">
            <summary>
            是否使用了课件？ 控制：
            （1）设置“重下当前课件”的菜单是否可见。
            （2）“新建页”、“删除页”的菜单是否可见。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareManagePanel.SetCoursewareItemChecked(System.String)">
            <summary>
            “打开课件”下勾选正确的课件子菜单。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareManagePanel.SetBackImageOfPage(System.Int32,System.Drawing.Image)">
            <summary>
            （预先）设置各个页的背景图片（如课件图片）。可随时调用，甚至在白板连接之前，白板页还不存在的时候，就可以预设。
            </summary>
            <param name="pageIndex">要设置的页的索引</param>
            <param name="img">背景图片</param>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.CoursewareManagePanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareManagePanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.CoursewareManagePanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.CoursewareManagePanel.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：翻页、上传课件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.CoursewareManagePanel.CoursewareEnabled">
            <summary>
            前提是IsManager为true时该属性才有效。是否需要开启课件功能？如果不开启，则只有新建页/删除页 的功能。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.CoursewareManagePanel.CoursewareUsed">
            <summary>
            是否正在使用课件。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.CoursewareProcessState">
            <summary>
            当前加载课件的进度。
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.CoursewareProcessState.Damaged">
            <summary>
            损坏
            </summary>
        </member>
        <member name="T:OMCS.Passive.Video.CameraConnector">
            <summary>
            摄像头连接器。通过该组件可以连接到对方的摄像头，播放对方摄像头捕获到的视频。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Video.CameraConnector.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.GetCurrentImage">
            <summary>
            获取当前正在绘制的图像。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.GetVideoQuality">
            <summary>
            获取当前视频的编码质量。0~31，数值越小越清晰。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.ChangeOwnerCameraVideoSize(System.Drawing.Size)">
            <summary>
            修改Owner的摄像头的采集分辨率。如果其摄像头不支持该分辨率，则将切换到最接近指定值的分辨率上。如果Owner方修改成功，将会触发本地的OwnerCameraVideoSizeChanged事件。
            </summary>
            <param name="newSize">新的采集分辨率</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.ChangeOwnerCameraVideoSize(System.Int32)">
            <summary>
            修改Owner的摄像头的采集分辨率。如果其摄像头不支持该分辨率，则将切换到最接近指定值的分辨率上。如果Owner方修改成功，将会触发本地的OwnerCameraVideoSizeChanged事件。
            </summary>
            <param name="widthAddHeight">新的采集分辨率的宽和高之和。比如分辨率为（320*240），则该参数为320+240=560</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的摄像头的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出视频</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.ChangeOwnerAutoAdjustCameraEncodeQuality(System.Boolean)">
            <summary>
            修改Owner的是否自动调节视频编码质量的控制。
            </summary>
            <param name="autoAdjust">是否自动调节</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.ChangeOwnerCameraEncodeQuality(System.Int32)">
            <summary>
            修改Owner的视频编码质量。
            </summary>
            <param name="quality">编码质量。取值0~31，值越小，越清晰。</param>
        </member>
        <member name="M:OMCS.Passive.Video.CameraConnector.GetReceivedFrameCount">
            <summary>
            获取自连接成功后接收到的视频帧的总数。
            </summary>      
        </member>
        <member name="E:OMCS.Passive.Video.CameraConnector.OwnerCameraVideoSizeChanged">
            <summary>
            当检测到Owner的摄像头采集的视频大小发生变化时，触发此事件。参数为新的视频大小。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraConnector.OwnerOutputChanged">
            <summary>
            当Owner视频输出控制改变时，触发此事件。【对应于Owner端的多媒体管理器的OutputVideo属性的修改】
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraConnector.OwnerOutput">
            <summary>
            Owner是否输出了视频。【对应于Owner端的多媒体管理器的OutputVideo属性】
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraConnector.VideoSize">
            <summary>
            视频的尺寸（长和宽都已经修正为8的整数倍）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraConnector.DisplayVideoParameters">
            <summary>
            是否在视频图像上面打印视频的相关信息（视频尺寸、编码质量、帧频）。默认值：false。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <!-- 对于成员“P:OMCS.Passive.Video.CameraConnector.OwnerID”忽略有格式错误的 XML 注释 -->
        <member name="P:OMCS.Passive.Video.CameraConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraConnector.WaitOwnerOnlineSpanInSecs">
            <summary>
            当调用BeginConnect连接Owner的设备时，如果Owner不在线，则等待对方上线的最长时间。如果超过这个时间，owner还没连接上来，则BeginConnect的结果仍然为TargetUserOffline。 
            单位：秒。默认值0。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraConnector.AutoSynchronizeVideoToAudio">
            <summary>
            [从Guest的角度]如果连接了同一个Owner的摄像头和话筒，那么，CameraConnector在播放视频时是否自动与音频保持同步。默认值为true。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DefaultSendingFileParasDecider.FilePackageSize">
            <summary>
            文件数据包的大小。默认2048。网络环境越好，则数据包可以越大。比如，局网内部文件传输可以设为204800。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFilePackageSender">
            <summary>
            IFilePackageMessageSender 用于将FilePackage发送出去。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.TextPlusContractHelper">
            <summary>
            针对OMCS.Communication.Plus.Core.TextMessageHeader定制的服务端和客户端可以共用的ContractHelper。
            基于XML的文本协议，消息体借助于ESBasic.Helpers.XmlHelper来实现xml化和反xml化（仅仅支持两级节点）。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.Server.IGroupManager">
            <summary>
            组管理器接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Group.Server.IGroupManager.GetGroupmates(System.String)">
            <summary>
            获取用户的所有组友。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Group.Server.IGroupManager.GetGroupMembers(System.String)">
            <summary>
            获取目标组的所有成员。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.BaseInformationTypes">
            <summary>
            自定义信息类型空间的基类。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.BaseInformationTypes.StartKey">
            <summary>
            当前信息类型空间的起始值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.BaseInformationTypes.MaxKeyValue">
            <summary>
            当前信息类型空间的最大值。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.BlobReceiver">
            <summary>
            用于接收Blob的片段，并将其拼接为一个完整的Blob。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Blob.BlobID">
            <summary>
            大数据块唯一编号。从1开始逐个递增。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Blob.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Blob.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.UserData">
            <summary>
            登陆用户的基础信息。即可用于独立的应用服务器、也可用于ESPlatform体系中。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.AppServerID">
            <summary>
            在ESPlatform群集环境中，目标用户所连接的应用服务器ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.Address">
            <summary>
            服务器看到的客户端的地址（通常是经过NAT之后的地址）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.P2PAddress">
            <summary>
            客户端的私有地址信息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.TimeLogon">
            <summary>
            上线时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.ClientType">
            <summary>
            客户端类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.Tag">
            <summary>
            应用程序可以使用该属性保存与当前用户相关的其它信息。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageHeader">
            <summary>
            消息头接口，规定了消息头中至少包含的信息：发送者、接收者、消息类型、消息ID。
            zhuweisky 2005.12.07 
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.UserID">
            <summary>
            发出本消息的用户编号。注意，普通用户编号只能由数字和字母组成，并且其最大长度会由IMessageHeader的实现类给出具体规定。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.DestUserID">
            <summary>
            接收消息的目标用户编号。注意，普通用户编号只能由数字和字母组成，并且其最大长度会由IMessageHeader的实现类给出具体规定。		
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.MessageType">
            <summary>
            消息的类型。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.MessageID">
            <summary>
            每个消息实例的唯一标志（也可用于将功能请求与其回复一一对应起来）
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper">
            <summary>
            与二进制协议相关的决策。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.ParseMessageHeader(System.Byte[],System.Int32)">
            <summary>
            将字节流解析为消息头。如果消息头非法，则返回null。
            确保此方法不会抛出异常。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.MessageStartToken">
            <summary>
            消息头中的起始标志，用于验证IMessageHeader.StartToken是否正确。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.MessageHeaderLength">
            <summary>
            消息头的长度
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.MessageDispatcher">
            <summary>
            IMessageDispatcher接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.PropertyKey">
            <summary>
            PROPERTYKEY is defined in wtypes.h
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKey.formatId">
            <summary>
            Format ID
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.PropertyKey.propertyId">
            <summary>
            Property ID
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.PropertyKey.#ctor(System.Guid,System.Int32)">
            <summary>
            <param name="formatId"></param>
            <param name="propertyId"></param>
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.EEndpointHardwareSupport">
            <summary>
            Endpoint Hardware Support
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.EEndpointHardwareSupport.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.EEndpointHardwareSupport.Mute">
            <summary>
            Mute
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.EEndpointHardwareSupport.Meter">
            <summary>
            Meter
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Widget.TextEditForm">
            <summary>
            TextEditForm 用于编辑TextView的Content信息。
            zhuweisky 2010.03.22
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Widget.TextEditForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Widget.TextEditForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Widget.TextEditForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.SinglePointResizeAction">
            <summary>
            SinglePointResizeAction 用于类似线段、三角形等通过移动单个定点来改变形状的动作。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.IResizeAction">
            <summary>
            用于封装一个Resize动作。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.ImagePartSelecter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ImagePartSelecter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ImagePartSelecter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ImagePartSelecter.GetResultImage">
            <summary>
            获取结果图片（原始图片的选择区域截图）。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ImagePartSelecter.Initialize(System.Int32)">
            <summary>
            初始化。
            </summary>
            <param name="outputImgLen">最终要输出的正方形图片的边长。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ImagePartSelecter.SetSourceImage(System.Drawing.Image)">
            <summary>
            指定要被选取的图片。
            </summary>        
        </member>
        <member name="E:OMCS.Engine.Paint.Application.ImagePartSelecter.ImagePartSelected">
            <summary>
            当选择的区域发生改变时，会触发此事件。事件参数为原始图片的选择区域截图。
            </summary>
        </member>
        <member name="T:OMCS.Tools.PhotoPanel">
            <summary>
            用于拍照的控件。
            </summary>
        </member>
        <member name="F:OMCS.Tools.PhotoPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Tools.PhotoPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Tools.PhotoPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Tools.PhotoPanel.Start">
            <summary>
            初始化摄像头，并启动它。
            </summary>
        </member>
        <member name="M:OMCS.Tools.PhotoPanel.GetCurrentImage">
            <summary>
            照相。返回当前帧。
            </summary>        
        </member>
        <member name="M:OMCS.Tools.PhotoPanel.Stop">
            <summary>
            停止摄像头。
            </summary>
        </member>
        <member name="P:OMCS.Tools.PhotoPanel.ImageSize">
            <summary>
            获取或设置摄像头采集的图片的大小。
            </summary>
        </member>
        <member name="P:OMCS.Tools.PhotoPanel.CameraIndex">
            <summary>
            要使用的摄像头索引。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.FilterCategory">
            <summary>
            DirectShow filter categories.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.AudioInputDevice">
            <summary>
            Audio input device category.Equals to CLSID_AudioInputDeviceCategory.
            </summary>       
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.VideoInputDevice">
            <summary>
            Video input device category. Equals to CLSID_VideoInputDeviceCategory.
            </summary>       
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.VideoCompressorCategory">
            <summary>
            Video compressor category. Equals to CLSID_VideoCompressorCategory.
            </summary>       
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.AudioCompressorCategory">
            <summary>
            Audio compressor category. Equals to CLSID_AudioCompressorCategory.
            </summary>        
        </member>
        <member name="F:OMCS.Server.ServerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OMCS.Server.ServerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OMCS.Server.ServerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OMCS.Passive.Video.VideoPanel">
            <summary>
            启用了双缓冲的Panel，防止视频闪烁。
            如果使用DynamicCameraConnector，则可使用该VideoPanel控件来绘制视频。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Video.VideoPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.VideoPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.Video.VideoPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.ServerFilePackageSender">
            <summary>
            用于Server向Client发送文件包
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileSenderManager">
            <summary>
            用于管理所有的文件发送操作。
            可以用于服务端和客户端，如果在服务端使用，则不需要设置MessageTransceiver属性；如果在客户端使用，则不需要设置RegularSender属性。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager">
            <summary>
            管理所有的FileSender，并且跟踪所有正在发送和即将发送的FileSender和文件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.Initialize(System.String,System.Int32)">
            <summary>
            初始化管理器。
            </summary>
            <param name="curUserID">当前登陆的用户ID</param>
            <param name="filePackageMessageType">文件数据包的消息类型</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.GetFileInfo(System.String)">
            <summary>
            获取正在发送的或还未被接收方回复的文件传送项目。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.GetAllSendingFileIDs(System.String)">
            <summary>
            获取接收者为accepterID的正在发送的文件ID。
            </summary>
            <param name="accepterID">接收者的UserID。如果为null，则表示要获取所有正在发送的文件ID</param>
            <returns>文件ID的列表</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.ReadyToSendFile(System.String,System.String,System.Boolean,System.UInt64,System.DateTime,System.String,OMCS.Communication.Plus.FileTransceiver.SendingFileParas,System.String)">
            <summary>
            在询问对方是否接受文件（夹）之前调用以进行注册。
            </summary>
            <param name="accepterID">接收文件的用户ID</param>
            <param name="filePath">被发送文件的路径</param>
            <param name="isFolder">false表示传送文件；true表示传送文件夹</param>
            <param name="totalSize">文件（夹）的大小</param>
            <param name="lastUpdateTime">被发送文件的最后一次更新时间</param>
            <param name="projectID">文件传送项目的编号</param>       
            <param name="paras">发送参数设定。传入null，表示采用IFileSenderManager的默认设置。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.SendFile(System.String,System.UInt64,System.String,System.UInt64)">
            <summary>
            开始在后台线程中发送文件（夹）。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="receivedCount">文件（夹）整体已经发送了多少字节。</param>	
            <param name="disrupttedFileRelativePath">仅用于文件夹续传，表示将被续传的文件的相对路径</param>
            <param name="disrupttedFileReceivedCount">仅用于文件夹续传，表示将被续传的文件内部起始的偏移</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.CancelFileSending(System.String,OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType,System.String)">
            <summary>
            取消文件的发送（主动，被动）
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.GetFileSenderState(System.String,System.Int32@,System.Int32@)">
            <summary>
            获取某个文件发送器的状态，包括发送时间间隔（ms）、数据包的大小（字节）。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnSelfOffline">
            <summary>
            自己掉线。将关闭所有的文件（夹）发送器。 
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnDestUserOffline(System.String)">
            <summary>
            目标用户destUserID掉线，将关闭与该用户相关的文件发送器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnReliableP2PChannelClosed(System.String)">
            <summary>
            与目标用户之间的可靠P2P通道关闭，将关闭与该用户相关的文件发送器。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小。默认值为1024*1024。该属性的值应该至少要大于或等于FilePackageSize。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.MessageTransceiver">
            <summary>
            MessageTransceiver 如果在服务端使用FileSenderManager，则不需要设置该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.RegularSender">
            <summary>
            RegularSender 如果在客户端使用FileSenderManager，则不需要设置该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1024*1024。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.UseInClient">
            <summary>
            UseInClient 如果为true表示在客户端使用，为false表示在服务器端使用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager">
            <summary>
            用于在接收方管理那些传送中断而可能被续传的文件（夹）。
            (1)当文件（夹）接收过程中因任何原因中断时，将其添加到ResumedFileManager中。
            (2)当发送方发送文件（夹）给接收方时，接收方从ResumedFileManager寻找匹配项，如果找到，则询问接收者：续传/另存/取消；如果找不到，则询问接收者：另存/取消。
            (3)当能续传，而接收者选择了另存或取消，则从ResumedFileManager中移除匹配项，并删除本地临时文件（夹）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager">
            <summary>
            文件续传项目管理器。
            用于在接收方管理那些传送中断而可能被续传的文件。
            (1)当文件接收过程中因任何原因中断时，将其添加到ResumedFileManager中。
            (2)当发送方发送文件给接收方时，接收方从ResumedFileManager寻找匹配项，如果找到，则询问接收者：续传/另存/取消；如果找不到，则询问接收者：另存/取消。
            (3)当能续传，而接收者选择了另存或取消，则从ResumedFileManager中移除匹配项，并删除本地临时文件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager.Mapping4Receive(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            当接收一个文件之前，先看能否找到续传的匹配项(同时判断临时文件是否存在)。如果没有匹配，则返回null。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager.Remove(OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem,System.Boolean)">
            <summary>
            移除续传项。
            </summary>
            <param name="resumedFileItem">要移除的续传项</param>
            <param name="deleteTempFile">是否同时删除临时文件</param>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件。单位：秒。默认值：300。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager.Remove(OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem,System.Boolean)">
            <summary>
            移除续传项。
            </summary>
            <param name="resumedFileItem">要移除的续传项</param>
            <param name="deleteTempFile">是否同时删除临时文件（夹）</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager.Mapping4Receive(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            当接收一个文件（夹）之前，先看能否找到续传的匹配项(同时判断临时文件（夹）是否存在)。如果没有匹配，则返回null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件（夹）。单位：秒。默认值：300。
            如果值小于等于0，表示不使用续传功能。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem">
            <summary>
            有可能被续传的项目。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.#ctor(System.String,System.String,System.UInt64,System.DateTime,System.String,System.String,System.UInt64)">
            <summary>
            单个文件续传
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.#ctor(System.String,System.String,System.UInt64,System.DateTime,System.String,System.String,System.UInt64,System.String,System.UInt64,System.UInt64)">
            <summary>
            文件夹续传
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedFileRelativePath">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的相对路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedFileSize">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedFileReceivedCount">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件已接收的字节数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.SenderID">
            <summary>
            发送者的ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.OriginPath">
            <summary>
            发送方发送的文件（夹）的全路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.OriginSize">
            <summary>
            发送方发送的文件（夹）的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.OriginLastUpdateTime">
            <summary>
            发送方发送的文件（夹）的最后修改日期。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.LocalTempFileSavePath">
            <summary>
            接收的中断的临时文件的存储路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.LocalSavePath">
            <summary>
            接收的文件（夹）存储路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.ReceivedCount">
            <summary>
            已经接收了多少字节数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedTime">
            <summary>
            接收中断的时间。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.TransferingProject">
            <summary>
            文件（夹）传送项目。
            </summary>	
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.IsFolder">
            <summary>
            是否传送的为文件夹。false表示传送的为文件，true表示传送的为文件夹。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.IsSender">
            <summary>
            表示当前用户是发送者还是接收接收者。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.ProjectID">
            <summary>
            文件传送项目的编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.TotalSize">
            <summary>
            要传送的文件（夹）的总大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.OriginPath">
            <summary>
            发送方发送的文件（夹）的全路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.OriginLastUpdateTime">
            <summary>
            发送方发送的文件（夹）的最后修改日期。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.LocalSavePath">
            <summary>
            接收方保存文件（夹）的路径。发送方忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.ProjectName">
            <summary>
            被传送的文件（夹）的名称
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.AccepterID">
            <summary>
            接收者的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.SenderID">
            <summary>
             发送者的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.DestUserID">
            <summary>
            对方的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.TimeStarted">
            <summary>
            传送开始时间
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.SendingFileParas">
            <summary>
            如果是发送方，可以设置该属性以临时保存发送参数；如果为null，则表示采用IFileSenderManager的默认设置。接收方将忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.IsTransfering">
            <summary>
            文件（夹）是否已经开始传送了？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.Comment">
            <summary>
            备注，初始值为BeginSendFile方法的comment参数的值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.FileTransDisrupttedCause">
            <summary>
            拒绝接收文件的原因、或者文件传送中断的原因的详细描述。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.LocalTag">
            <summary>
            保存在本地内存中的tag。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PSessionOutter">
            <summary>
            P2PSessionOutter 与服务器之间通信，协助创建P2PChannel。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.GetUserData(System.String)">
            <summary>
            获取用户的地址信息。如果目标用户不在线，则返回null。
            </summary>
            <param name="userID">目标用户的UserID</param>
            <returns>用户地址信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.InviteTcpP2P(System.String)">
            <summary>
            请求目标用户使用TCP向自己发送P2P连接。
            </summary>
            <param name="userID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.InviteUdpP2P(System.String)">
            <summary>
            请求目标用户使用UDP向自己发送P2P连接。
            </summary>
            <param name="userID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.GetMyPublicIPE">
            <summary>
            向服务器请求自己的经NAPT后的公网IP和TCP端口。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.P2PLogon(OMCS.Communication.Basic.Server.UserManagement.P2PAddress)">
            <summary>
            将P2PAddress报告给服务端。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.ReceiveP2PProbeFrom(System.String,OMCS.Communication.Basic.AgileIPEndPoint,OMCS.Communication.Basic.AgileIPEndPoint)">
            <summary>
            向对方发送P2PSessionMessageTypeRoom.ReceiveP2PProbe消息，由TCP服务端中转。表示[对方=>自己]的P2P通道已经建立
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BaseFileController.FileReceiverManager">
            <summary>
            必须与PromptMessageOutter使用同一个IFileReceiverManager引用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Passive.HeartBeater">
            <summary>
            HeartBeater 用于定时向服务器发送Check "心跳" 消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Passive.BasicPassiveProcesser">
            <summary>
            客户端用于处理所有基本消息。。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.Passive.BasicPassiveProcesser.MessageTransceiver">
            <summary>
            用于发送异步消息处理的结果。如果AsynMessageQueueEnabled为false，则该属性不需要设置。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.AgileIPEndPoint">
            <summary>
            可xml配置的IPEndPoint。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.VersionType">
            <summary>
            版本类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Free">
            <summary>
            免费版
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Professional">
            <summary>
            专业版
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Extended">
            <summary>
            扩展版
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Enterprise">
            <summary>
            企业版
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.ActionTypeOnChannelIsBusy">
            <summary>
            当通道繁忙时，发送数据所采取的操作。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ActionTypeOnChannelIsBusy.Continue">
            <summary>
            继续发送（排队）。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ActionTypeOnChannelIsBusy.Discard">
            <summary>
            丢弃消息
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.ClientType">
            <summary>
            客户端设备的类型。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.DesktopCapturer2">
            <summary>
            解决原来的DesktopCapturer采集帧频最多10fps的问题，DesktopCapturer2使用Timer多线程采集，可以达到20+fps。
            2015.12.03
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.IVideoCapturer">
            <summary>
            原始视频采集器。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.IVideoCapturer.Start">
            <summary>
            开始采集
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.IVideoCapturer.Stop">
            <summary>
            停止采集
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.IVideoCapturer.DataFromOMCS">
            <summary>
            采集的数据是否来自OMCS的DynamicCameraConnector 的 FrameEncodedReceived 事件。一般返回false即可。
            （比如，在部署相互关联的多套OMCS服务器时，可在桥接器上使用。注意，若启用该属性，则在连接自己测试时，要将IMultimediaManager.Advanced.UseOriginImage4Myself设置为false。）
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.IVideoCapturer.MaxWaitFrameCount">
            <summary>
            当等待发送的帧的个数大于等于该值时，则丢弃接下来的采集帧。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.IVideoCapturer.VideoSize">
            <summary>
            要采集的视频大小（分辨率）,宽和高都必须是8的整数倍。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.IVideoCapturer.FrameRate">
            <summary>
            真实采集的帧频
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.IVideoCapturer.IsCapturing">
            <summary>
            是否正在采集？
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.IVideoCapturer.VideoCaptured">
            <summary>
            当采集完一帧时，触发此事件。事件参数为图像数据。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.IVideoCapturer.VideoError">
            <summary>
            当采集发生错误时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.IVideoCapturer.VideoSizeChanged">
            <summary>
            当采集的分辨率发生变化时，触发此事件。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.IDesktopCapturer.ChangeCaptureRegion(System.Nullable{System.Drawing.Rectangle})">
            <summary>
            动态修改捕捉区域。
            </summary>        
        </member>
        <member name="P:OMCS.Engine.Video.IDesktopCapturer.CaptureRegion">
            <summary>
            实际捕捉的区域。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.DesktopCapturer2.CaptureRegion">
            <summary>
            实际捕捉的区域。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.DesktopCapturer2.VideoCaptured">
            <summary>
            当采集到一帧图像时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.DesktopCapturer2.CaptureError">
            <summary>
            如果采集的过程中发生错误，将触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.ScreenCapture2">
            <summary>
            在win2003下面，无法截悬浮窗等LayeredWindow
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Gsm610WaveFormat">
            <summary>
            GSM 610
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.WaveFormat">
            <summary>
            Represents a Wave file format
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.waveFormatTag">
            <summary>format type</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.channels">
            <summary>number of channels</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.sampleRate">
            <summary>sample rate</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.averageBytesPerSecond">
            <summary>for buffer estimation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.blockAlign">
            <summary>block size of data</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.bitsPerSample">
            <summary>number of bits per sample of mono data</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormat.extraSize">
            <summary>number of following bytes</summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.#ctor">
            <summary>
            Creates a new PCM 44.1Khz stereo 16 bit format
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new 16 bit wave format with the specified sample
            rate and channel count
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of channels</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.ConvertLatencyToByteSize(System.Int32)">
            <summary>
            Gets the size of a wave buffer equivalent to the latency in milliseconds.
            </summary>
            <param name="milliseconds">The milliseconds.</param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.CreateCustomFormat(OMCS.Engine.Soundcard.WaveFormatEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a WaveFormat with custom members
            </summary>
            <param name="tag">The encoding</param>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of channels</param>
            <param name="averageBytesPerSecond">Average Bytes Per Second</param>
            <param name="blockAlign">Block Align</param>
            <param name="bitsPerSample">Bits Per Sample</param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.CreateALawFormat(System.Int32,System.Int32)">
            <summary>
            Creates an A-law wave format
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of Channels</param>
            <returns>Wave Format</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.CreateMuLawFormat(System.Int32,System.Int32)">
            <summary>
            Creates a Mu-law wave format
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of Channels</param>
            <returns>Wave Format</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new PCM format with the specified sample rate, bit depth and channels
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.CreateIeeeFloatWaveFormat(System.Int32,System.Int32)">
            <summary>
            Creates a new 32 bit IEEE floating point wave format
            </summary>
            <param name="sampleRate">sample rate</param>
            <param name="channels">number of channels</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.MarshalFromPtr(System.IntPtr)">
            <summary>
            Helper function to retrieve a WaveFormat structure from a pointer
            </summary>
            <param name="pointer">WaveFormat structure</param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.MarshalToPtr(OMCS.Engine.Soundcard.WaveFormat)">
            <summary>
            Helper function to marshal WaveFormat to an IntPtr
            </summary>
            <param name="format">WaveFormat</param>
            <returns>IntPtr to WaveFormat structure (needs to be freed by callee)</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.FromFormatChunk(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads in a WaveFormat (with extra data) from a fmt chunk (chunk identifier and
            length should already have been read)
            </summary>
            <param name="br">Binary reader</param>
            <param name="formatChunkLength">Format chunk length</param>
            <returns>A WaveFormatExtraData</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.#ctor(System.IO.BinaryReader)">
            <summary>
            Reads a new WaveFormat object from a stream
            </summary>
            <param name="br">A binary reader that wraps the stream</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.ToString">
            <summary>
            Reports this WaveFormat as a string
            </summary>
            <returns>String describing the wave format</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.Equals(System.Object)">
            <summary>
            Compares with another WaveFormat object
            </summary>
            <param name="obj">Object to compare to</param>
            <returns>True if the objects are the same</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.GetHashCode">
            <summary>
            Provides a Hashcode for this WaveFormat
            </summary>
            <returns>A hashcode</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>
            Writes this WaveFormat object to a stream
            </summary>
            <param name="writer">the output stream</param>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.Encoding">
            <summary>
            Returns the encoding type used
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.Channels">
            <summary>
            Returns the number of channels (1=mono,2=stereo etc)
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.SampleRate">
            <summary>
            Returns the sample rate (samples per second)
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.AverageBytesPerSecond">
            <summary>
            Returns the average number of bytes used per second
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.BlockAlign">
            <summary>
            Returns the block alignment
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.BitsPerSample">
            <summary>
            Returns the number of bits per sample (usually 16 or 32, sometimes 24 or 8)
            Can be 0 for some codecs
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormat.ExtraSize">
            <summary>
            Returns the number of extra bytes used by this waveformat. Often 0,
            except for compressed formats which store extra data after the WAVEFORMATEX header
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Gsm610WaveFormat.#ctor">
            <summary>
            Creates a GSM 610 WaveFormat
            For now hardcoded to 13kbps
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Gsm610WaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>
            Writes this structure to a BinaryWriter
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.Gsm610WaveFormat.SamplesPerBlock">
            <summary>
            Samples per block
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.PropertyStoreProperty">
            <summary>
            Property Store Property
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.PropertyStoreProperty.Key">
            <summary>
            Property Key
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.PropertyStoreProperty.Value">
            <summary>
            Property Value
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClockClient">
            <summary>
            Audio Clock Client
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClockClient.GetPosition(System.UInt64@,System.UInt64@)">
            <summary>
            Get Position
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClockClient.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClockClient.Characteristics">
            <summary>
            Characteristics
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClockClient.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClockClient.AdjustedPosition">
            <summary>
            Adjusted Position
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClockClient.CanAdjustPosition">
            <summary>
            Can Adjust Position
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioCaptureClient">
            <summary>
            Audio Capture Client
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioCaptureClient.GetBuffer(System.Int32@,OMCS.Engine.Soundcard.AudioClientBufferFlags@,System.Int64@,System.Int64@)">
            <summary>
            Gets a pointer to the buffer
            </summary>
            <returns>Pointer to the buffer</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioCaptureClient.GetBuffer(System.Int32@,OMCS.Engine.Soundcard.AudioClientBufferFlags@)">
            <summary>
            Gets a pointer to the buffer
            </summary>
            <param name="numFramesToRead">Number of frames to read</param>
            <param name="bufferFlags">Buffer flags</param>
            <returns>Pointer to the buffer</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioCaptureClient.GetNextPacketSize">
            <summary>
            Gets the size of the next packet
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioCaptureClient.ReleaseBuffer(System.Int32)">
            <summary>
            Release buffer
            </summary>
            <param name="numFramesWritten">Number of frames written</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioCaptureClient.Dispose">
            <summary>
            Release the COM object
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.ViewEditors.VirtualEditor">
            <summary>
            VirtualEditor 对应于ViewType.None，通常用于在执行其他Editor时，按下ESC取消后续操作时，这时将用VirtualEditor来模拟完成后续的鼠标事件。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.ViewPropertyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewPropertyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewPropertyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.VideoCapabilities">
            <summary>
            Capabilities of video device such as frame size and frame rate.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.VideoCapabilities.FrameSize">
            <summary>
            Frame size supported by video device.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.VideoCapabilities.MaxFrameRate">
            <summary>
            Maximum frame rate supported by video device for corresponding <see cref="F:OMCS.Engine.DShow.VideoCapabilities.FrameSize">frame size</see>.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IBaseFilter">
            <summary>
            The IBaseFilter interface provides methods for controlling a filter.
            All DirectShow filters expose this interface
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.GetClassID(System.Guid@)">
            <summary>
            Returns the class identifier (CLSID) for the component object.
            </summary>
            
            <param name="ClassID">Points to the location of the CLSID on return.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.Stop">
            <summary>
            Stops the filter.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.Pause">
            <summary>
            Pauses the filter.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.Run(System.Int64)">
            <summary>
            Runs the filter.
            </summary>
            
            <param name="start">Reference time corresponding to stream time 0.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the filter (running, stopped, or paused).
            </summary>
            
            <param name="milliSecsTimeout">Time-out interval, in milliseconds.</param>
            <param name="filterState">Pointer to a variable that receives filter's state.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.SetSyncSource(System.IntPtr)">
            <summary>
            Sets the reference clock for the filter or the filter graph.
            </summary>
            
            <param name="clock">Pointer to the clock's <b>IReferenceClock</b> interface, or NULL. </param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.GetSyncSource(System.IntPtr@)">
            <summary>
            Retrieves the current reference clock.
            </summary>
            
            <param name="clock">Address of a variable that receives a pointer to the clock's IReferenceClock interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.EnumPins(OMCS.Engine.DShow.Core.IEnumPins@)">
            <summary>
            Enumerates the pins on this filter.
            </summary>
            
            <param name="enumPins">Address of a variable that receives a pointer to the IEnumPins interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.FindPin(System.String,OMCS.Engine.DShow.Core.IPin@)">
            <summary>
            Retrieves the pin with the specified identifier.
            </summary>
            
            <param name="id">Pointer to a constant wide-character string that identifies the pin.</param>
            <param name="pin">Address of a variable that receives a pointer to the pin's IPin interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.QueryFilterInfo(OMCS.Engine.DShow.Core.FilterInfo2@)">
            <summary>
            Retrieves information about the filter.
            </summary>
            
            <param name="filterInfo">Pointer to <b>FilterInfo</b> structure.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.JoinFilterGraph(OMCS.Engine.DShow.Core.IFilterGraph,System.String)">
            <summary>
            Notifies the filter that it has joined or left the filter graph.
            </summary>
            
            <param name="graph">Pointer to the Filter Graph Manager's <b>IFilterGraph</b> interface, or NULL
            if the filter is leaving the graph.</param>
            <param name="name">String that specifies a name for the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.QueryVendorInfo(System.String@)">
            <summary>
            Retrieves a string containing vendor information.
            </summary>
            
            <param name="vendorInfo">Receives a string containing the vendor information.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IAMStreamConfig">
            <summary>
            This interface sets the output format on certain capture and compression filters,
            for both audio and video.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.SetFormat(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Set the output format on the pin.
            </summary>
            
            <param name="mediaType">Media type to set.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.GetFormat(OMCS.Engine.DShow.Core.AMMediaType@)">
            <summary>
            Retrieves the audio or video stream's format.
            </summary>
            
            <param name="mediaType">Retrieved media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.GetNumberOfCapabilities(System.Int32@,System.Int32@)">
            <summary>
            Retrieve the number of format capabilities that this pin supports.
            </summary>
            
            <param name="count">Variable that receives the number of format capabilities.</param>
            <param name="size">Variable that receives the size of the configuration structure in bytes.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.GetStreamCaps(System.Int32,OMCS.Engine.DShow.Core.AMMediaType@,OMCS.Engine.DShow.Core.VideoStreamConfigCaps)">
            <summary>
            Retrieve a set of format capabilities.
            </summary>
            
            <param name="index">Specifies the format capability to retrieve, indexed from zero.</param>
            <param name="mediaType">Retrieved media type.</param>
            <param name="streamConfigCaps">Byte array, which receives information about capabilities.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.FilterInfoCollection">
            <summary>
            Collection of filters' information objects.
            </summary>
            
            <remarks><para>The class allows to enumerate DirectShow filters of specified category. For
            a list of categories see <see cref="T:OMCS.Engine.DShow.FilterCategory"/>.</para>
            
            <para>Sample usage:</para>
            <code>
            // enumerate video devices
            videoDevices = new FilterInfoCollection( FilterCategory.VideoInputDevice );
            // list devices
            foreach ( FilterInfo device in videoDevices )
            {
                // ...
            }
            </code>
            </remarks>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfoCollection.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:OMCS.Engine.DShow.FilterInfoCollection"/> class.
            </summary>
            
            <param name="category">Guid of DirectShow filter category. See <see cref="T:OMCS.Engine.DShow.FilterCategory"/>.</param>
            
            <remarks>Build collection of filters' information objects for the
            specified filter category.</remarks>
            
        </member>
        <member name="P:OMCS.Engine.DShow.FilterInfoCollection.Item(System.Int32)">
            <summary>
            Get filter information object.
            </summary>
            
            <param name="index">Index of filter information object to retrieve.</param>
            
            <returns>Filter information object.</returns>
            
        </member>
        <member name="T:OMCS.Passive.Video.CameraDevice">
            <summary>
            摄像头设备。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraDevice.FrameDiscarded">
            <summary>
            在过去的10秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraDevice.VideoSizeChanged">
            <summary>
            当摄像头的采集分辨率发生变化时，触发此事件。 参数为新的分辨率。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraDevice.AutoAdjustQualityCommand">
            <summary>
            当收到来自guest的控制是否自动调整视频质量的命令时，触发此事件。参数：guestID - autoAdjust
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraDevice.EncodeQuality">
            <summary>
            采集的视频的编码质量。取值0~31。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="T:OMCS.Passive.MultiChat.IChatGroupEntrance">
            <summary>
            多人语音/视频聊天组入口。
            注意：如果客户端掉线，将自动从所有聊天组中退出。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroupEntrance.Join(OMCS.Contracts.ChatType,System.String)">
            <summary>
            加入某个聊天组。如果目标组不存在，将自动创建目标组。
            </summary>
            <param name="chatType">聊天组的类型。</param>
            <param name="chatGroupID">目标组ID。</param>      
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroupEntrance.Exit(OMCS.Contracts.ChatType,System.String)">
            <summary>
            离开聊天组。如果掉线，也会自动从聊天组中退出。
            </summary>
            <param name="chatType">聊天组的类型。</param>
            <param name="chatGroupID">目标组ID。</param>     
        </member>
        <member name="T:OMCS.Passive.ShortMessages.ShortMessage">
            <summary>
            短信。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessage.CreatorID">
            <summary>
            短信创建者的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessage.CreateTime">
            <summary>
            短信生成的时间
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessage.Mode">
            <summary>
            短信模式。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessage.SpanInMSecs">
            <summary>
            时长。单位：毫秒。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessage.Content">
            <summary>
            短信数据。
            </summary>
        </member>
        <member name="T:OMCS.Passive.ShortMessages.ShortMessageMode">
            <summary>
            短信模式。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ShortMessages.ShortMessageMode.JustAudio">
            <summary>
            仅仅采集语音
            </summary>
        </member>
        <member name="F:OMCS.Passive.ShortMessages.ShortMessageMode.JustVideo">
            <summary>
            仅仅采集视频
            </summary>
        </member>
        <member name="F:OMCS.Passive.ShortMessages.ShortMessageMode.AudioAndVideo">
            <summary>
            采集语音和视频
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver">
            <summary>
            文件夹接收器。实现IFileReceiver接口。将文件夹整体当作一个文件来接收
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileReceiver">
            <summary>
            用于将接收到的文件包写入同一个文件中。一个IFileReceiver实例对应一个要接收的文件（夹）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileReceiver.CurrentTempFilePath">
            <summary>
            被中断传送的文件的临时路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.CurrentTempFilePath">
            <summary>
            临时文件路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.DisrupttedFileRelativePath">
            <summary>
            被中断传送的文件的相对路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.DisrupttedFileSize">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.DisrupttedFileReceivedCount">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件已接收的字节数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.IServiceTypeNameMatcher">
            <summary>
            根据消息的类型获取其对应的名称。
            OMCS.Communication.Plus.Core.MessageTypeRoomManager提供了一个实现。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IServiceTypeNameMatcher.GetServiceName(System.Int32)">
            <summary>
            根据消息的类型获取其对应的名称。
            </summary>
            <param name="messageType">消息的类型</param>
            <returns>类型的名称</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.DefaultServiceTypeNameMatcher">
            <summary>
            直接将消息类型的数值作为类型的名称返回。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Server.P2PSessionProcesser">
            <summary>
            用于处理TCP连接上接收到的所有与P2PSession创建相关的请求。	
            zhuweisky  2006.06.16 最后修正：2010.05.05
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController">
            <summary>
            P2PController P2P控制器。
            (1)用于支持那些需要在登录成功以后才可以进行正确初始化的P2PSession环境中的对象完成初始化动作。
            (2)使P2P通道的状态与主TCP连接(TO Server)的状态保持一致。
            (3)当主TCP连接重连成功时，自动重新初始化P2P通道。 
            zhuweisky 2010.05.05
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController">
            <summary>
            P2P通道控制器。控制和查看所有的P2P通道。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PConnectAsyn(System.String)">
            <summary>
            尝试与目标用户建立P2P Channel。（异步方式。）
            </summary>
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.IsP2PChannelExist(System.String)">
            <summary>
            与目标用户之间是否存在P2P通道。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelIsBusy(System.String)">
            <summary>
            P2P通道是否繁忙。如果返回null，表示没有P2P通道。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.GetP2PChannelState">
            <summary>
            获取所有P2P通道的状态。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.GetP2PChannelState(System.String)">
            <summary>
            获取目标用户的P2P通道的状态。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PConnectFailed">
            <summary>
            当尝试建立P2P连接失败时，触发此事件。参数为对方的UserID。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelOpened">
            <summary>
            当某个P2P Channel创建成功时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelClosed">
            <summary>
            当某个P2P Channel关闭时，触发此事件。参数为对方的UserID。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.AllP2PChannelClosed">
            <summary>
            当所有的P2P通道关闭时（比如因为自己断线），触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelMode">
            <summary>
            采用的P2P通道的类型。默认为TcpAndUdp，表示TCP打洞和UDP打洞都进行尝试。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.Initialize(System.String,System.Boolean)">
            <summary>
            当属性注入完毕后，即可调用该方法进行初始化。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.UserOffline(System.String)">
            <summary>
            当用户掉线时，P2PController将关闭对应的P2P通道。
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.MasterTcpEngine">
            <summary>
            MasterTcpEngine 与服务器进行通信的TCP引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.P2PServerAddress">
            <summary>
            如果需要启用P2P支持，则需要设定P2P服务器的地址。如果设为null，表示不启用P2P。默认值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.FriendNotifyContract.Connected">
            <summary>
            如果为true，表示好友上线；否则表示好友下线。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.ReqFriendsContract.JustOnline">
            <summary>
            如果为true，表示只请求在线的好友列表；否则，请求所有好友列表。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser">
            <summary>
            只有广播经过服务器中转并允许根据通道状态自动丢弃数据包的情况下，才会使用 AgileChannelBusyGuesser。
            根据发送（允许丢弃的）消息的丢包的统计情况，猜测在下一阶段的通道状态。
            如果通道被猜测为忙碌，则直接丢弃可丢弃的包，避免因为发送可丢弃的包而导致通道更拥挤。
            但是，每隔ExpiredSpanSecs4Guess时间，猜测会失效，会尝试发送可丢弃的包以进行重新判定，看看通道质量是否有所改观。
            将可丢弃的消息分为两种：一种是在ToBeRejudge阶段不需要尝试发送的（如视频非关键帧，成功发过去也没用，因为对方不能正确显示），另一种则相反（视频关键帧）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser.OnAllowDiscardedMessageSent(System.String,System.Boolean)">
            <summary>
            允许丢弃的包发送的结果，是被丢弃了吗？
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser.MinRecordSecs4Judge">
            <summary>
            最少要记录多少秒才能判定通道的状态
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser.DiscardCoef4Busy">
            <summary>
            如果丢包率超过DiscardCoef4Busy，则判定通道状态差/忙
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser.ExpiredSpanSecs4Guess">
            <summary>
            一个通道被判定为差之后，过多久需要重新被判定
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser.BusyGuessed">
            <summary>
            当某个通道被判定为差/忙时，触发该事件。参数：destUserID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.AgileChannelBusyGuesser.GuessExpired">
            <summary>
            当某个通道需要被重新判定时。参数：destUserID
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.ChannelGuessState.None">
            <summary>
            没有判定记录
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.ChannelGuessState.InJudging">
            <summary>
            正在判定中
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.ChannelGuessState.ToBeRejudge">
            <summary>
            将被重新判定，还未开始重新判定
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.ChannelGuessState.GuessedBusy">
            <summary>
            已被判定为忙
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.IUdpClient.Send(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            向指定的端点发送UDP数据报。
            </summary>
            <param name="rudeData">要发送的数据报</param>
            <param name="endPoint">目标端点</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.IUdpClient.Post(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            向指定的端点投递UDP数据报。
            </summary>
            <param name="rudeData">要投递的数据报</param>
            <param name="endPoint">目标端点</param>        
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender">
            <summary>
            用于发送增强UDP中的各种类型的数据报。
            (1)每隔200ms，就重发未收到ack的编号最小的数据报。
            (2)每隔2s，根据过去2秒内的新发个数和重发个数来调整一次滑动窗口大小。
            (3)当某个数据包的重发超时时，将触发ResendTimeout事件，将导致Session关闭。
            zhuweisky 2010.05.08
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender.cache_SessionResetted">
            <summary>
            当MaxID为0，而AckID大于0时，则认为当前session已重置，通知对方。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender.SendDatagram4Data(System.UInt64,System.Byte[],System.Int32,System.Int32,OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType)">
            <summary>
            通过增强的UDP发送用户数据。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender.SendDatagram4LostableData(System.Byte[])">
            <summary>
            通过增强的UDP发送可丢弃的用户数据。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender.Resend(System.Int32)">
            <summary>
            定时重发ID最小的未确认数据报。（并检查对方的重发是否超时）
            </summary>
            <param name="spanInMsecs">距离上一次调用该方法的时间间隔</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender.WaitAckCount">
            <summary>
            发送之后等待确认的数据报个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramSender.SlideWindowSize">
            <summary>
            当WaitAckCount到达该设定值时，再次调用Send方法，将阻塞线程，直至WaitAckCount低于该设定值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.NotAckedDatagram.TimeSended">
            <summary>
            首次发送的时间。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Text.TextMessage">
            <summary>
            基于文本的消息。TextMessage.Content属性的值即是整个消息内容。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Text.TextMessage.Content">
            <summary>
            文本消息的所有内容
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IResponseManager">
            <summary>
            用于管理接收到的待提取的回复消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IResponseManager.PushResponse(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            将需要被提取的消息压入到管理器中，等待调用线程的提取。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IResponseManager.RegisterCallback(System.Int32,System.Int32,OMCS.Communication.Basic.Core.ResponseHandler,System.Object)">
            <summary>
            注册回复对应的回调函数。
            </summary>
            <param name="resMessageType">回复的消息类型</param>
            <param name="messageID">回复消息的ID</param>
            <param name="handler">回复处理器</param>
            <param name="state">状态数据</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IResponseManager.PickupResponse(System.Int32,System.Int32)">
            <summary>
            在TimeoutSec时间内不断的PopRespose，直到找到符合条件的消息，或者抛出超时异常。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IResponseManager.ResponseTTL">
            <summary>
            如果一个回复在管理器中存在的时间超过ResponseTTL，则会被删除。单位为s。
            如果ResponseTTL为0，则表示不进行生存期管理
            </summary>		
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IResponseManager.TimeoutSec">
            <summary>
            如果在TimeoutSec内，PickupResponse仍然接收不到期望的回复，则抛出异常。为0时，表示不设置超时
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ResponseHandler">
            <summary>
            用于处理回复消息的方法委托。
            </summary>
            <param name="ee">如果为TimeoutException，表示超时没有回复。只有为null时，response参数才有效。</param>
            <param name="response">回复消息</param>
            <param name="state">状态数据</param>
        </member>
        <member name="T:OMCS.Communication.Basic.AuthorizationVerifier">
            <summary>
            OMCS授权验证。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizationVerifier.SetAuthorizedUser(System.String,System.String)">
            <summary>
            被授权的用户需要在程序初始化开始时先调用该方法注册。如果不调用此方法注册，则将以Free版本运行。        
            </summary>       
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizationVerifyMode.UserID">
            <summary>
            用于按实例授权。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizationVerifyMode.PublicTokenKey">
            <summary>
            用于买断的情况。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClient">
            <summary>
            Windows CoreAudio AudioClient
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.Initialize(OMCS.Engine.Soundcard.AudioClientShareMode,OMCS.Engine.Soundcard.AudioClientStreamFlags,System.Int64,System.Int64,OMCS.Engine.Soundcard.WaveFormat,System.Guid)">
            <summary>
            Initializes the Audio Client
            </summary>
            <param name="shareMode">Share Mode</param>
            <param name="streamFlags">Stream Flags</param>
            <param name="bufferDuration">Buffer Duration</param>
            <param name="periodicity">Periodicity</param>
            <param name="waveFormat">Wave Format</param>
            <param name="audioSessionGuid">Audio Session GUID (can be null)</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.IsFormatSupported(OMCS.Engine.Soundcard.AudioClientShareMode,OMCS.Engine.Soundcard.WaveFormat)">
            <summary>
            Determines whether if the specified output format is supported
            </summary>
            <param name="shareMode">The share mode.</param>
            <param name="desiredFormat">The desired format.</param>
            <returns>True if the format is supported</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.IsFormatSupported(OMCS.Engine.Soundcard.AudioClientShareMode,OMCS.Engine.Soundcard.WaveFormat,OMCS.Engine.Soundcard.WaveFormatExtensible@)">
            <summary>
            Determines if the specified output format is supported in shared mode
            </summary>
            <param name="shareMode">Share Mode</param>
            <param name="desiredFormat">Desired Format</param>
            <param name="closestMatchFormat">Output The closest match format.</param>
            <returns>True if the format is supported</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.Start">
            <summary>
            Starts the audio stream
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.Stop">
            <summary>
            Stops the audio stream.
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.SetEventHandle(System.IntPtr)">
            <summary>
            Set the Event Handle for buffer synchro.
            </summary>
            <param name="eventWaitHandle">The Wait Handle to setup</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.Reset">
            <summary>
            Resets the audio stream
            Reset is a control method that the client calls to reset a stopped audio stream. 
            Resetting the stream flushes all pending data and resets the audio clock stream 
            position to 0. This method fails if it is called on a stream that is not stopped
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioClient.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.MixFormat">
            <summary>
            Retrieves the stream format that the audio engine uses for its internal processing of shared-mode streams.
            Can be called before initialize
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.BufferSize">
            <summary>
            Retrieves the size (maximum capacity) of the audio buffer associated with the endpoint. (must initialize first)
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.StreamLatency">
            <summary>
            Retrieves the maximum latency for the current stream and can be called any time after the stream has been initialized.
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.CurrentPadding">
            <summary>
            Retrieves the number of frames of padding in the endpoint buffer (must initialize first)
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.DefaultDevicePeriod">
            <summary>
            Retrieves the length of the periodic interval separating successive processing passes by the audio engine on the data in the endpoint buffer.
            (can be called before initialize)
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.MinimumDevicePeriod">
            <summary>
            Gets the minimum device period 
            (can be called before initialize)
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.AudioClockClient">
            <summary>
            Gets the AudioClockClient service
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.AudioRenderClient">
            <summary>
            Gets the AudioRenderClient service
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioClient.AudioCaptureClient">
            <summary>
            Gets the AudioCaptureClient service
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.ViewEditors.TriangleEditor">
            <summary>
            TriangleEditor 三角形编辑器。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="M:OMCS.RemoteDogChecker.ReceiveData(System.Net.Sockets.NetworkStream,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.RemoteDogChecker.ReceiveData(System.Net.Sockets.NetworkStream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据 ，存放在buff中offset处。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="T:OMCS.Passive.ConnectorDisconnectedType">
            <summary>
            连接器与目标多媒体设备之间连接断开的原因。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.GuestOffline">
            <summary>
            Guest(连接器)掉线。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.OwnerOffline">
            <summary>
            Owner(设备)掉线。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.GuestActiveDisconnect">
            <summary>
            Guest(连接器)主动断开到设备的连接。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.OwnerActiveDisconnect">
            <summary>
            Owner(设备)主动断开Guest(连接器)到设备连接。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.TrialTimeout">
            <summary>
            试用超时。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDeviceManager.CreateSingleton(OMCS.Passive.IAudioCapturerFactory,System.Int32,System.Int32,ESBasic.Loggers.IAgileLogger)">
            <summary>
            之所以改成Singleton，是为了支持多人音频/视频聊天。（多个MultimediaManager对象，每个连接一个OMCS服务器。）
            灵活使用单向传递。每个人连接的第一个OMCS服务器称为主OMCS服务器，本地采集的所有音视频数据都发往（也仅仅发往）主服务器，
            如果其它的用户需要连接目标用户的多媒体，那么可以先连接目标用户所在的主OMCS服务器。这样就可以解决一个人同时和多个人聊天的问题。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.Audio.AudioDeviceManager.Singleton">
            <summary>
            多媒体管理器初始化时，一定会保证Singleton不为null的。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor">
            <summary>
            白板页面的缩放系数。
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent25">
            <summary>
            0.25
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent50">
            <summary>
            0.5
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent75">
            <summary>
            0.75
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent100">
            <summary>
            1.0
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent125">
            <summary>
            1.25
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent150">
            <summary>
            1.5
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent200">
            <summary>
            2.0
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.Win32">
            <summary>
            Some Win32 API used internally.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.CreateBindCtx(System.Int32,System.Runtime.InteropServices.ComTypes.IBindCtx@)">
            <summary>
            Supplies a pointer to an implementation of <b>IBindCtx</b> (a bind context object).
            This object stores information about a particular moniker-binding operation.
            </summary>
            
            <param name="reserved">Reserved for future use; must be zero.</param>
            <param name="ppbc">Address of <b>IBindCtx*</b> pointer variable that receives the
            interface pointer to the new bind context object.</param>
            
            <returns>Returns <b>S_OK</b> on success.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.MkParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            Converts a string into a moniker that identifies the object named by the string.
            </summary>
            
            <param name="pbc">Pointer to the IBindCtx interface on the bind context object to be used in this binding operation.</param>
            <param name="szUserName">Pointer to a zero-terminated wide character string containing the display name to be parsed. </param>
            <param name="pchEaten">Pointer to the number of characters of szUserName that were consumed.</param>
            <param name="ppmk">Address of <b>IMoniker*</b> pointer variable that receives the interface pointer
            to the moniker that was built from <b>szUserName</b>.</param>
            
            <returns>Returns <b>S_OK</b> on success.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.memcpy(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy a block of memory.
            </summary>
            
            <param name="dst">Destination pointer.</param>
            <param name="src">Source pointer.</param>
            <param name="count">Memory block's length to copy.</param>
            
            <returns>Return's the value of <b>dst</b> - pointer to destination.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.OleCreatePropertyFrame(System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.Object@,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Invokes a new property frame, that is, a property sheet dialog box.
            </summary>
            
            <param name="hwndOwner">Parent window of property sheet dialog box.</param>
            <param name="x">Horizontal position for dialog box.</param>
            <param name="y">Vertical position for dialog box.</param>
            <param name="caption">Dialog box caption.</param>
            <param name="cObjects">Number of object pointers in <b>ppUnk</b>.</param>
            <param name="ppUnk">Pointer to the objects for property sheet.</param>
            <param name="cPages">Number of property pages in <b>lpPageClsID</b>.</param>
            <param name="lpPageClsID">Array of CLSIDs for each property page.</param>
            <param name="lcid">Locale identifier for property sheet locale.</param>
            <param name="dwReserved">Reserved.</param>
            <param name="lpvReserved">Reserved.</param>
            
            <returns>Returns <b>S_OK</b> on success.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IMediaControl">
            <summary>
            The interface provides methods for controlling the flow of data through the filter graph.
            It includes methods for running, pausing, and stopping the graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.Run">
            <summary>
            Runs all the filters in the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.Pause">
            <summary>
            Pauses all filters in the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.Stop">
            <summary>
            Stops all the filters in the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the filter graph.
            </summary>
            
            <param name="timeout">Duration of the time-out, in milliseconds, or INFINITE to specify an infinite time-out.</param>
            <param name="filterState">蘟riable that receives a member of the <b>FILTER_STATE</b> enumeration.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.RenderFile(System.String)">
            <summary>
            Builds a filter graph that renders the specified file.
            </summary>
            
            <param name="fileName">Name of the file to render</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.AddSourceFilter(System.String,System.Object@)">
            <summary>
            Adds a source filter to the filter graph, for a specified file.
            </summary>
            
            <param name="fileName">Name of the file containing the source video.</param>
            <param name="filterInfo">Receives interface of filter information object.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.get_FilterCollection(System.Object@)">
            <summary>
            Retrieves a collection of the filters in the filter graph.
            </summary>
            
            <param name="collection">Receives the <b>IAMCollection</b> interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.get_RegFilterCollection(System.Object@)">
            <summary>
            Retrieves a collection of all the filters listed in the registry.
            </summary>
            
            <param name="collection">Receives the <b>IDispatch</b> interface of <b>IAMCollection</b> object.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.StopWhenReady">
            <summary>
            Pauses the filter graph, allowing filters to queue data, and then stops the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IFilterGraph2">
            <summary>
            This interface extends the <see cref="T:OMCS.Engine.DShow.Core.IFilterGraph"/> and <see cref="T:OMCS.Engine.DShow.Core.IGraphBuilder"/>
            interfaces, which contain methods for building filter graphs.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.AddFilter(OMCS.Engine.DShow.Core.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph and gives it a name.
            </summary>
            
            <param name="filter">Filter to add to the graph.</param>
            <param name="name">Name of the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.RemoveFilter(OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Removes a filter from the graph.
            </summary>
            
            <param name="filter">Filter to be removed from the graph.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.EnumFilters(OMCS.Engine.DShow.Core.IEnumFilters@)">
            <summary>
            Provides an enumerator for all filters in the graph.
            </summary>
            
            <param name="enumerator">Filter enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.FindFilterByName(System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Finds a filter that was added with a specified name.
            </summary>
            
            <param name="name">Name of filter to search for.</param>
            <param name="filter">Interface of found filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.ConnectDirect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects two pins directly (without intervening filters).
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            <param name="mediaType">Media type to use for the connection.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Reconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Disconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Disconnects a specified pin.
            </summary>
            
            <param name="pin">Pin to disconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Connect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Connects two pins. If they will not connect directly, this method connects them with intervening transforms.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Render(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Adds a chain of filters to a specified output pin to render it.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.RenderFile(System.String,System.String)">
            <summary>
            Builds a filter graph that renders the specified file.
            </summary>
            
            <param name="file">Specifies a string that contains file name or device moniker.</param>
            <param name="playList">Reserved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.AddSourceFilter(System.String,System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Adds a source filter to the filter graph for a specific file.
            </summary>
            
            <param name="fileName">Specifies the name of the file to load.</param>
            <param name="filterName">Specifies a name for the source filter.</param>
            <param name="filter">Variable that receives the interface of the source filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.SetLogFile(System.IntPtr)">
            <summary>
            Sets the file for logging actions taken when attempting to perform an operation.
            </summary>
            
            <param name="hFile">Handle to the log file.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Abort">
            <summary>
            Requests that the graph builder return as soon as possible from its current task.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.ShouldOperationContinue">
            <summary>
            Queries whether the current operation should continue.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.AddSourceFilterForMoniker(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IBindCtx,System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            
            </summary>
            
            <param name="moniker">Moniker interface.</param>
            <param name="bindContext">Bind context interface.</param>
            <param name="filterName">Name for the filter.</param>
            <param name="filter"> Receives source filter's IBaseFilter interface.
            The caller must release the interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.ReconnectEx(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin,
            using a specified media type.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            <param name="mediaType">Media type to reconnect with.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.RenderEx(OMCS.Engine.DShow.Core.IPin,System.Int32,System.IntPtr)">
            <summary>
            Render an output pin, with an option to use existing renderers only.
            </summary>
            
            <param name="outputPin">Interface of the output pin.</param>
            <param name="flags">Flag that specifies how to render the pin.</param>
            <param name="context">Reserved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.DirectorySender">
            <summary>
            文件夹发送器。实现IFileSender接口。将整个文件夹当作一个文件来传送。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileSender">
            <summary>
            在后台线程中将指定的文件分包后发送出去。一个IFileSender实例对应一个要发送的文件（夹）。
            zhuweisky 2006.02.23
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectorySender.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1M。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.OutConnectionManager">
            <summary>
            OutConnectionManager 用于管理所有主动发起的P2P TCP连接。
            zhuweisky 2010.05.24
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.OutConnectionManager.P2PChannelOpened">
            <summary>
            P2PChannelOpened 参数IPEndPoint为对方的IPE。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelMode">
            <summary>
            P2P通道模型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Server.IFriendsController">
            <summary>
            好友控制器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.Server.IFriendsController.FriendNotifyEnabled">
            <summary>
            当用户上线/掉线时，是否通知其好友。默认值true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.Server.IFriendsController.UseFriendNotifyThread">
            <summary>
            好友通知是否使用单独的线程。默认值为false。
            如果要开启好友通知线程，必须先开启好友通知（即必须先将FriendNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Passive.FriendsPassiveProcesser">
            <summary>
            客户端用于处理所有基本消息。。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.AgileInformationSerializer">
            <summary>
            灵活的自定义信息序列化器。
            如果自定义信息协议从BaseSerializeContract继承，则使用.NET自带的序列化器进行序列化（会严格要求各方使用的加密的协议dll为同一版本）；否则使用CompactPropertySerializer进行序列化。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom">
            <summary>
            所有基本消息的类型空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.GetMyIPE">
            <summary>
            获取自己的IP地址信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.PingByServer">
            <summary>
            ping 服务器或其他在线用户(通过服务器中转)。协议为PingContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.PingAck">
            <summary>
            对ping的回复。协议为PingContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.HeartBeat">
            <summary>
            心跳消息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.BeingPushedOutNotify">
            <summary>
            BeingPushedOutNotify 当某在线用户被同名用户挤掉时，将给被挤掉的用户发送该通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.KickOut">
            <summary>
            KickOut 请求服务器将某个在线用户踢出（发出BeingKickedOutNotify通知，断开连接）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.BeingKickedOutNotify">
            <summary>
            BeingKickedOutNotify 当某在线用户被踢出时（可能是由别的用户请求，也可能是服务端主动踢出BasicController.KickOut()），将给被踢出的用户发送该通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.GetAllOnlineUsers">
            <summary>
            获取所有在线用户列表。回复的消息主体为ResUsersContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.QueryOnline">
            <summary>
            查询用户是否在线。请求协议为QueryOnlineContract，回复协议为ResOnlineContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.Logon">
            <summary>
            登陆。请求协议为ReqLogonContract，回复协议为ResLogonContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.GetUserIPE">
            <summary>
            获取用户的IP地址信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.PingByP2PChannel">
            <summary>
            其他在线用户。协议为PingContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BroadcastContract.InformationType">
            <summary>
            当MessageType为CustomizeInfoMessageTypeRoom.Response时，忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BroadcastContract.DiscardOnToBeRejudge">
            <summary>
            如果通道正处于ChannelGuessState.ToBeRejudge状态，则可以直接丢弃该消息，不用在判断通道是真的繁忙后，再丢弃。
            只有ActionTypeOnChannelIsBusy为Discard时，该属性才有效。
            目的：在通道由ChannelGuessState.GuessedBusy转为ToBeRejudge状态时，如果有视频的非关键帧，则可以直接先丢弃掉，等第一个关键帧到来，将尝试发送，
            如果没有被丢弃，则将通道改为InJudging状态；否则，持续为ToBeRejudge状态，直到下一个关键帧来临，再重复上诉的过程。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.GroupNotifyContract">
            <summary>
            服务器给客户端的通知。
            </summary>	
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.IUserDisplayer">
            <summary>
             用于显示所有在线用户的状态信息。	
             zhuweisky 2004.04.22
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserDisplayer.ClearAll">
            <summary>
            清除所有。通常是通信引擎停止时被调用。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserDisplayer.RemoveUser(System.String,System.String)">
            <summary>
            移除用户。通常在用户下线时被调用。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.EmptyUserDisplayer">
            <summary>
            不显示在线用户的状态信息。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.RegularSender">
            <summary>
            服务端正规消息发送器IRegularSender接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.IRegularSender">
            <summary>
            服务端正规消息发送器。服务器主动将消息（如通知）发送给指定的目标用户，并保证消息在发送之前经过MessagePipe。
            有的应用可能需要考虑到：目标用户可能连接在其它服务器节点上，此时可以overrride SendMessageToForeigner方法。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给目标用户(msg.Header.DestUserID)，采用同步方式。
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给目标用户，采用同步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.Collections.Generic.IEnumerable{System.String},OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给多个目标用户，采用同步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送到指定的地址。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.PostMessage(OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给目标用户(msg.Header.DestUserID)，采用异步方式。
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.PostMessage(OMCS.Communication.Basic.Core.IMessage,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后投递给目标用户，采用异步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.PostMessage(OMCS.Communication.Basic.Core.IMessage,System.Collections.Generic.IEnumerable{System.String},OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后投递给多个目标用户，采用异步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.PostMessage(OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后投递到指定的地址，采用异步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.SendMessageToForeigner(OMCS.Communication.Basic.Core.IMessage,System.Collections.Generic.IEnumerable{System.String},System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送给其它服务器上的用户。
            </summary>
            <param name="msg">未经过MesssagePipe的原始消息</param>
            <param name="foreigners">消息接受则的UserID的集合</param>      
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.SendMessageToForeigner(OMCS.Communication.Basic.Core.IMessage,System.String,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送给其它服务器上的用户。
            </summary>
            <param name="msg">未经过MesssagePipe的原始消息</param>
            <param name="foreigner">消息接受则的UserID</param>      
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient">
            <summary>
            IEnhancedUdpClient 增强的UdpClient接口。在接收方，保证UDP数据报能按照发送的顺序被正确接收到。不会丢包。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.ChannelIsBusy(System.Net.IPEndPoint)">
            <summary>
            发送通道是否繁忙？
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.CloseAllUdpSession">
            <summary>
            关闭所有Udp会话。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.UdpSessionOpened">
            <summary>
            当向目标端点发送第一个消息或是从目标端点接收第一个消息时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.UdpSessionClosed">
            <summary>
            Session被关闭时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.UdpSessionReset">
            <summary>
            当对方出现状况时，将导致自己的Session重置，从而触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.PingSpanInSecs">
            <summary>
            发送ping系统数据报的时间间隔（秒）。默认值为5s。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.HearbeatTimeoutInSecs">
            <summary>
            心跳超时的时间间隔以及重发数据包的最大超时，默认值为10s。（心跳/重发超时，将关闭对应的Session）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.AutoDiscoveryPMTU">
            <summary>
            是否启用自动发现PMTU。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.SecurityLogEnabled">
            <summary>
            是否记录安全日志。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.MTUOfCurrentMachine">
            <summary>
            当前机器的MTU值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.IEnhancedUdpClient.SessionCount">
            <summary>
            UDP会话的个数。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause">
            <summary>
            UDP Session关闭的原因。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.ActiveClose">
            <summary>
            调用者主动关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.HeartbeatTimeout">
            <summary>
            心跳超时关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.ResendTimeout">
            <summary>
            重发超时关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.SocketException">
            <summary>
            发送数据时，遭遇异常而关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.DatagramIDOutOfRange">
            <summary>
            数据报ID达到最大值
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.SessionWrong">
            <summary>
            发送方发送的最大数据包ID比接收方接收的最大数据包ID还小
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionClosedCause.OthersideClose">
            <summary>
            对方关闭。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionResetCause">
            <summary>
            UDP Session被重置的原因。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionResetCause.IdentityChangedOnOtherside">
            <summary>
            对方标志发生了变化（可能是进程重启）。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionResetCause.SendingCacheDetected">
            <summary>
            当发送缓存中的MaxID为0，而AckID大于0时，则认为当前session已重置。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SessionResetCause.SessionResetOnOtherside">
            <summary>
            对方的Session已重建（可能是因为掉线而清除了所有Session）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramRecvCache">
            <summary>
            缓存所有已接收但是还未被应用程序提取的数据报（rudeData，未增强的）
            (1)每隔requestFRSpanInMSecs，就向发送方请求空缺的数据报。
            (2)每隔2s，根据过去2s内发送的空缺个数以及发送的总数，调整requestFRSpanInMSecs的值。
            zhuweisky 2010.05.06
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramRecvCache.Add(OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataBody)">
            <summary>
            将接收的数据（解除了增强）添加到接收缓存。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramRecvCache.PickRudeData">
            <summary>
            提取下一个正序的数据报。如果当前缓存没有数据报或没有正序的数据报，则返回null。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramRecvCache.FeedbackVacancy(System.Int32)">
            <summary>
            向发送方反馈当前接收缓存中的空缺状态。
            </summary>
            <param name="spanInMsecs">距离上一次调用该方法的时间间隔。不能超过10ms</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramRecvCache.CountInRecieveCache">
            <summary>
            接收缓存中数据报的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnUdpDatagramRecvCache.MaxDatagramIDReceived">
            <summary>
            已经接收的最大的数据报ID。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageSpy">
            <summary>
            用于监控所有的请求/回复消息(例如，可以记录最新接收到的N条消息)。
            (1)IMessageSpy与IMessageFilter的区别在于，IMessageSpy不修改消息，而IMessageFilter可能修改消息（如加密/解密）
            (2)IMessageSpy的SpyMessageReceived/SpyMessageToBeSent方法可以丢弃收到的某些消息
            zhuweisky 2006.05.17
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageSpy.SpyMessageReceived(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            监控所有收到的消息，如请求消息，返回false表明丢弃消息。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageSpy.SpyMessageToBeSent(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            监控所有即将发送的消息，如回复消息，返回false表明丢弃消息。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Core.EmptyMessageSpy">
            <summary>
            不对消息做任何监控的MessageSpy。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IProcesserFactory">
            <summary>
            请求处理器工厂，根据请求的类型创建对应的处理器 。
            2005.07.12
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IProcesserFactory.CreateProcesser(System.Int32)">
            <summary>
            根据消息的类型创建对应的处理器 。
            </summary>
            <param name="messageType">消息的类型</param>       
        </member>
        <member name="T:OMCS.Communication.Basic.Core.DefaultStringEncoder">
            <summary>
            OMCS.Communication.Basic内置提供的默认的字符串编解码器，采用UTF-8对字符串进行编解码。Singleton模式。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.CycleVerifier.#ctor">
            <summary>
            给客户端BasicPassiveProcesser调用。 2015.05.04
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.CycleVerifier.IsOnInternet">
            <summary>
            连接授权服务器验证是否已经授权。如果网络异常、调用异常、或未授权都将返回false。
            适用场合:只能在公网使用，不能用于封闭的局域网。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.AuthorizedSNChecker">
            <summary>
            机器信息（硬盘ID、MAC地址）验证器
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizedSNChecker.CheckAuthorizedSN(System.String)">
            <summary>
            验证机器信息（硬盘ID、MAC地址）
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizedSNChecker.GetHardDiskID">
            <summary>
            取第一块硬盘编号
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizedSNChecker.GetNetCardMAC">
            <summary>
            获取网卡MAC地址
            </summary>      
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.IPropertyStore">
            <summary>
            is defined in propsys.h
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioEndpointVolumeVolumeRange">
            <summary>
            Audio Endpoint Volume Volume Range
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeVolumeRange.MinDecibels">
            <summary>
            Minimum Decibels
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeVolumeRange.MaxDecibels">
            <summary>
            Maximum Decibels
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeVolumeRange.IncrementDecibels">
            <summary>
            Increment Decibels
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioEndpointVolume">
            <summary>
            Audio Endpoint Volume
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioEndpointVolume.VolumeStepUp">
            <summary>
            Volume Step Up
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioEndpointVolume.VolumeStepDown">
            <summary>
            Volume Step Down
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioEndpointVolume.#ctor(OMCS.Engine.Soundcard.Interfaces.IAudioEndpointVolume)">
            <summary>
            Creates a new Audio endpoint volume
            </summary>
            <param name="realEndpointVolume">IAudioEndpointVolume COM interface</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioEndpointVolume.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioEndpointVolume.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="E:OMCS.Engine.Soundcard.AudioEndpointVolume.OnVolumeNotification">
            <summary>
            On Volume Notification
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.VolumeRange">
            <summary>
            Volume Range
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.HardwareSupport">
            <summary>
            Hardware Support
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.StepInformation">
            <summary>
            Step Information
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.Channels">
            <summary>
            Channels
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.MasterVolumeLevel">
            <summary>
            Master Volume Level
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.MasterVolumeLevelScalar">
            <summary>
            Master Volume Level Scalar
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolume.Mute">
            <summary>
            Mute
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.RectResizeAction">
            <summary>
            RectResizeAction 表示即将执行某个BaseRectangleView对象的Resize动作的相关信息。
            zhuweisky 2010.03.22
            </summary>   
        </member>
        <member name="T:OMCS.Engine.Paint.Application.IWork">
            <summary>
            IWork 能够进行同步的基础接口，用于实现白板协作。************** 特别要注意，以防引起连锁反应 **********************
            zhuweisky 2010.03.29
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Application.IWorkInputs">
            <summary>
            接收来自网络的消息，变成白板的输入。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.IWork.SubscribeViewEventInPage">
            <summary>
            SubscribeViewEventInPage 让每个Page预定其内部所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.IWork.SubscribePageEvent">
            <summary>
            SubscribePageEvent 当反序列化获得work实例后(从网络或本地文件)，需要调用此方法预定各个Page的相关事件，因为Page的相关事件是NonSerialized的。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.IWork.Clear">
            <summary>
            Clear 删除所有page。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.IWork.WorkInputsCallback">
            <summary>
            当Work接收到来自网络的白板消息，首先会改变当前Work的内容，然后，再回调WorkInputsCallback通知外部该变化。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.Work.SubscribeViewEventInPage">
            <summary>
            SubscribeViewEventInPage 让每个Page预定其内部所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.Work.SubscribePageEvent">
            <summary>
            SubscribePageEvent 当反序列化获得work实例后(从网络或本地文件)，需要调用此方法预定各个Page的相关事件，因为Page的相关事件是NonSerialized的。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.Work.Landscape">
            <summary>
            Landscape 如果页面应横向打印，则为 true；反之，则为 false。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.Work.ViewIDCreator">
            <summary>
            ViewIDCreator 当多人协作时，同步ViewID的生成。另外可以考虑使用ESBasic.ObjectManagement.Basic.BeforehandCreator来提前生成许多ViewID。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.Work.Boundary">
            <summary>
            Page的边界。值为null时，表示没有边界。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.Work.WorkInputsCallback">
            <summary>
            当Work接收到来自网络的白板消息，首先会改变当前Work的内容，然后，再回调WorkInputsCallback通知外部该变化。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel">
            <summary>
            用于同步本地文件夹与服务器的指定文件夹的内容。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel.Initialize(OMCS.Communication.Plus.Rapid.IRapidPassiveEngine,System.String)">
            <summary>
            初始化并启动文件夹同步过程。
            </summary>             
            <param name="serverRelativeDir">服务器上对应的文件夹的相对路径</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel.Cancel">
            <summary>
            取消同步。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.FolderSynchronize.Passive.FolderSynchronizePanel.SynchronizeCompleted">
            <summary>
            当同步完成时，触发该事件【UI线程】。参数:Download - succeed
            </summary>
        </member>
        <member name="F:OMCS.PasswordLevel.Administrator">
            <summary>
            管理密码 0 
            </summary>
        </member>
        <member name="F:OMCS.PasswordLevel.NormalUser">
            <summary>
            普通用户密码 1
            </summary>
        </member>
        <member name="F:OMCS.PasswordLevel.AuthenticUser">
            <summary>
            认证密码 2
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.SUCCESS">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.OPEN_DEVICE_FAILED">
            <summary>
            打开设备失败 1
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.FIND_DEVICE_FAILED">
            <summary>
            未找到符合条件的设备 2
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.INVALID_PARAMETER">
            <summary>
            参数错误 3
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.INVALID_BLOCK_NUMBER">
            <summary>
            块号错误 4
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.HARDWARE_COMMUNICATE_ERROR">
            <summary>
            与硬件通信错误 5
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.INVALID_PASSWORD">
            <summary>
            密码错误 6
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.ACCESS_DENIED">
            <summary>
            没有权限 7
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.ALREADY_OPENED">
            <summary>
            设备已经打开 8
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.ALLOCATE_MEMORY_FAILED">
            <summary>
            内存分配失败 9
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.INVALID_UPDATE_PACKAGE">
            <summary>
            不合法的升级包 10
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.SYN_ERROR">
            <summary>
            线程同步错误 11
            </summary>
        </member>
        <member name="F:OMCS.ResultCode.OTHER_ERROR">
            <summary>
            其它未知异常、错误 12
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ISampleGrabber">
            <summary>
            The interface is exposed by the Sample Grabber Filter. It enables an application to retrieve
            individual media samples as they move through the filter graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetOneShot(System.Boolean)">
            <summary>
            Specifies whether the filter should stop the graph after receiving one sample.
            </summary>
            
            <param name="oneShot">Boolean value specifying whether the filter should stop the graph after receiving one sample.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetMediaType(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Specifies the media type for the connection on the Sample Grabber's input pin.
            </summary>
            
            <param name="mediaType">Specifies the required media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.GetConnectedMediaType(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Retrieves the media type for the connection on the Sample Grabber's input pin.
            </summary>
            
            <param name="mediaType"><see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> structure, which receives media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetBufferSamples(System.Boolean)">
            <summary>
            Specifies whether to copy sample data into a buffer as it goes through the filter.
            </summary>
            
            <param name="bufferThem">Boolean value specifying whether to buffer sample data.
            If <b>true</b>, the filter copies sample data into an internal buffer.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.GetCurrentBuffer(System.Int32@,System.IntPtr)">
            <summary>
            Retrieves a copy of the sample that the filter received most recently.
            </summary>
            
            <param name="bufferSize">Pointer to the size of the buffer. If pBuffer is NULL, this parameter receives the required size.</param>
            <param name="buffer">Pointer to a buffer to receive a copy of the sample, or NULL.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.GetCurrentSample(System.IntPtr)">
            <summary>
            Not currently implemented.
            </summary>
            
            <param name="sample"></param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetCallback(OMCS.Engine.DShow.Core.ISampleGrabberCB,System.Int32)">
            <summary>
            Specifies a callback method to call on incoming samples.
            </summary>
            
            <param name="callback"><see cref="T:OMCS.Engine.DShow.Core.ISampleGrabberCB"/> interface containing the callback method, or NULL to cancel the callback.</param>
            <param name="whichMethodToCallback">Index specifying the callback method.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IFilterGraph">
            <summary>
            The interface provides methods for building a filter graph. An application can use it to add filters to
            the graph, connect or disconnect filters, remove filters, and perform other basic operations. 
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.AddFilter(OMCS.Engine.DShow.Core.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph and gives it a name.
            </summary>
            
            <param name="filter">Filter to add to the graph.</param>
            <param name="name">Name of the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.RemoveFilter(OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Removes a filter from the graph.
            </summary>
            
            <param name="filter">Filter to be removed from the graph.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.EnumFilters(System.IntPtr@)">
            <summary>
            Provides an enumerator for all filters in the graph.
            </summary>
            
            <param name="enumerator">Filter enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.FindFilterByName(System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Finds a filter that was added with a specified name.
            </summary>
            
            <param name="name">Name of filter to search for.</param>
            <param name="filter">Interface of found filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.ConnectDirect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects two pins directly (without intervening filters).
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            <param name="mediaType">Media type to use for the connection.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.Reconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.Disconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Disconnects a specified pin.
            </summary>
            
            <param name="pin">Pin to disconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.GetAuthorization">
            <summary>
            从服务器获取授权内容。回复AuthorizationContract。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.GetConfiguration">
            <summary>
            从服务器获取配置信息。C->S，请求协议为空，回复为OMCSConfigurationContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.SessionBuilt">
            <summary>
            当两个客户端之间的会话建立后，通知服务器。C->S
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Connect">
            <summary>
            请求连接到对方的多媒体设备。guest->owner。消息体为DeviceTypeContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Disconnect">
            <summary>
            断开到对方的设备连接。guest->owner 。消息体为DeviceTypeContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.DisconnectNotify">
            <summary>
            当owner主动断开guest与本地设备的连接时，通知guest。owner->guest。消息体为DeviceTypeContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.VideoFrameData">
            <summary>
            视频帧数据。owner->guest。消息体为VideoFrameContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Command">
            <summary>
            对设备的命令。guest->owner 。消息体为CommandOrQueryContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Query">
            <summary>
            对设备的查询。guest->owner 。消息体为CommandOrQueryContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.QueryInitializeFinished">
            <summary>
            查询目标用户的多媒体管理器是否完成了初始化。C->C。请求消息体为null，回复为bool。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.ShortMessage">
            <summary>
             短信消息。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.BroadcastNotify">
            <summary>
            Owner -> Guest。某设备的owner发送通知给所有的guest。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.AudioFrameData">
            <summary>
            音频帧数据。owner->guest。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.GetChatGroupMembers">
            <summary>
            请求加入聊天组。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.RequestJoinChatGroup">
            <summary>
            请求加入聊天组。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.JoinChatGroupNotify">
            <summary>
            当有人加入聊天组时，通知其它组员。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.ExitChatGroup">
            <summary>
            离开聊天组
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.ExitChatGroupNotify">
            <summary>
            当有人退出聊天组或掉线时，通知其它组员。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.CoursewareLoaded">
            <summary>
            当客户端加载课件完成时，向服务器报告。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.CoursewareLoadedNotify">
            <summary>
            当有成员加载课件完成时，服务器广播通知该白板的所有用户。
            </summary>
        </member>
        <member name="T:OMCS.Contracts.ChatType">
            <summary>
            聊天组的类型。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.ChatType.Audio">
            <summary>
            语音聊天组。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.ChatType.Video">
            <summary>
            视频聊天组。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.StreamMessageHeader">
            <summary>
            常用的基于流的消息头定义。固定长度36 ，UserID允许最大长度默认为11。MessageType取值为0~65535
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader">
            <summary>
            采用二进制协议进行通信时的消息头接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.ToStream">
            <summary>
            将消息头转化为字节数组。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.ToStream(System.Byte[],System.Int32)">
            <summary>
            将消息头转化为字节数组并填充到buff中。
            </summary>
            <param name="buff">被填充的缓冲区</param>
            <param name="offset">从缓冲区的偏移位置开始填充</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.StartToken">
            <summary>
            消息的起始标志。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.HeaderLength">
            <summary>
            消息头的长度，对于二进制协议来说，消息头的长度是一个固定值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.MessageBodyLength">
            <summary>
            本消息中消息体的长度。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Core.StreamMessageHeader.SetMaxLengthOfUserID(System.Byte)">
            <summary>
            设置UserID（包括GroupID）的最大长度(不能超过255)。注意，客户端与服务端要统一设置。
            </summary>  
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Server.FriendsMessageProcesser">
            <summary>
            FriendsMessageProcesser 提供以下特性：
            (1))用户上下线时，通知好友。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.Server.FriendsMessageProcesser.FriendNotifyEnabled">
            <summary>
            当用户上线/掉线时，是否通知其好友。默认值true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Friends.Server.FriendsMessageProcesser.UseFriendNotifyThread">
            <summary>
            好友通知是否使用单独的线程。默认值为false。
            如果要开启好友通知线程，必须先开启好友通知（即必须先将FriendNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Server.CustomizeMessageProcesser">
            <summary>
            处理所有"自定义信息"的消息的服务端处理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.ComplexCustomizeHandler">
            <summary>
            用于将客户端的多个ICustomizeHandler整合起来。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.Succeed">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.Failed">
            <summary>
            登录失败
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.HadLoggedOn">
            <summary>
            已在其它地方登陆
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.VersionMismatched">
            <summary>
            客户端与服务端的框架不匹配(比如版本不一致或授权帐号不一致)。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.LogonResponse">
            <summary>
            登录回复。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.LogonResponse.FailureCause">
            <summary>
            当LogonResult为Failed时，指明失败的原因。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.P2PChannelManager">
            <summary>
            记录当前AS上的用户已建立的P2P连接。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Server.IUdpServerEngine">
            <summary>
            基于UDP的服务端引擎接口。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Passive.IUdpPassiveEngine">
            <summary>
            基于UDP的客户端引擎接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Passive.IUdpPassiveEngine.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint)">
            <summary>
            向指定的端点发送UDP消息。注意：如果引擎已经停止，则直接返回。
            </summary>
            <param name="message">要发送的消息</param>
            <param name="address">目标端点</param>           
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Passive.IUdpPassiveEngine.PostMessage(OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint)">
            <summary>
            向指定的端点投递UDP消息。注意：如果引擎已经停止，则直接返回。
            </summary>
            <param name="message">要投递的消息</param>
            <param name="address">目标端点</param>           
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpHeader.Identity">
            <summary>
            用于标志消息发送者的身份。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ExpectedVacancyBody.MinIDInReceivedCache">
            <summary>
            缓存中未被提取的数据报的最小ID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ExpectedVacancyBody.MaxIDInReceivedCache">
            <summary>
            缓存中未被提取的数据报的最大ID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ExpectedVacancyBody.VacancyIDArray">
            <summary>
            空缺的ID,升序排列
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataBody">
            <summary>
            DataBody 包含了不可丢弃的数据或可丢弃的数据的消息体。 附加消息为8字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataBody.Offset">
            <summary>
            Data字段中有效数据的起始偏移。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataBody.Data">
            <summary>
            rudeData，未增强的
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.LostableDataBody.Data">
            <summary>
            rudeData，未增强的
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType">
            <summary>
            数据块分片的类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType.Single">
            <summary>
            没有分片
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType.Begin">
            <summary>
            数据块的第一个分片
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType.Middle">
            <summary>
            数据块的中间个分片
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType.End">
            <summary>
            数据块的最后一个分片
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.WrongDataFragmentTypeException">
            <summary>
            当接收到错误的数据片段类型时，将触发该事件。通常是因为对方在发送后续片段时，session被重置导致的。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.PingAckBody.MaxDatagramIDReceived">
            <summary>
            MaxDatagramIDReceived 已经接收的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.PingAckBody.ReceiveCacheCount">
            <summary>
            接收缓存中未被提取的数据报个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.PingAckBody.SlideWindowSize">
            <summary>
            滑动窗口的大小。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.StreamMessage">
            <summary>
            基于二进制的消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.StreamMessage.Body">
            <summary>
            如果不为null，则其DataBuffer.Length值必须与streamMessageHeader.MessageBodyLength相等。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.PropertyStore">
            <summary>
            Property Store class, only supports reading properties at the moment.
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.PropertyStore.Contains(OMCS.Engine.Soundcard.PropertyKey)">
            <summary>
            Contains property guid
            </summary>
            <param name="key">Looks for a specific key</param>
            <returns>True if found</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.PropertyStore.Get(System.Int32)">
            <summary>
            Gets property key at sepecified index
            </summary>
            <param name="index">Index</param>
            <returns>Property key</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.PropertyStore.GetValue(System.Int32)">
            <summary>
            Gets property value at specified index
            </summary>
            <param name="index">Index</param>
            <returns>Property value</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.PropertyStore.#ctor(OMCS.Engine.Soundcard.Interfaces.IPropertyStore)">
            <summary>
            Creates a new property store
            </summary>
            <param name="store">IPropertyStore COM interface</param>
        </member>
        <member name="P:OMCS.Engine.Soundcard.PropertyStore.Count">
            <summary>
            Property Count
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.PropertyStore.Item(System.Int32)">
            <summary>
            Gets property by index
            </summary>
            <param name="index">Property index</param>
            <returns>The property</returns>
        </member>
        <member name="P:OMCS.Engine.Soundcard.PropertyStore.Item(OMCS.Engine.Soundcard.PropertyKey)">
            <summary>
            Indexer by guid
            </summary>
            <param name="key">Property Key</param>
            <returns>Property or null if not found</returns>
        </member>
        <member name="T:OMCS.Engine.Soundcard.MMDeviceCollection">
            <summary>
            Multimedia Device Collection
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceCollection.GetEnumerator">
            <summary>
            Get Enumerator
            </summary>
            <returns>Device enumerator</returns>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDeviceCollection.Count">
            <summary>
            Device count
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDeviceCollection.Item(System.Int32)">
            <summary>
            Get device by index
            </summary>
            <param name="index">Device index</param>
            <returns>Device at the specified index</returns>
        </member>
        <member name="T:OMCS.Engine.Soundcard.MMDevice">
            <summary>
            MM Device
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDevice.ToString">
            <summary>
            To string
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.AudioClient">
            <summary>
            Audio Client
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.AudioMeterInformation">
            <summary>
            Audio Meter Information
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.AudioEndpointVolume">
            <summary>
            Audio Endpoint Volume
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.Properties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.FriendlyName">
            <summary>
            Friendly name for the endpoint
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.DeviceFriendlyName">
            <summary>
            Friendly name of device
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.ID">
            <summary>
            Device ID
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.DataFlow">
            <summary>
            Data Flow
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.MMDevice.State">
            <summary>
            Device State
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioVolumeNotificationData">
            <summary>
            Audio Volume Notification Data
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioVolumeNotificationData.#ctor(System.Guid,System.Boolean,System.Single,System.Single[])">
            <summary>
            Audio Volume Notification Data
            </summary>
            <param name="eventContext"></param>
            <param name="muted"></param>
            <param name="masterVolume"></param>
            <param name="channelVolume"></param>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioVolumeNotificationData.EventContext">
            <summary>
            Event Context
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioVolumeNotificationData.Muted">
            <summary>
            Muted
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioVolumeNotificationData.MasterVolume">
            <summary>
            Master Volume
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioVolumeNotificationData.Channels">
            <summary>
            Channels
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioVolumeNotificationData.ChannelVolume">
            <summary>
            Channel Volume
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioMeterInformationChannels">
            <summary>
            Audio Meter Information Channels
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioMeterInformationChannels.Count">
            <summary>
            Metering Channel Count
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioMeterInformationChannels.Item(System.Int32)">
            <summary>
            Get Peak value
            </summary>
            <param name="index">Channel index</param>
            <returns>Peak value</returns>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioMeterInformation">
            <summary>
            Audio Meter Information
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioMeterInformation.PeakValues">
            <summary>
            Peak Values
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioMeterInformation.HardwareSupport">
            <summary>
            Hardware Support
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioMeterInformation.MasterPeakValue">
            <summary>
            Master Peak Value
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioEndpointVolumeNotificationDelegate">
            <summary>
            Audio Endpoint Volume Notifiaction Delegate
            </summary>
            <param name="data">Audio Volume Notification Data</param>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClientShareMode">
            <summary>
            AUDCLNT_SHAREMODE
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientShareMode.Shared">
            <summary>
            AUDCLNT_SHAREMODE_SHARED,
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientShareMode.Exclusive">
            <summary>
            AUDCLNT_SHAREMODE_EXCLUSIVE
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.TriangleView">
            <summary>
            TriangleView 表示三角形的View。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.ViewEditors.ViewEditorContainer">
            <summary>
            ViewEditorContainer 用于管理所有的IViewEditor，并将其与Panel的事件关联起来。
            注意：拖放产生的事件顺序：MouseDown、MouseMove、MouseUp
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.ViewEditors.ViewEditorContainer.panel_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            当控件Paint事件时，调用该方法绘制当前正在编辑的对象。
            </summary>        
        </member>
        <member name="M:OMCS.Engine.Paint.ViewEditors.ViewEditorContainer.CheckCursorPoisition">
            <summary>
            CheckCursorPoisition 查看鼠标是否落在View或热点上
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.ViewEditors.ViewEditorContainer.ActiveRefresh">
            <summary>
            是否启用主动刷新。默认值为true。（比如当移动某个view时，是否主动调用Panel的Refresh事件以绘制移动效果！）
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.ViewEditors.SquareEditor">
            <summary>
            正方形编辑器。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.ViewPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewPanel.KeyMoveDistance">
            <summary>
            KeyMoveDistance 当ArrowKeyEnabled为true时，每按一下方向键时移动选中的ViewObject的距离
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewPanel.ArrowKeyEnabled">
            <summary>
            ArrowKeyEnabled 是否启用方向键来移动选中的ViewObject
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.ViewPanel.SpringEventWhenScrollWorkSpace">
            <summary>
            当滚动工作区的滚动条时，是否触发WorkSpaceScrollPositionChanged事件。默认值：false。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Application.ViewCanvas">
            <summary>
            ViewPanel 用于绘制View的画布，并设置双缓冲以解决绘制时的闪烁问题。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Application.ViewCanvas.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewCanvas.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Engine.Paint.Application.ViewCanvas.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.FolderSynchronize.FolderSyncInfoTypes">
            <summary>
            所有与文件夹同步的消息类型的空间。默认取值 -100 ~ 0
            </summary>	
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.FolderSynchronize.FolderSyncInfoTypes.ReqDirectoryInfo">
            <summary>
            请求目录信息。请求协议为ReqDirectoryContract，回复为ResDirectoryContract
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.FolderSynchronize.Comment4FolderSync">
            <summary>
            在文件夹同步环境中解析BeginSendFile方法的comment参数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.FolderSynchronize.FolderSyncParameters.ServerRelativeDirPath">
            <summary>
            只在上传的时候使用。要上传的文件夹在服务器上的相对路径。
            </summary>
        </member>
        <member name="T:OMCS.OMCSConfiguration">
            <summary>
            OMCS统一配置。
            </summary>
        </member>
        <member name="M:OMCS.OMCSConfiguration.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>         
            <param name="_systemToken">系统标志</param>
        </member>
        <member name="T:OMCS.EncodingQuality">
            <summary>
            视频、音频的编码质量
            </summary>
        </member>
        <member name="T:OMCS.Passive.ConnectResult">
            <summary>
            尝试连接目标设备的结果。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.Timeout">
            <summary>
            等待回复超时
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.TargetUserOffline">
            <summary>
            目标用户不在线
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DeviceInvalid">
            <summary>
            设备不存在或出错
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.OwnerNotInitialized">
            <summary>
            Owner的设备管理器还未完成初始化
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.ExceptionOccured">
            <summary>
            出现异常
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.SelfOffline">
            <summary>
            在连接目标设备的过程中自己掉线
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.ChannelUnavailable">
            <summary>
            通道不可用（当前客户端与OMCS之间的TCP连接断开了，或者TCP连接尚未建立）
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.CantConnectRepeatly">
            <summary>
            不能重复连接同一用户的同一设备
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DeviceUnauthorized">
            <summary>
            本次OMCS授权不包含目标设备类型
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DeviceInUsing">
            <summary>
            设备已经被其它程序占用
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.MicrophoneDevice">
            <summary>
            话筒设备。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneDevice.GetGuests">
            <summary>
            获取guest列表。可以包含自己。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneDevice.AudioDataLackFeedback">
            <summary>
            当接收到某个Guest的缺少音频数据的反馈时，触发此事件。事件参数 GuestID - LackCount（在过去10秒内缺少数据的次数）
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneDevice.OutputAudio">
            <summary>
            是否将话筒采集到的音频输出给Guest。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.DelayCircleQueue`1">
            <summary>
            队列中的元素必须在队列中延迟指定的时间后，才能出列。
            </summary>  
        </member>
        <member name="T:OMCS.Engine.Video.AgileVideoCapturer">
            <summary>
            包装IVideoCapturer，并加入视频编码和丢帧控制功能。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.IAgileVideoCapturer">
            <summary>
            智能视频采集器基础接口。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.IAgileVideoCapturer.FrameDiscarded">
            <summary>
            在过去的10秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.IAgileVideoCapturer.OriginVideoCaptured">
            <summary>
            采集到的原始视频帧。没有xvid，没有丢帧。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.IAgileVideoCapturer.VideoEncodeEnabled">
            <summary>
            是否采用对采集的视频进行编码。如果为true，则由VideoCaptured输出的数据便是经过编码的。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.AgileVideoCapturer.Stop">
            <summary>
            停止设备。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.AgileVideoCapturer.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.AgileVideoCapturer.OriginVideoCaptured">
            <summary>
            采集到的原始视频帧。没有xvid，没有丢帧。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.AgileVideoCapturer.InnerVideoCapture">
            <summary>
            内部使用的采集器。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.AgileVideoCapturer.EncodeQuality">
            <summary>
            采集的视频的编码质量。取值0~31。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="E:OMCS.Engine.Video.AgileVideoCapturer.FrameDiscarded">
            <summary>
            在过去的10秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.Clsid">
            <summary>
            DirectShow class IDs.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.SystemDeviceEnum">
            <summary>
            System device enumerator.
            </summary>
            
            <remarks>Equals to CLSID_SystemDeviceEnum.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.FilterGraph">
            <summary>
            Filter graph.
            </summary>
            
            <remarks>Equals to CLSID_FilterGraph.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.SampleGrabber">
            <summary>
            Sample grabber.
            </summary>
            
            <remarks>Equals to CLSID_SampleGrabber.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.CaptureGraphBuilder2">
            <summary>
            Capture graph builder.
            </summary>
            
            <remarks>Equals to CLSID_CaptureGraphBuilder2.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.AsyncReader">
            <summary>
            Async reader.
            </summary>
            
            <remarks>Equals to CLSID_AsyncReader.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.MediaType">
            <summary>
            DirectShow media types?
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Video">
            <summary>
            Video.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Video.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Interleaved">
            <summary>
            Interleaved. Used by Digital Video (DV).
            </summary>
            
            <remarks>Equals to MEDIATYPE_Interleaved.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Audio">
            <summary>
            Audio.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Audio.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Text">
            <summary>
            Text.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Text.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Stream">
            <summary>
            Byte stream with no time stamps.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Stream.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.MediaSubType">
            <summary>
            DirectShow media subtypes.   
            </summary>    
        </member>
        <member name="T:OMCS.Engine.DShow.Core.PinCategory">
            <summary>
            DirectShow pin categories.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinCategory.Capture">
            <summary>
            Capture pin.
            </summary>
            
            <remarks>Equals to PIN_CATEGORY_CAPTURE.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.Audio.AudioDevice">
            <summary>
            音频设备。
            (1)采样位数为16bit，单声道。
            (2)每10毫秒采集一帧。
            (3)Speex必须一次编码20ms。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.AudioDevice.OnAudioIn(System.IntPtr,System.Int32@,System.Int64)">
            <summary>
            麦克风采集回调。
            </summary>       
        </member>
        <member name="M:OMCS.Engine.Audio.AudioDevice.OnAudioOut(System.IntPtr,System.Int32@)">
            <summary>
            扬声器播放回调。必须每次严格地传入一个Frame。
            </summary>       
        </member>
        <member name="M:OMCS.Engine.Audio.AudioDevice.Start">
            <summary>
            启动音频设备。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.AudioDevice.Stop">
            <summary>
            停止音频设备。可以在后台线程中调用。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio.AudioDevice.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.AudioDevice.AudioCaptured">
            <summary>
            采集到的音频数据，里面包含frameCountInTransPackage个已编码音频帧，使用CompactPropertySerializer序列化。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.AudioDevice.RawAudioPlayed">
            <summary>
            刚刚播放的音频帧（raw data，20ms）。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Audio.AudioDevice.RawAudioCaptured">
            <summary>
            刚刚从话筒采集的音频帧（raw data，20ms数据）。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.AudioDevice.MicrophoneDeviceIndex">
            <summary>
            使用的麦克风的索引。-1表示采集声卡。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.AudioDevice.OutputAudio">
            <summary>
            是否输出麦克风采集到的声音。如果为false，将不会触发AudioCaptured事件。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Audio.AudioDevice.IsValid">
            <summary>
            音频设备是否有效。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Base.Passive.UserSecurityLogBridge">
            <summary>
            用于将用户的上下线事件记录到用户安全日志。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Group.BroadcastContract.InformationType">
            <summary>
            当MessageType为CustomizeInfoMessageTypeRoom.Response时，忽略该属性。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.Groupmates">
            <summary>
            某个组所有的成员。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter">
            <summary>
            用于文件传送及其相关控制消息。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.BlobFragmentContract">
            <summary>
            大数据块的某个片段。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.BlobID">
            <summary>
            大数据块唯一编号。从1开始计数，逐个递增。对于那些只有一个Fragment的Blob，可以将BlobID设置为-1，以减少编号的使用。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.FragmentIndex">
            <summary>
            片段的索引。从0开始计数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.Fragment">
            <summary>
            片段内容。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.IsLast">
            <summary>
            是否为最后一个片段。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter">
            <summary>
            用于客户端向服务器发送Basic信息，并发布与自己或好友状态相关的事件。   
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.Logon(System.String,System.String)">
            <summary>
            客户端登陆验证。IRapidPassiveEngine会在初始化时，自动调用该方法来验证用户账号密码。
            </summary>
            <param name="systemToken">系统标志。用于验证客户端是否与服务端属于同一系统。</param>
            <param name="password">登陆密码</param>              
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.GetMyIPE">
            <summary>
            获取自己的IPE。
            </summary>
            <returns>通常是经过NAT之后的IPE</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.GetUserIPE(System.String)">
            <summary>
            获取某个在线用户的IPE。如果用户不在线，则返回null。【适用于ESPlatform平台】
            </summary>
            <returns>通常是经过NAT之后的IPE</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.GetAllOnlineUsers">
            <summary>
            获取当前AS上的所有在线的用户列表。【该方法仅仅用于demo和测试】
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.IsUserOnline(System.String)">
            <summary>
            查询用户是否在线。【适用于ESPlatform平台】
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.Ping">
            <summary>
            ping服务器。在应用层模拟ping，比普通的ICMP的ping大一些（如8-10ms）。
            </summary>
            <returns>ping耗时，单位毫秒</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.PingByServer(System.String)">
            <summary>
            ping其他在线用户(通过服务器中转)。
            如果目标用户不在线，将抛出Timeout异常。
            </summary>
            <param name="targetUserID">要Ping的目标用户ID</param>
            <returns>ping耗时，单位毫秒</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.PingByP2PChannel(System.String)">
            <summary>
            ping其他在线用户（通过P2P通道，回复仍是由服务器中转）。
            如果P2P通道不存在，则抛出通道不存在的异常。如果目标用户不在线，将抛出Timeout异常。
            </summary>
            <param name="targetUserID">要Ping的目标用户ID</param>
            <returns>ping耗时，单位毫秒</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.KickOut(System.String)">
            <summary>
            命令服务端将目标用户踢出。如果目标用户不在当前AS上，则直接返回。
            </summary>
            <param name="targetUserID">要踢出的用户ID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.SendHeartBeatMessage">
            <summary>
            向服务器发送心跳消息。被框架OMCS.Communication.Plus.Application.Basic.Passive.HeartBeater使用。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.BeingPushedOut">
            <summary>
             当自己被同名用户挤掉线时，触发此事件。此时，客户端引擎已被Dispose。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.BeingKickedOut">
            <summary>
             当自己被服务端踢出掉线时，触发此事件。此时，客户端引擎已被Dispose。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Server.UdpServerEngine">
            <summary>
            服务端Udp引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.NullBodyContract">
            <summary>
            NullBodyContract IContractHelper.CreateMessage方法泛型参数的占位符，表示没有消息体。
            </summary>
        </member>
        <member name="T:OMCS.Passive.AdvancedOptions">
            <summary>
            OMCS客户端高级设置。
            必须在调用IMultimediaManager的Initialize方法之前设置AdvancedOptions的相关属性才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseAEC4Audio">
            <summary>
            是否对语音启用回音消除。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseNS4Audio">
            <summary>
            是否对语音启用降噪处理。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseAGC4Audio">
            <summary>
            是否对语音启用音量自动调节。默认值：true。
            （如果开启了音量自动调节，则引擎内部会自动开启降噪处理）
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseAEQ4Audio">
            <summary>
            是否对语音启用音质透明。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseCameraOriginFormatFirst">
            <summary>
            是否优先使用摄像头的原始输出格式。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.AllowDiscardFrameWhenBroadcast">
            <summary>
            在广播帧的时候，是否允许丢弃帧。默认值：true。
            比如，多个guest连到了同一个Owner的Camera设备，当Owner发送视频帧给各个guest时，如果到某个Guest的通道繁忙，则:
            如果AllowDiscardFrameWhenBroadcast为true，则不发送本帧给这个Guest；否则，仍然发送本帧给这个Guest。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxEndSoundSpanInMSecs">
            <summary>
            当播放的过程中缺少音频帧时，使用尾音填充的最大时长。单位：毫秒，默认值：0。0表示不填充尾音。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值：0。0表示不设定超时。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.SocketSendBuffSize">
            <summary>
            发送缓冲区的大小。默认值：8192（8K）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MinJitterBufferSize">
            <summary>
            抖动缓冲区的最小尺寸（JitterBuffer中的一个单位相当于20ms的音频数据）。默认值20。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxJitterBufferSize">
            <summary>
            抖动缓冲区的最大尺寸（JitterBuffer中的一个单位相当于20ms的音频数据）。默认值200。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.EncodedAudioFrameCountInPackage">
            <summary>
            传输采集到的音频数据时，一个传送单元内包含多少个编码帧（一个编码帧即20ms的音频数据）。默认值为6。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoQualityProtectEnabled">
            <summary>
            是否开启视频编码质量取值范围保护。默认值：true。如果开启，则视频编码质量将限制在3~15（原始范围为0~31） 。
            仅仅针对摄像头视频，与远程桌面的编码质量无关。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxInterval4CameraKeyFrame">
            <summary>
            摄像头视频编码时，两个关键帧之间最多间隔多少秒。单位：秒。小于等于0，表示使用最大关键帧间隔。默认值为10。
            （如果摄像头在任意时刻guest的个数最多只有一个（自己作为自己的Guest除外），比如1：1的视频聊天系统，那么建议将该属性设置为0，此时，对带宽的占用是最低的。）
            （如果存在多个guest同时观看当前摄像头视频的情况，则要谨慎设置该属性。由于每个guest的网络情况都不同，在广播视频时，针对慢的通道，OMCS会主动丢帧，该属性值就决定了对应guest观看的视频每次卡顿的最长时间。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxInterval4DesktopKeyFrame">
            <summary>
            桌面视频编码时，两个关键帧之间最多间隔多少秒。单位：秒。小于等于0，表示使用最大关键帧间隔。默认值为30。
            （如果桌面在任意时刻guest的个数最多只有一个（自己作为自己的Guest除外），比如1：1的远程协助系统，那么建议将该属性设置为0，此时，对带宽的占用是最低的。）
            （如果存在多个guest同时观看当前桌面的情况，则要谨慎设置该属性。由于每个guest的网络情况都不同，在广播桌面视频时，针对慢的通道，OMCS会主动丢帧，该属性值就决定了对应guest观看的桌面视频每次卡顿的最长时间。）        
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseOriginImage4Myself">
            <summary>
            如果自己作为guest连接自己的摄像头/桌面，是否直接使用采集的图像（不需要经过视频编解码）？默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.CheckCameraStateEveryTime">
            <summary>
            每次摄像头启动前，都先检查其状态（是否被占用）？
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoQualityEnhanced">
            <summary>
            是否使用视频增强机制。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoFrameDisardedMode">
            <summary>
            当通道繁忙时，采取的视频帧（摄像头/桌面）丢弃模型。默认值为DiscardWhenNeed。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoBitrateControlType4Camera">
            <summary>
            摄像头视频码率控制策略。默认值为BitrateControlType.ABR。【在VideoQualityEnhanced属性为true时，该设置才有效。】
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoBitrateControlType4Desktop">
            <summary>
            桌面视频码率控制策略。默认值为BitrateControlType.CQP。【在VideoQualityEnhanced属性为true时，该设置才有效。】
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.RecheckMembersOfChatGroup">
            <summary>
            是否复查聊天组（MultiChat）成员。默认值：true。
            </summary>
        </member>
        <member name="T:OMCS.Passive.BitrateControlType">
            <summary>
            视频码率控制策略。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BitrateControlType.CQP">
            <summary>
            恒定质量。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BitrateControlType.CRF">
            <summary>
            恒定码率系数。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BitrateControlType.ABR">
            <summary>
            平均码率。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.Codec.H264Encoder">
            <summary>
            H264解码器。2015.12.30
            注意：长宽必须是8的倍数。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.Codec.H264Encoder.#ctor(OMCS.Engine.BitmapInfoHeader,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ctor.
            </summary>
            <param name="header">要编码图像的头信息。</param>
            <param name="_frameRate">帧率</param>
            <param name="_quantCoef">编码质量，取值0~31。取值越小，越清晰。</param>
            <param name="_maxKeyInterval">关键帧间隔。0表示最大关键帧间隔(如果有丢帧存在，则模糊会累加)。</param>
        </member>
        <member name="M:OMCS.Engine.Video.Codec.H264Encoder.Encode(System.Byte[],System.Boolean,OMCS.Engine.Video.FrameType@,System.Byte@)">
            <summary>
            进行H264编码。
            </summary>
            <param name="imageBuff">RGB24位图数据，不包含Header</param>
            <param name="frameType">编码帧的类型。1--I帧，2--P帧，3--B帧</param>
            <param name="forceIFrame">强制编码为I帧</param>
            <param name="frameNumber">编码帧的序号，从1开始计数到达最大后再循环</param>
            <returns>编码后的数据。（DataBuffer是要被复用的，所以调用者根据需要可能要拷贝编码结果）</returns>       
        </member>
        <member name="P:OMCS.Engine.Video.Codec.H264Encoder.QuantCoef">
            <summary>
            编码质量控制量化参数，0~31。数值越小质量越高和码率成反比。可在运行的过程中动态修改。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.Codec.H264Decoder">
            <summary>
            H264解码器。2015.12.30
            注意：长宽必须是8的倍数。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.Codec.H264.H264Encoder_Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建H24编码器。
            </summary> 
            <param name="cqp">0~51，值越大图像越模糊，默认23  </param>        
        </member>
        <member name="T:OMCS.Engine.Soundcard.WaveFormatExtensible">
            <summary>
            WaveFormatExtensible
            http://www.microsoft.com/whdc/device/audio/multichaud.mspx
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtensible.#ctor">
            <summary>
            Parameterless constructor for marshalling
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtensible.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new WaveFormatExtensible for PCM or IEEE
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtensible.ToStandardWaveFormat">
            <summary>
            WaveFormatExtensible for PCM or floating point can be awkward to work with
            This creates a regular WaveFormat structure representing the same audio format
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtensible.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtensible.ToString">
            <summary>
            String representation
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormatExtensible.SubFormat">
            <summary>
            SubFormat (may be one of AudioMediaSubtypes)
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.StoppedEventArgs">
            <summary>
            Stopped Event Args
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.StoppedEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of StoppedEventArgs
            </summary>
            <param name="exception">An exception to report (null if no exception)</param>
        </member>
        <member name="P:OMCS.Engine.Soundcard.StoppedEventArgs.Exception">
            <summary>
            An exception. Will be null if the playback or record operation stopped
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient">
            <summary>
            IMMNotificationClient
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient.OnDeviceStateChanged(System.String,OMCS.Engine.Soundcard.DeviceState)">
            <summary>
            Device State Changed
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient.OnDeviceAdded(System.String)">
            <summary>
            Device Added
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient.OnDeviceRemoved(System.String)">
            <summary>
            Device Removed
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient.OnDefaultDeviceChanged(OMCS.Engine.Soundcard.DataFlow,OMCS.Engine.Soundcard.Role,System.String)">
            <summary>
            Default Device Changed
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient.OnPropertyValueChanged(System.String,OMCS.Engine.Soundcard.PropertyKey)">
            <summary>
            Property Value Changed
            </summary>
            <param name="pwstrDeviceId"></param>
            <param name="key"></param>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.RectHotPointPosition">
            <summary>
            RectHotPointPosition 一个矩形上8个热点位置。
            zhuweisky 2010.03.22
            </summary>
        </member>
        <!-- 对于成员“T:OMCS.Engine.Paint.ViewEditors.EllipseEditor”忽略有格式错误的 XML 注释 -->
        <member name="T:OMCS.Passive.RemoteDesktop.DesktopDevice">
            <summary>
            用于表示当前桌面的设备。   
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.OutputDesktop">
            <summary>
            是否将桌面图像输出给guest。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.EncodeQuality">
            <summary>
            采集的视频的编码质量。取值0~31。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.AllowControl">
            <summary>
            允许guest操作桌面。
            </summary>
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.DesktopConnector">
            <summary>
            远程桌面连接器。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.GetCurrentImage">
            <summary>
            获取当前正在绘制的图像。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.GetVideoQuality">
            <summary>
            获取当前视频的编码质量。0~31，数值越小越清晰。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的桌面输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出桌面</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.ChangeOwnerDesktopEncodeQuality(System.Int32)">
            <summary>
            修改Owner的桌面编码质量。
            </summary>
            <param name="quality">编码质量。取值0~31，值越小，越清晰。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.GetReceivedFrameCount">
            <summary>
            获取自连接成功后接收到的视频帧的总数。
            </summary>      
        </member>
        <member name="F:OMCS.Passive.RemoteDesktop.DesktopConnector.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopConnector.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopConnector.OwnerDesktopSizeChanged">
            <summary>
            当Owner共享桌面的大小发生变化时，触发此事件。参数为新的大小。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopConnector.OwnerOutputChanged">
            <summary>
            当Owner桌面图像输出控制改变时，触发此事件。【对应于Owner端的多媒体管理器的OutputDesktop属性的修改】
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopConnector.OwnerAllowControlChanged">
            <summary>
            当Owner允许guest操作桌面的授权改变时，触发此事件。【对应于Owner端的多媒体管理器的AllowControl属性的修改】
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.OwnerOutput">
            <summary>
            Owner是否输出了桌面图像。【对应于Owner端的多媒体管理器的OutputDesktop属性】
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.OwnerAllowControl">
            <summary>
            Owner是否允许操作桌面。【对应于Owner端的多媒体管理器的AllowControl属性】。注意其与WatchingOnly的区别：只有OwnerAllowControl为true的前提下，WatchingOnly的属性设置才有效果。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.DesktopSize">
            <summary>
            远程桌面的尺寸（长和宽都已经修正为8的整数倍）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.AdaptiveToViewerSize">
            <summary>
            是否将屏幕图像自动拉伸成Viewer控件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.DisplayVideoParameters">
            <summary>
            是否在桌面图像上面打印视频的相关信息（视频尺寸、编码质量、帧频）。默认值：false。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <!-- 对于成员“P:OMCS.Passive.RemoteDesktop.DesktopConnector.OwnerID”忽略有格式错误的 XML 注释 -->
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.WaitOwnerOnlineSpanInSecs">
            <summary>
            当调用BeginConnect连接Owner的设备时，如果Owner不在线，则等待对方上线的最长时间。如果超过这个时间，owner还没连接上来，则BeginConnect的结果仍然为TargetUserOffline。 
            单位：秒。默认值0。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.ShowMouseCursor">
            <summary>
            是否在远程桌面上显示Owner的鼠标光标。默认值为true。
            注意：前提是WatchingOnly为true时，该属性设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopConnector.WatchingOnly">
            <summary>
            是否仅仅允许查看远程桌面，但是不能进行操作。默认值为true。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.CameraQualityAdjuster">
            <summary>
            摄像头视频质量调节器。（以保证音频连贯性）
            (1)根据音频反馈自动调整视频编码质量。（只有一个guest（非自己）时，才启用）
            (2)根据视频的丢帧自动调整视频编码质量。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ISampleGrabberCB">
            <summary>
            The interface provides callback methods for the <see cref="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetCallback(OMCS.Engine.DShow.Core.ISampleGrabberCB,System.Int32)"/> method.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabberCB.SampleCB(System.Double,System.IntPtr)">
            <summary>
            Callback method that receives a pointer to the media sample.
            </summary>
            
            <param name="sampleTime">Starting time of the sample, in seconds.</param>
            <param name="sample">Pointer to the sample's <b>IMediaSample</b> interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabberCB.BufferCB(System.Double,System.IntPtr,System.Int32)">
            <summary>
            Callback method that receives a pointer to the sample buffer?
            </summary>
            
            <param name="sampleTime">Starting time of the sample, in seconds.</param>
            <param name="buffer">Pointer to a buffer that contains the sample data.</param>
            <param name="bufferLen">Length of the buffer pointed to by <b>buffer</b>, in bytes</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.WhiteBoard.IImageConverter">
            <summary>
            将文档转换为图片的基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Engine.WhiteBoard.IImageConverter.ConvertToImage(System.String,System.String)">
            <summary>
            开始转换。
            </summary>
            <param name="originFilePath">要被转换的文档的全路径。</param>
            <param name="imageOutputDirPath">用于保存转换后的图片的目录的全路径</param>
        </member>
        <member name="M:OMCS.Engine.WhiteBoard.IImageConverter.Cancel">
            <summary>
            取消转换。    
            </summary>
        </member>
        <member name="E:OMCS.Engine.WhiteBoard.IImageConverter.ProgressChanged">
            <summary>
            当成功转换一页时，触发此事件。参数：已经完成转换的页数（doneCount） - 总页数（totalCount）
            </summary>
        </member>
        <member name="E:OMCS.Engine.WhiteBoard.IImageConverter.ConvertSucceed">
            <summary>
            转换完成时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Engine.WhiteBoard.IImageConverter.ConvertFailed">
            <summary>
            转换失败时，触发此事件。事件参数：失败的原因（FailCause）
            </summary>
        </member>
        <member name="T:OMCS.Engine.WhiteBoard.IImageConverterFactory">
            <summary>
            图片转换器工厂。
            </summary>
        </member>
        <member name="M:OMCS.Engine.WhiteBoard.IImageConverterFactory.CreateImageConverter(System.String)">
            <summary>
            根据文档的扩展名，创建对应的图片转换器。
            </summary>
            <param name="extendName">全小写的扩展名。如“.docx”，“.pdf”等</param>
            <returns>如果不支持对应的文件类型，则返回null。</returns>
        </member>
        <member name="M:OMCS.Engine.WhiteBoard.IImageConverterFactory.GetSupportedFileTypes">
            <summary>
            获取所有支持的文档类型。返回的集合中的元素为全小写的扩展名。如“.docx”，“.pdf”等。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessageController.ShortMessageMode">
            <summary>
            短信采集模式。必须在Initialize方法之前设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.ShortMessageController.VideoQuality">
            <summary>
            如果采集视频，则该属性决定视频的质量。取值0~10，值越小，质量越高。默认值3。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Messages.Server.WBHandler">
            <summary>  
            (1)将对work的变更应用到服务器上的对应的Work实例中。
            (2)将对work的变更转发给组内的其它成员
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileSender">
            <summary>
            单个文件发送器。实现IFileSender接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSender.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1M。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.MessageTypeRoomManager">
            <summary>
            将所有的IMessageTypeRoom整合起来，检查MessageType是否冲突，并且将PushKey注入到SimplePassiveProcesser。另外，MessageTypeRoomManager实现了IServiceKeyNameMatcher接口。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.MessageTypeRoomManager.GetServiceName(System.Int32)">
            <summary>
            GetServiceName 通过消息类型获取服务名称
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Server.EmptyFriendsManager">
            <summary>
            其用途在于：假设所有的用户都不是好友。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Friends.Server.DefaultFriendsManager">
            <summary>
            其用途在于：假设所有的在线用户都是好友。【该类仅仅用于demo和测试】
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.IPv6UdpClient">
            <summary>
            兼容IPv6的UdpClient。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IPv6UdpClient.SecurityLogEnabled">
            <summary>
            是否记录安全日志。默认值为false。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.EmptyMessageTransformer">
            <summary>
            不对消息做任何处理的MessageTransformer。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.EmptyMessagePipe">
            <summary>
            对消息不做任何处理/监控的消息管道。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.WaveInEventArgs">
            <summary>
            Event Args for WaveInStream event
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveInEventArgs.#ctor(System.Byte[],System.Int32)">
            <summary>
            Creates new WaveInEventArgs
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveInEventArgs.Buffer">
            <summary>
            Buffer containing recorded data. Note that it might not be completely
            full. <seealso cref="P:OMCS.Engine.Soundcard.WaveInEventArgs.BytesRecorded"/>
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveInEventArgs.BytesRecorded">
            <summary>
            The number of recorded bytes in Buffer. <seealso cref="P:OMCS.Engine.Soundcard.WaveInEventArgs.Buffer"/>
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.ClsCtx">
            <summary>
            is defined in WTypes.h
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClientProperties">
            <summary>
            The AudioClientProperties structure is used to set the parameters that describe the properties of the client's audio stream.
            </summary>
            <remarks>http://msdn.microsoft.com/en-us/library/windows/desktop/hh968105(v=vs.85).aspx</remarks>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientProperties.cbSize">
            <summary>
            The size of the buffer for the audio stream.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientProperties.bIsOffload">
            <summary>
            Boolean value to indicate whether or not the audio stream is hardware-offloaded
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientProperties.eCategory">
            <summary>
            An enumeration that is used to specify the category of the audio stream.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientProperties.Options">
            <summary>
            A bit-field describing the characteristics of the stream. Supported in Windows 8.1 and later.
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio4ShortMessage.AudioCapturer">
            <summary>
            用于采集音频数据。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.TextFont">
            <summary>
            文本的颜色与字体
            </summary>
        </member>
        <!-- 对于成员“T:OMCS.Engine.Paint.ViewEditors.RectangleEditor”忽略有格式错误的 XML 注释 -->
        <member name="T:OMCS.Engine.Paint.ViewEditors.CurveEditor">
            <summary>
            CurveEditor 自由曲线编辑器。
            zhuweisky 2010.03.23
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.FolderSynchronize.ResDirectoryContract">
            <summary>
            回复某个目录信息。
            </summary>	
        </member>
        <member name="T:OMCS.Tools.RegionSelecter">
            <summary>
            用于可视化选择控件表面的一块正方形区域。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultimediaChannel">
            <summary>
            与OMCS服务器之间的通道。在访问某个用户的多媒体设备之前，先必须连接上目标用户的主OMCS服务器，并创建多媒体通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.GetOwners(OMCS.MultimediaDeviceType)">
            <summary>
            已经连接了哪些Owner的多媒体设备。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Connect(System.String,OMCS.MultimediaDeviceType,System.Int32)">
            <summary>
            Guest -> Owner
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Disconnect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Guest -> Owner
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.SendCommand(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Guest -> Owner
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Query(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Guest -> Owner
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Notify(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[],System.Boolean)">
            <summary>
            Owner ->  Guest
            </summary>       
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.IsMultimediaManagerAvailable(System.String,System.Boolean@)">
            <summary>
            Guest -> Owner
            </summary>        
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.VideoFrameReceived">
            <summary>
            当接收到来自Owner的视频帧数据时，guest端触发此事件。OwnerID - MultimediaDeviceType - frameIndex - videoQuality- frame 。 注意：frameIndex=0 表示为I帧，如果为P帧或B帧，则顺序递增。当又遇到I帧时，frameIndex又重置为0。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.AudioFrameReceived">
            <summary>
            当接收到来自Owner的音频帧数据时，guest端触发此事件。OwnerID -  frame 。 
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.DisconnectNotified">
            <summary>
            当Owner主动断开guest的连接时，guest端触发此事件。 
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.NotifyReceived">
            <summary>
            当接收到来自Owner的通知时，guest端触发此事件。 OwnerID - MultimediaDeviceType - NotifyType - NotifyContent
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.ShortMessageReceived">
            <summary>
            当收到短信消息时，触发此事件。 参数：短信发送者ID - ShortMessage
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.CoursewareLoadedNotifyReceived">
            <summary>
            当收到来自服务端的白板加载完成的用户数变化的通知时，触发此事件。参数：白板的GroupID - total - done
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaChannel.CurrentUserID">
            <summary>
            当前登录用户的ID。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IVideoCapturerFactory">
            <summary>
            视频采集器工厂接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IVideoCapturerFactory.CreateVideoCapturer(System.Int32,System.Drawing.Size,System.Int32)">
            <summary>
            创建一个新的视频采集器实例。
            如果返回null，则表示使用框架内置的视频采集器。
            </summary>
            <param name="deviceIndex">摄像头索引</param>
            <param name="videoSize">要采集的视频大小（分辨率）</param>
            <param name="frameRate">采集的帧频</param>     
        </member>
        <member name="M:OMCS.Passive.IVideoCapturerFactory.GetCameraCapability(System.Int32)">
            <summary>
            获取视频采集器支持的采集分辨率。
            如果返回null，则表示指示框架自己去获取这些信息。
            </summary>
            <param name="deviceIndex">摄像头索引</param>      
        </member>
        <member name="T:OMCS.Passive.IAudioCapturerFactory">
            <summary>
            声音采集器工厂接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IAudioCapturerFactory.CreateAudioCapturer(System.Int32)">
            <summary>
            创建一个新的声音采集器实例。
            如果返回null，则表示使用框架内置的声音采集器。
            </summary>
            <param name="deviceIndex">设备索引</param>      
        </member>
        <member name="T:OMCS.Passive.GuestsManager">
            <summary>
            多媒体设备使用该类来管理所有连上来的的Guest。【目前仅仅用于管理摄像头设备】
            </summary>
        </member>
        <member name="T:OMCS.Engine.ICaptureController">
            <summary>
            用于控制是否需要捕获下一帧。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.EmptyResumedFileManager">
            <summary>
            IResumedFileManager接口的null object模式实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.TextMessageHeader">
            <summary>
            常用的基于文本的消息头定义。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.StreamContratAttribute">
            <summary>
            用于指示Contract采用CompactPropertySerializer/CompactSerializer序列化。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.SerializeStrategy">
            <summary>
            表示在序列化contract时，是采用CompactPropertySerializer序列化其属性，还是采用CompactFieldSerializer序列化其字段。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.Server.GroupMessageProcesser">
            <summary>
            与ESPlatform结合：
            (1)由事件（比如加入组）发生的宿主服务器（即导致事件发生的用户所在的服务器）负责通知群内成员或群友。
            (2)如果事件是由平台或服务端触发，同理，则由目标用户所在的服务器负责通知。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.Server.IGroupController">
            <summary>
            组控制器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Group.Server.IGroupController.Broadcast(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在组内广播信息。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Group.Server.IGroupController.BroadcastReceived">
            <summary>
            当服务端接收到要转发的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Group.Server.IGroupController.GroupNotifyEnabled">
            <summary>
            加入/退出组、上下线等事件是否通知组友。默认值为true。
            注意，如果关闭该选项，客户端则不能保持实时的组的状态，将导致广播信息发送出现错误（IGroupOutter.Broadcast方法）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Group.Server.IGroupController.UseGroupNotifyThread">
            <summary>
            组友上下线通知是否使用单独的线程。默认值为false。
            如果要开启组友通知线程，必须先开启组友通知（即必须先将GroupNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Group.Server.GroupMessageProcesser.UseGroupNotifyThread">
            <summary>
            组友上下线通知是否使用单独的线程。默认值为false。
            如果要开启组友通知线程，必须先开启组友通知（即必须先将GroupNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Group.GroupMessageTypeRoom">
            <summary>
            GroupMessageTypeRoom 与组操作相关的所有消息类型定义。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Group.GroupMessageTypeRoom.GroupmateOfflineNotify">
            <summary>
            对组内通知某成员掉线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Group.GroupMessageTypeRoom.GroupmateConnectedNotify">
            <summary>
            对组内通知某成员上线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom">
            <summary>
            所有与文件传送相关的消息类型的空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.BeginSendFile">
            <summary>
            通知对方准备发送文件。对应协议为BeginSendFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.RejectOrAcceptFile">
            <summary>
            RejectOrAcceptFile 同意/拒绝接收文件。对BeginSendFile的回复，消息体为RejectOrAcceptFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.FilePackageData">
            <summary>
            包含了文件数据的包。消息协议为OMCS.Communication.Plus.FileTransceiver.FilePackageContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.CancelFileSending">
            <summary>
            取消文件的发送。对应协议为CancelFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.CancelFileReceiving">
            <summary>
            取消文件的接收。对应协议为CancelFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.ContinueTransFile">
            <summary>
            续传文件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.IsFolder">
            <summary>
            是否传送的为文件夹。false表示传送的为文件，true表示传送的为文件夹。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.OriginPath">
            <summary>
            发送方发送的文件（夹）的全路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.TotalSize">
            <summary>
            要传送的文件（夹）的总大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.LastUpdateTime">
            <summary>
            被发送的文件(夹)最后一次更新时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.Comment">
            <summary>
            Comment 用于存储与本次文件发送相关的额外附加信息。比如，在类似ftp的上传文件（夹）的服务中，Comment的内容可以是服务器保存上传文件（夹）的路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.CancelFileContract.InnerError">
            <summary>
            是否因为内部错误而导致文件传送中断。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.CancelFileContract.Cause">
            <summary>
            取消的具体原因。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract">
            <summary>
            同意/拒绝接收文件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.RejectCause">
            <summary>
            当agree为false，该字段表示拒绝的原因。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.ReceivedCount">
            <summary>
            如果值非0，则表示续传，指示已经传递了多少字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.DisrupttedFileRelativePath">
            <summary>
            仅用于文件夹续传，表示续传的文件的相对路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.DisrupttedFileSize">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.DisrupttedFileReceivedCount">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件已接收的字节数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.IBasicController">
            <summary>
            直接在从服务端发出相关控制指令（如踢人等）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Server.IBasicController.KickOut(System.String)">
            <summary>
            将目标用户从当前AS中踢出，并关闭对应的连接。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.ReqLogonContract.SystemToken">
            <summary>
            系统标志。用于验证客户端是否与服务端属于同一系统。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.UserIpeResContract">
            <summary>
            UserIpeResContract 返回用户的IPE。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Information">
            <summary>
            一个完整的自定义信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.InformationType">
            <summary>
            自定义信息类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.Content">
            <summary>
            信息的内容
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager">
            <summary>
            IUserManager接口的默认实现。
            只有当UserID与TCP连接绑定了，才会进入用户管理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.IUserManager">
            <summary>
            在线用户管理器接口。注意，IUserManager仅仅管理当前AS上的所有在线用户，所以其暴露的所有事件、属性、方法都是针对当前AS上的用户的。
            如果要获取ESPlatform全局在线用户的信息，需要访问IPlatformUserManager接口。      
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetUserData(System.String)">
            <summary>
            获取目标在线用户的基础信息。
            </summary>
            <param name="userID">目标用户的ID</param>
            <returns>如果目标用户不在线，则返回null</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SetP2PAddress(System.String,OMCS.Communication.Basic.Server.UserManagement.P2PAddress)">
            <summary>
            记录客户端上报的P2P地址。如果目标用户不在线，则忽略。
            </summary>
            <param name="userID">客户端用户的ID</param>
            <param name="addr">P2P地址</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SetUserTag(System.String,System.Object)">
            <summary>
            设置用户的携带数据。如果是在ESPlatform中，每次tag的内容发生变化时，都要调用此方法重新设置。
            </summary>
            <param name="userID">客户端用户的ID</param>
            <param name="tag">携带的数据</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SelectOnlineUserFrom(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从目标用户集合中挑出在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.Initialize">
            <summary>
            初始化用户管理器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetUserAddress(System.String)">
            <summary>
            如果用户不在线，返回null	
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.LogonOtherServer(System.String,System.Int32)">
            <summary>
            该方法用于Platform，用于接受平台的回调通知。当RelogonMode为ReplaceOld时，同名用户在同一群集的其它的应用服务器上登陆。将触发SomeOneBeingPushedOut事件。
            </summary>
            <param name="userID">同名登陆的用户ID。</param>
            <param name="newServerID">新登录到哪台服务器。</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserDisplayer">
            <summary>
            用户管理器依赖该属性显示所有在线用户的状态信息。	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IUserManager.RelogonMode">
            <summary>
            重登陆模式。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneDisconnected">
            <summary>
            客户端连接被关闭时，将触发此事件。不要远程预定该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneConnected">
            <summary>
            当接收到新连接上的第一个消息时，将触发此事件。不要远程预定该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneBeingPushedOut">
            <summary>
            如果RelogonMode为ReplaceOld，并且当从另外一个新连接上收到一个同名ID用户的消息时将触发此事件。
            注意，只有在该事件处理完毕后，才会真正关闭旧的连接并使用新的地址取代旧的地址。可以在该事件的处理函数中，将相关情况通知给旧连接的客户端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.NewConnectionIgnored">
            <summary>
            如果RelogonMode为IgnoreNew，并且当从一个新连接上收到一个同名ID用户的消息时将触发此事件。   
            注意，只有在该事件处理完毕后，才会关闭新连接。可以在该事件的处理函数中，将相关情况通知给客户端。   
            【一般情况下，都会由登录回复告知客户端已经登录，而不会进入到这里触发该事件！】
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneTimeOuted">
            <summary>
            用户心跳超时。
            只有在该事件处理完毕后，才关闭对应的连接，并将其从用户列表中删除。可以在该事件的处理函数中，将相关情况通知给客户端。            
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserCountChanged">
            <summary>
            当在线用户数发生变化时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.P2PAddressChanged">
            <summary>
            当某个用户的P2PAddress地址被修改时，将触发此事件。参数为 UserID - P2PAddress
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserTagChanged">
            <summary>
            当某个用户的携带数据被修改时，将触发此事件。参数为 UserID - tag
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.UserDisplayer">
            <summary>
            用户管理器依赖该属性显示所有在线用户的状态信息。	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，则视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.TcpServerEngine">
            <summary>
            要绑定的服务端引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.ActivateUserAfterSentMessage">
            <summary>
            当给某个用户发送消息后，是否激活其心跳。默认值false。普通应用中，应设为false。该属性主要给ESPlatform的转发服务器TS使用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IMessageTransceiver">
            <summary>
            消息收发器。可将异步的消息请求/回复转化为同步调用。	
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.IsP2PChannelExist(System.String)">
            <summary>
            到目标用户的P2P通道是否存在。
            </summary>
            <param name="destUserID">目标用户ID</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.Send(OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
             发送数据。
            （1）如果为非P2P消息，则直接向服务器提交。
            （2）如果消息为P2P（即接收者是另一个在线用户），当目标用户的P2PChannel可用且可靠（比如TCP通道、或增强的UDP通道），则将通过P2PChannel向该用户发送。否则，也是直接向服务器提交。     
            </summary>
            <param name="msg">要提交的消息</param>   
            <param name="post">是否采用Post模式发送消息</param>  
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.SendToServer(OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向服务器发送消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.SendByP2PChannel(OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel,System.Boolean,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            使用P2P通道（不一定可靠）将消息发送给其他在线用户。
            </summary>
            <param name="p2pMessage">要提交的P2P消息</param>      
            <param name="actionType">当为P2P通道不存在时，采取的策略</param>
            <param name="msg">是否采用Post模式发送消息</param>  
            <param name="destUserID">接收P2P消息的用户ID</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.Commit(OMCS.Communication.Basic.Core.IMessage,System.Nullable{System.Int32})">
            <summary>
            提交数据并返回应答。如果resMessageType不为null，且超时仍然没有回复，则抛出超时异常TimeoutException。         
            （1）如果为非P2P消息（即接收者是服务端），则直接向服务器提交。
            （2）如果消息为P2P（即接收者是另一个在线用户），当目标用户的P2PChannel可用且可靠（比如TCP通道、或增强的UDP通道），则将通过P2PChannel向该用户发送。否则，也是直接向服务器提交。     
            </summary>
            <param name="msg">要提交的消息</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <returns>应答消息</returns>     
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.Commit(OMCS.Communication.Basic.Core.IMessage,System.Int32,OMCS.Communication.Basic.Core.ResponseHandler,System.Object)">
            <summary>
            提交请求，当框架接收到回复时，将自动回调responseHandler进行处理。        
            （1）如果为非P2P消息，则直接向服务器提交。
            （2）如果消息为P2P（即接收者是另一个在线用户），当目标用户的P2PChannel可用且可靠（比如TCP通道、或增强的UDP通道），则将通过P2PChannel向该用户发送。否则，也是直接向服务器提交。     
            </summary>
            <param name="msg">要提交的请求</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <param name="responseHandler">用于处理回复消息的方法</param>     
            <param name="state">携带的状态数据，将被传递给回调函数responseHandler</param>            
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.CommitToServer(OMCS.Communication.Basic.Core.IMessage,System.Nullable{System.Int32})">
            <summary>
            向服务器提交数据。该消息即使消息为P2P，也一定经过服务器中转。如果resMessageType不为null，且超时仍然没有回复，则抛出超时异常TimeoutException。（对于有些P2P消息，服务器可能必须要拦截处理）
            </summary>
            <param name="requestMsg">要提交的消息</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <returns>应答消息</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.CommitToServer(OMCS.Communication.Basic.Core.IMessage,System.Int32,OMCS.Communication.Basic.Core.ResponseHandler,System.Object)">
            <summary>
            向服务器提交数据。该消息即使消息为P2P，也一定经过服务器中转。（对于有些P2P消息，服务器可能必须要拦截处理）
            </summary>
            <param name="requestMsg">要提交的消息</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <param name="responseHandler">用于处理回复消息的方法</param>   
            <param name="state">携带的状态数据，将被传递给回调函数responseHandler</param>        
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IMessageTransceiver.Connected">
            <summary>
            与服务器是否连接。如果是基于UDP，则返回null。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.TextTcpEngine">
            <summary>
            基于文本的TCP服务端引擎。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器的信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.ProxyServerIP">
            <summary>
            代理服务器IP
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.ProxyServerPort">
            <summary>
            代理服务器端口
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.UserName">
            <summary>
            登陆代理服务器的用户名。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.Password">
            <summary>
            登陆代理服务器的密码。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.Page.SubscribeAllViewsEvents">
            <summary>
            SubscribeAllViewsEvents 预定所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.Page.ViewIDCreator">
            <summary>
            ViewIDCreator 当多人协作时，同步ViewID的生成。另外可以考虑使用ESBasic.ObjectManagement.Basic.BeforehandCreator来提前生成许多ViewID。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.Page.BackImage">
            <summary>
            背景图片。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.Page.Boundary">
            <summary>
            Page的边界。值为null时，表示没有边界。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Views.Page.NewViewSelected">
            <summary>
            是否选中新创建的view。默认值false。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IMediaEventEx">
            <summary>
            The interface inherits contains methods for retrieving event notifications and for overriding the
            filter graph's default handling of events.
            </summary>
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.GetEventHandle(System.IntPtr@)">
            <summary>
            Retrieves a handle to a manual-reset event that remains signaled while the queue contains event notifications.
            </summary>
            <param name="hEvent">Pointer to a variable that receives the event handle.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.GetEvent(OMCS.Engine.DShow.Core.DsEvCode@,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Retrieves the next event notification from the event queue.
            </summary>
            
            <param name="lEventCode">Variable that receives the event code.</param>
            <param name="lParam1">Pointer to a variable that receives the first event parameter.</param>
            <param name="lParam2">Pointer to a variable that receives the second event parameter.</param>
            <param name="msTimeout">Time-out interval, in milliseconds.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.WaitForCompletion(System.Int32,System.Int32@)">
            <summary>
            Waits for the filter graph to render all available data.
            </summary>
            
            <param name="msTimeout">Time-out interval, in milliseconds. Pass zero to return immediately.</param>
            <param name="pEvCode">Pointer to a variable that receives an event code.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.CancelDefaultHandling(System.Int32)">
            <summary>
            Cancels the Filter Graph Manager's default handling for a specified event.
            </summary>
            
            <param name="lEvCode">Event code for which to cancel default handling.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.RestoreDefaultHandling(System.Int32)">
            <summary>
            Restores the Filter Graph Manager's default handling for a specified event.
            </summary>
            <param name="lEvCode">Event code for which to restore default handling.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.FreeEventParams(OMCS.Engine.DShow.Core.DsEvCode,System.Int32,System.Int32)">
            <summary>
            Frees resources associated with the parameters of an event.
            </summary>
            <param name="lEvCode">Event code.</param>
            <param name="lParam1">First event parameter.</param>
            <param name="lParam2">Second event parameter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.SetNotifyWindow(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Registers a window to process event notifications.
            </summary>
            
            <param name="hwnd">Handle to the window, or <see cref="F:System.IntPtr.Zero"/> to stop receiving event messages.</param>
            <param name="lMsg">Window message to be passed as the notification.</param>
            <param name="lInstanceData">Value to be passed as the <i>lParam</i> parameter for the <i>lMsg</i> message.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.SetNotifyFlags(System.Int32)">
            <summary>
            Enables or disables event notifications.
            </summary>
            
            <param name="lNoNotifyFlags">Value indicating whether to enable or disable event notifications.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.GetNotifyFlags(System.Int32@)">
            <summary>
            Determines whether event notifications are enabled.
            </summary>
            
            <param name="lplNoNotifyFlags">Variable that receives current notification status.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Server.IMultimediaServer">
            <summary>
            OMCS多媒体服务器。
            </summary>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.Close">
            <summary>
            关闭OMCS多媒体服务器。
            </summary>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>     
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>   
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.SendShortMessage(System.String,OMCS.Passive.ShortMessages.ShortMessage)">
            <summary>
            发送短信给目标用户。
            </summary>        
            <param name="destUserID">短信的接收者ID</param>
            <param name="msg">短信</param>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.GetMultiChatMembers(OMCS.Contracts.ChatType,System.String)">
            <summary>
            获取多人语音/视频组的成员。注意：返回的集合不可被修改。
            </summary>        
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.Port">
            <summary>
            当前服务器所监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.AgileChannelBusyGuesserEnabled">
            <summary>
            智能通道状态判定器是否开启。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.UncompletedSendingCount4Busy">
            <summary>
            当通道上尚未发送完成的消息个数大于该值时，判定通道为繁忙（配合发送方法的ActionTypeOnChannelIsBusy参数使用）？默认值为：0。（小于0，表示始终判定为不繁忙）
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.CoursewaresRootPath">
            <summary>
            用于存放用户上传的白板课件的根目录。默认值为运行目录下的"Coursewares"文件夹。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.UserConnected">
            <summary>
            客户端连接到服务器时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.UserDisconnected">
            <summary>
            客户端连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.ShortMessagePostFailed">
            <summary>
            当不在线的用户收到短信时，将触发此事件。参数：短信接收者ID - 短信发送者ID - ShortMessage
            </summary>
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.DesktopPanel">
            <summary>
            启用了双缓冲的Panel，防止视频闪烁。
            如果使用DynamicDesktopConnector，则可使用该DesktopPanel控件来绘制视频。
            </summary>
        </member>
        <member name="F:OMCS.Passive.RemoteDesktop.DesktopPanel.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopPanel.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopPanel.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.ShortMessages.ShortMessagePlayer">
            <summary>
            短信播放器。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.ShortMessagePlayer.Play">
            <summary>
            开始播放。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.ShortMessagePlayer.Stop">
            <summary>
            停止播放。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Messages.Passive.WBOutter">
            <summary>
            WBOutter 用于将白板变化事件通过网络传递出去。
            在使用之前请先调用BindWBEventPublishers方法初始化。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Messages.Passive.WBOutter.BindWork(OMCS.Engine.Paint.Application.IWork)">
            <summary>
            将白板的事件与WBOutter提供的事件处理器关联起来。
            </summary>  
        </member>
        <member name="T:OMCS.Communication.Plus.Serialization.CompactPropertySerializer">
            <summary>
            CompactPropertySerializer 紧凑序列化器，仅序列化所有能读写的属性(可支持混淆加密的类型)，使用IPropertyQuicker存取属性值。 
            (1)支持类和结构的序列化。被序列化的类或结构必须有默认的Ctor（Font就没有默认Ctor）。注意，有些类似Color的对象，它的状态RGB属性是只读的，如此CompactPropertySerializer就无法正确地将其序列化，此时可以使用CompactFieldSerializer。
            (2)支持的类型：基础数据类型(如int，long，bool等)，string，byte[]。   
            (3)支持嵌套。
            (4)除byte[]/List()]/Dictionary(,)外，不支持其它的集合类型。
            (5)不支持循环引用。如果存在循环引用，序列化时将导致死循环。   
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PUdpProbeContract.EndingIPE">
            <summary>
            EndingIPE 接收该消息的端点IPE
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.PublicIPEResponseContract">
            <summary>
            返回用户的公网IP和经NAPT后的TCP端口。
            </summary>    
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.ReceiveP2PProbeNotifyContract.SourceIPEndPoint">
            <summary>
            P2P通道的起始方IPE。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.ReceiveP2PProbeNotifyContract.EndingIPEndPoint">
            <summary>
            P2P通道的结束方IPE。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo.P2PAddress">
            <summary>
            客户端的P2P地址信息
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler.VerifyUser(System.String,System.String,System.String,System.String@)">
            <summary>
            客户端登陆验证。
            </summary>        
            <param name="userID">登陆用户账号</param>
            <param name="systemToken">系统标志。用于验证客户端是否与服务端属于同一系统。</param>
            <param name="password">登陆密码</param>
            <param name="failureCause">如果登录失败，该out参数指明失败的原因</param>
            <returns>如果密码和系统标志都正确则返回true；否则返回false。</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.EmptyBasicHandler">
            <summary>
            null object 模式的IBasicHandler实现。
            VerifyUser方法始终返回true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.BasicMessageProcesser">
            <summary>
            BasicMessageProcesser 提供以下特性：
            (1)登录验证（结合RelogonMode）、登出（关闭连接）、心跳（自动回复）
            (2)当某用户超时，先向其发送TimeoutNotify，然后关闭对应的连接。
            (3)当某用户被挤掉线时，先向其发送BeingPushedOutNotify，然后关闭对应的连接。
            (4)当新的同名连接被忽略时，关闭新连接。
            (5)用户上下线时，通知好友。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.Server.BasicMessageProcesser.UserManager">
            <summary>
            本地用户管理器
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.Server.BasicMessageProcesser.P2PEnabled">
            <summary>
            客户端是否开启P2P。即使框架授权了P2P功能，也可以通过该属性关闭P2P。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.JoinGroup(System.String,System.String)">
            <summary>
            将用户加入目标组。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.QuitGroup(System.String,System.String)">
            <summary>
            将用户从目标组中移除。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.Offline(System.String)">
            <summary>
            将用户从所有组中移除。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.SomeoneJoinGroup">
            <summary>
            当新成员加入组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.SomeoneQuitGroup">
            <summary>
            当成员退出组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.GroupmateOffline">
            <summary>
            当用户掉线，从所有组中退出时，触发该事件。参数：userID - groupmate。将不再触发SomeoneQuitGroup事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager">
            <summary>
            在ESPlatform群集中的用户管理器（使用于ACMS服务器）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.GetUserData(System.String)">
            <summary>
            获取目标在线用户的基础信息。
            </summary>
            <param name="userID">目标用户的ID</param>
            <returns>如果目标用户不在线，则返回null</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.SetUserTag(System.String,System.Object)">
            <summary>
            修改用户的携带数据。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.SelectOnlineUserFrom(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从目标用户集合中挑出在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.SetP2PAddress(System.String,OMCS.Communication.Basic.Server.UserManagement.P2PAddress)">
            <summary>
            记录客户端上报的P2P地址。如果目标用户不在线，则忽略。
            </summary>
            <param name="userID">客户端用户的ID</param>
            <param name="addr">P2P地址</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.VirtualPlatformUserManager">
            <summary>
            在非ESPlatform环境中，虚拟的平台用户管理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.DisconnectedType">
            <summary>
            客户端连接断开的原因分类。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.NetworkInterrupted">
            <summary>
            网络连接中断。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.InvalidMessage">
            <summary>
            无效的消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.MessageWithWrongUserID">
            <summary>
            消息中的UserID与当前连接的OwnerID不一致。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.HeartBeatTimeout">
            <summary>
            心跳超时。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.BeingPushedOut">
            <summary>
            被同名用户挤掉线。（发生于RelogonMode为ReplaceOld）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.NewConnectionIgnored">
            <summary>
            当已经有同名用户在线时，新的连接被忽略。（发生于RelogonMode为IgnoreNew） 
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.ChannelCacheOverflow">
            <summary>
            等待发送以及正在发送的消息个数超过了MaxChannelCacheSize的设定值。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.UnauthorizedClientType">
            <summary>
            未授权的客户端类型
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.MaxConnectionCountLimitted">
            <summary>
            已达到最大连接数限制
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.RegularSender">
            <summary>
            IRegularSender接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.MessageTransceiver">
            <summary>
            IMessageTransceiver 的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ProtocolType">
            <summary>
            传输层协议类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.MessageInvalidType">
            <summary>
            接收到的无效的消息分类。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.Valid">
            <summary>
            正常消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.MessageSizeOverflow">
            <summary>
            消息尺寸溢出。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.InvalidHeader">
            <summary>
            无效的消息头
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.InvalidToken">
            <summary>
            无效的标识符
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.DataLacked">
            <summary>
            数据包长度不够
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.InvalidClientType">
            <summary>
            无效的客户端类型
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.INakeDispatcher">
            <summary>
            内层分派器，消息到达INakeDispatcher内部，就不再与Spy或Hook相关。
            zhuweisky 2006.05.25
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.INakeDispatcher.DispatchMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            在最内部分配消息给最终的消息处理器去处理，并返回处理的结果。
            </summary>     
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ContractFormatStyle">
            <summary>
            协议的格式。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.ContractFormatStyle.Stream">
            <summary>
            流协议或称二进制协议。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.ContractFormatStyle.Text">
            <summary>
            文本协议，如基于xml的。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ResponseManager">
            <summary>
            IResponseManager的参考实现。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.ResponseManager.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数。
            </summary>
            <param name="responseTTL_Secs">如果一个回复在管理器中存在的时间超过ResponseTTL，则会被删除。单位为秒。如果ResponseTTL为0，则表示不进行生存期管理。</param>
            <param name="timeout_Sec">如果在TimeoutSec内，PickupResponse仍然接收不到期望的回复，则将抛出异常。单位为秒。为0时，表示不设置超时。一般设为30。</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.ResponseManager.Dispose">
            <summary>
            释放超时检测线程。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.ScreenResolution">
            <summary>
            屏幕分辨率
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.WaveFormatEncoding">
            <summary>
            Summary description for WaveFormatEncoding.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Unknown">
            <summary>WAVE_FORMAT_UNKNOWN,	Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Pcm">
            <summary>WAVE_FORMAT_PCM		Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Adpcm">
            <summary>WAVE_FORMAT_ADPCM		Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.IeeeFloat">
            <summary>WAVE_FORMAT_IEEE_FLOAT Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vselp">
            <summary>WAVE_FORMAT_VSELP		Compaq Computer Corp.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.IbmCvsd">
            <summary>WAVE_FORMAT_IBM_CVSD	IBM Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.ALaw">
            <summary>WAVE_FORMAT_ALAW		Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MuLaw">
            <summary>WAVE_FORMAT_MULAW		Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Dts">
            <summary>WAVE_FORMAT_DTS		Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Drm">
            <summary>WAVE_FORMAT_DRM		Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WmaVoice9">
            <summary>WAVE_FORMAT_WMAVOICE9 </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.OkiAdpcm">
            <summary>WAVE_FORMAT_OKI_ADPCM	OKI</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DviAdpcm">
            <summary>WAVE_FORMAT_DVI_ADPCM	Intel Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.ImaAdpcm">
            <summary>WAVE_FORMAT_IMA_ADPCM  Intel Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MediaspaceAdpcm">
            <summary>WAVE_FORMAT_MEDIASPACE_ADPCM Videologic</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.SierraAdpcm">
            <summary>WAVE_FORMAT_SIERRA_ADPCM Sierra Semiconductor Corp </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.G723Adpcm">
            <summary>WAVE_FORMAT_G723_ADPCM Antex Electronics Corporation </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DigiStd">
            <summary>WAVE_FORMAT_DIGISTD DSP Solutions, Inc.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DigiFix">
            <summary>WAVE_FORMAT_DIGIFIX DSP Solutions, Inc.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DialogicOkiAdpcm">
            <summary>WAVE_FORMAT_DIALOGIC_OKI_ADPCM Dialogic Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MediaVisionAdpcm">
            <summary>WAVE_FORMAT_MEDIAVISION_ADPCM Media Vision, Inc.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.CUCodec">
            <summary>WAVE_FORMAT_CU_CODEC Hewlett-Packard Company </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.YamahaAdpcm">
            <summary>WAVE_FORMAT_YAMAHA_ADPCM Yamaha Corporation of America</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.SonarC">
            <summary>WAVE_FORMAT_SONARC Speech Compression</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DspGroupTrueSpeech">
            <summary>WAVE_FORMAT_DSPGROUP_TRUESPEECH DSP Group, Inc </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.EchoSpeechCorporation1">
            <summary>WAVE_FORMAT_ECHOSC1 Echo Speech Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.AudioFileAf36">
            <summary>WAVE_FORMAT_AUDIOFILE_AF36, Virtual Music, Inc.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Aptx">
            <summary>WAVE_FORMAT_APTX Audio Processing Technology</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.AudioFileAf10">
            <summary>WAVE_FORMAT_AUDIOFILE_AF10, Virtual Music, Inc.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Prosody1612">
            <summary>WAVE_FORMAT_PROSODY_1612, Aculab plc</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Lrc">
            <summary>WAVE_FORMAT_LRC, Merging Technologies S.A. </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DolbyAc2">
            <summary>WAVE_FORMAT_DOLBY_AC2, Dolby Laboratories</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Gsm610">
            <summary>WAVE_FORMAT_GSM610, Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MsnAudio">
            <summary>WAVE_FORMAT_MSNAUDIO, Microsoft Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.AntexAdpcme">
            <summary>WAVE_FORMAT_ANTEX_ADPCME, Antex Electronics Corporation</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.ControlResVqlpc">
            <summary>WAVE_FORMAT_CONTROL_RES_VQLPC, Control Resources Limited </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DigiReal">
            <summary>WAVE_FORMAT_DIGIREAL, DSP Solutions, Inc. </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.DigiAdpcm">
            <summary>WAVE_FORMAT_DIGIADPCM, DSP Solutions, Inc.</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.ControlResCr10">
            <summary>WAVE_FORMAT_CONTROL_RES_CR10, Control Resources Limited</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_NMS_VBXADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CS_IMAADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ECHOSC3">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_DIGITALK">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_XEBEC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_G721_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_G728_CELP">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_MSG723">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Mpeg">
            <summary>WAVE_FORMAT_MPEG, Microsoft Corporation </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_RT24">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_PAC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MpegLayer3">
            <summary>WAVE_FORMAT_MPEGLAYER3, ISO/MPEG Layer3 Format Tag </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_LUCENT_G723">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CIRRUS">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ESPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CANOPUS_ATRAC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_G726_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_G722_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DSAT_DISPLAY">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_BYTE_ALIGNED">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC8">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC10">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC16">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC20">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT24">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29HW">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR12">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR18">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ40">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SOFTSOUND">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ60">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_MSRT24">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_G729A">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_MVI_MVI2">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DF_G726">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DF_GSM610">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ISIAUDIO">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ONLIVE">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SBC24">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DOLBY_AC3_SPDIF">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_MEDIASONIC_G723">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_PROSODY_8KBPS">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ZYXEL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_PHILIPS_LPCBB">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_PACKED">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_MALDEN_PHONYTALK">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Gsm">
            <summary>WAVE_FORMAT_GSM</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.G729">
            <summary>WAVE_FORMAT_G729</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.G723">
            <summary>WAVE_FORMAT_G723</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Acelp">
            <summary>WAVE_FORMAT_ACELP</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.RawAac">
            <summary>
            WAVE_FORMAT_RAW_AAC1
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_RHETOREX_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_IRAT">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VIVO_G723">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VIVO_SIREN">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DIGITAL_G723">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SANYO_LD_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACEPLNET">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP4800">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP8V3">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729A">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_KELVIN">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_G726ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_PUREVOICE">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_HALFRATE">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_TUBGSM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_MSAUDIO1">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WindowsMediaAudio">
            <summary>
            Windows Media Audio, WAVE_FORMAT_WMAUDIO2, Microsoft Corporation
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WindowsMediaAudioProfessional">
            <summary>
            Windows Media Audio Professional WAVE_FORMAT_WMAUDIO3, Microsoft Corporation
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WindowsMediaAudioLosseless">
            <summary>
            Windows Media Audio Lossless, WAVE_FORMAT_WMAUDIO_LOSSLESS
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WindowsMediaAudioSpdif">
            <summary>
            Windows Media Audio Professional over SPDIF WAVE_FORMAT_WMASPDIF (0x0164)
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ULAW">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ALAW">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_16K">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH8">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH10">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_UHER_ADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_QUARTERDECK">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ILINK_VC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_RAW_SPORT">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_ESST_AC3">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_IPI_HSX">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_IPI_RPELP">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_CS2">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SONY_SCX">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_FM_TOWNS_SND">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_BTV_DIGITAL">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_QDESIGN_MUSIC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_VME_VMPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_TPC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_OLIGSM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_OLIADPCM">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_OLICELP">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_OLISBC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_OLIOPR">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_LH_CODEC">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_NORRIS">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS">
            <summary></summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MPEG_ADTS_AAC">
            <summary>
            Advanced Audio Coding (AAC) audio in Audio Data Transport Stream (ADTS) format.
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_ADTS_AAC.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral band replication (SBR) or parametric stereo (PS) tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MPEG_RAW_AAC">
            <summary></summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MPEG_LOAS">
            <summary>
            MPEG-4 audio transport stream with a synchronization layer (LOAS) and a multiplex layer (LATM).
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_LOAS.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral SBR or PS tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.NOKIA_MPEG_ADTS_AAC">
            <summary>NOKIA_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.NOKIA_MPEG_RAW_AAC">
            <summary>NOKIA_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.VODAFONE_MPEG_ADTS_AAC">
            <summary>VODAFONE_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.VODAFONE_MPEG_RAW_AAC">
            <summary>VODAFONE_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.MPEG_HEAAC">
            <summary>
            High-Efficiency Advanced Audio Coding (HE-AAC) stream.
            The format block is an HEAACWAVEFORMAT structure.
            </summary>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DVM">
            <summary>WAVE_FORMAT_DVM</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vorbis1">
            <summary>WAVE_FORMAT_VORBIS1 "Og" Original stream compatible</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vorbis2">
            <summary>WAVE_FORMAT_VORBIS2 "Pg" Have independent header</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vorbis3">
            <summary>WAVE_FORMAT_VORBIS3 "Qg" Have no codebook header</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vorbis1P">
            <summary>WAVE_FORMAT_VORBIS1P "og" Original stream compatible</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vorbis2P">
            <summary>WAVE_FORMAT_VORBIS2P "pg" Have independent headere</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Vorbis3P">
            <summary>WAVE_FORMAT_VORBIS3P "qg" Have no codebook header</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.Extensible">
            <summary>WAVE_FORMAT_EXTENSIBLE</summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.WaveFormatEncoding.WAVE_FORMAT_DEVELOPMENT">
            <summary></summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.PropVariant">
            <summary>
            from Propidl.h.
            http://msdn.microsoft.com/en-us/library/aa380072(VS.85).aspx
            contains a union so we have to do an explicit layout
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.PropVariant.FromLong(System.Int64)">
            <summary>
            Creates a new PropVariant containing a long value
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.PropVariant.GetBlob">
            <summary>
            Helper method to gets blob data
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.PropVariant.GetBlobAsArrayOf``1">
            <summary>
            Interprets a blob as an array of structs
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.Interfaces.PropVariant.Clear">
            <summary>
            allows freeing up memory, might turn this into a Dispose method?
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.Interfaces.PropVariant.DataType">
            <summary>
            Gets the type of data in this PropVariant
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.Interfaces.PropVariant.Value">
            <summary>
            Property value
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.DeviceState">
            <summary>
            Device State
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DeviceState.Active">
            <summary>
            DEVICE_STATE_ACTIVE
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DeviceState.Disabled">
            <summary>
            DEVICE_STATE_DISABLED
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DeviceState.NotPresent">
            <summary>
            DEVICE_STATE_NOTPRESENT 
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DeviceState.Unplugged">
            <summary>
            DEVICE_STATE_UNPLUGGED
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.DeviceState.All">
            <summary>
            DEVICE_STATEMASK_ALL
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioEndpointVolumeChannels">
            <summary>
            Audio Endpoint Volume Channels
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeChannels.Count">
            <summary>
            Channel Count
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AudioEndpointVolumeChannels.Item(System.Int32)">
            <summary>
            Indexer - get a specific channel
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClientStreamOptions">
            <summary>
            Defines values that describe the characteristics of an audio stream.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamOptions.None">
            <summary>
            No stream options.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamOptions.Raw">
            <summary>
            The audio stream is a 'raw' stream that bypasses all signal processing except for endpoint specific, always-on processing in the APO, driver, and hardware.
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Views.ElbowView">
            <summary>
            ElbowView 表示肘形的View。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <!-- 对于成员“T:OMCS.Engine.Paint.ViewEditors.ElbowEditor”忽略有格式错误的 XML 注释 -->
        <member name="E:OMCS.Communication.Plus.Raid.FolderSynchronize.Server.FolderSynchronizeHandler.FileUploaded">
            <summary>
            当一个文件上传完毕时，触发此事件。参数：文件的全路径。
            </summary>
        </member>
        <member name="T:OMCS.MultimediaDeviceType">
            <summary>
            多媒体设备的类型。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.Camera">
            <summary>
            摄像头。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.Microphone">
            <summary>
            话筒。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.Desktop">
            <summary>
            桌面。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.WhiteBoard">
            <summary>
            电子白板。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.ShortMessage">
            <summary>
            短信
            </summary>
        </member>
        <member name="F:OMCS.AuthorizeManager.MaxTryMinutes">
            <summary>
            试用时，连接器最大连续工作时间。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.PinDirection">
            <summary>
            This enumeration indicates a pin's direction.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinDirection.Input">
            <summary>
            Input pin.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinDirection.Output">
            <summary>
            Output pin.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.AMMediaType">
            <summary>
            The structure describes the format of a media sample.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.MajorType">
            <summary>
            Globally unique identifier (GUID) that specifies the major type of the media sample.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.SubType">
            <summary>
            GUID that specifies the subtype of the media sample.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FixedSizeSamples">
            <summary>
            If <b>true</b>, samples are of a fixed size.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.TemporalCompression">
            <summary>
            If <b>true</b>, samples are compressed using temporal (interframe) compression.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.SampleSize">
            <summary>
            Size of the sample in bytes. For compressed data, the value can be zero.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FormatType">
            <summary>
            GUID that specifies the structure used for the format block.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.unkPtr">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FormatSize">
            <summary>
            Size of the format block, in bytes.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FormatPtr">
            <summary>
            Pointer to the format block.
            </summary>
        </member>
        <member name="M:OMCS.Engine.DShow.Core.AMMediaType.Finalize">
            <summary>
            Destroys the instance of the <see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> class.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.AMMediaType.Dispose">
             <summary>
             Dispose the object.
             </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.AMMediaType.Dispose(System.Boolean)">
            <summary>
            Dispose the object
            </summary>
            
            <param name="disposing">Indicates if disposing was initiated manually.</param>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.PinInfo">
            <summary>
            The structure contains information about a pin.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinInfo.Filter">
            <summary>
            Owning filter.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinInfo.Direction">
            <summary>
            Direction of the pin.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinInfo.Name">
            <summary>
            Name of the pin.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.FilterInfo2.Name">
            <summary>
            Filter's name.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.FilterInfo2.FilterGraph">
            <summary>
            Owning graph.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.VideoInfoHeader">
            <summary>
            The structure describes the bitmap and color information for a video image.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.SrcRect">
            <summary>
            <see cref="T:OMCS.Engine.DShow.Core.RECT"/> structure that specifies the source video window.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.TargetRect">
            <summary>
            <see cref="T:OMCS.Engine.DShow.Core.RECT"/> structure that specifies the destination video window.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.BitRate">
            <summary>
            Approximate data rate of the video stream, in bits per second.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.BitErrorRate">
            <summary>
            Data error rate, in bit errors per second.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.AverageTimePerFrame">
            <summary>
            The desired average display time of the video frames, in 100-nanosecond units.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.BmiHeader">
            <summary>
            <see cref="T:OMCS.Engine.DShow.Core.BitmapInfoHeader"/> structure that contains color and dimension information for the video image bitmap.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.BitmapInfoHeader">
            <summary>
            The structure contains information about the dimensions and color format of a device-independent bitmap (DIB).
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Size">
            <summary>
            Specifies the number of bytes required by the structure.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Width">
            <summary>
            Specifies the width of the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Height">
            <summary>
            Specifies the height of the bitmap, in pixels.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Planes">
            <summary>
            Specifies the number of planes for the target device. This value must be set to 1.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.BitCount">
            <summary>
            Specifies the number of bits per pixel.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Compression">
            <summary>
            If the bitmap is compressed, this member is a <b>FOURCC</b> the specifies the compression.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.ImageSize">
            <summary>
            Specifies the size, in bytes, of the image.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.XPelsPerMeter">
            <summary>
            Specifies the horizontal resolution, in pixels per meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.YPelsPerMeter">
            <summary>
            Specifies the vertical resolution, in pixels per meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.ColorsUsed">
            <summary>
            Specifies the number of color indices in the color table that are actually used by the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.ColorsImportant">
            <summary>
            Specifies the number of color indices that are considered important for displaying the bitmap.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.RECT">
            <summary>
            The structure defines the coordinates of the upper-left and lower-right corners of a rectangle.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Left">
            <summary>
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Top">
            <summary>
            Specifies the y-coordinate of the upper-left corner of the rectangle. 
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Right">
            <summary>
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Bottom">
            <summary>
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.CAUUID">
            <summary>
            The CAUUID structure is a Counted Array of UUID or GUID types.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.CAUUID.cElems">
            <summary>
            Size of the array pointed to by <b>pElems</b>.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.CAUUID.pElems">
            <summary>
            Pointer to an array of UUID values, each of which specifies UUID.
            </summary>
        </member>
        <member name="M:OMCS.Engine.DShow.Core.CAUUID.ToGuidArray">
            <summary>
            Performs manual marshaling of <b>pElems</b> to retrieve an array of Guid objects.
            </summary>
            
            <returns>A managed representation of <b>pElems</b>.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.DsEvCode">
            <summary>
            Enumeration of DirectShow event codes.
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.DesktopCapturer">
            <summary>
            用于连续捕捉当前桌面为视频帧。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.DesktopCapturer.#ctor(System.Int32,System.Nullable{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            DesktopCapturer 构造函数。
            </summary>
            <param name="_frameRate">捕捉的帧率</param>
            <param name="_xvidEnabled">启用XVID压缩输出的图像</param>       
            <param name="quantCoef">使用XVID的压缩质量，取值0~31</param>       
            <param name="_capturerRect">要捕捉的屏幕区域，如果传入null，则表示捕捉全屏</param>    
            <param name="_maxKeyInterval">关键帧间隔。0表示最大关键帧间隔(如果有丢帧存在，则模糊会累加)。</param>
        </member>
        <member name="M:OMCS.Engine.Video.DesktopCapturer.ChangeCaptureRegion(System.Nullable{System.Drawing.Rectangle})">
            <summary>
            当屏幕分辨率发生变化，或修改捕捉区域时，调用该方法。（可在捕捉的过程中动态调用）
            如果捕捉区域超出了屏幕范围，将会自动修正。
            </summary>       
        </member>
        <member name="M:OMCS.Engine.Video.DesktopCapturer.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.DesktopCapturer.VideoSizeChanged">
            <summary>
            当检测到屏幕分辨率发生变化时，触发此事件。 参数为新的分辨率。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.DesktopCapturer.VideoCaptured">
            <summary>
            采集到的原始视频帧。没有xvid，没有丢帧。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.DesktopCapturer.OriginCapturerRect">
            <summary>
            用户指定的要捕捉的区域。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.DesktopCapturer.BitmapInfoHeader">
            <summary>
            输出图像的头信息。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.DesktopCapturer.CaptureRegion">
            <summary>
            实际捕捉的区域。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.DesktopCapturer.KeepFramerate">
            <summary>
            尽可能地保持帧频。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.ScreenCapture">
            <summary>
            在win2003下面，无法截悬浮窗等LayeredWindow
            </summary>
        </member>
        <member name="T:OMCS.Server.MultimediaServerFactory">
            <summary>
            OMCS多媒体服务器工厂，用于创建多媒体服务器实例。
            </summary>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateMultimediaServer(System.Int32,OMCS.Server.IUserVerifier,OMCS.OMCSConfiguration,System.Boolean)">
            <summary>
            创建多媒体服务器实例。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>
            <param name="config">OMCS配置信息</param>        
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateMultimediaServer(System.Int32,OMCS.Server.IUserVerifier,OMCS.OMCSConfiguration,System.Boolean,System.String)">
            <summary>
            创建多媒体服务器实例。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>
            <param name="config">OMCS配置信息</param>
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logFilePath">日志文件的路径</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateMultimediaServer(System.Int32,OMCS.Server.IUserVerifier,OMCS.OMCSConfiguration,System.Boolean,ESBasic.Loggers.IAgileLogger)">
            <summary>
            创建多媒体服务器实例。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>
            <param name="config">OMCS配置信息</param>
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logger">日志记录器</param>
        </member>
        <member name="T:OMCS.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources._20120818113914742_easyicon_cn_16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.AddBtn_down">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Bitmap">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.BotMost">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.BotMove">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Clear">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Copy">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Cut">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.del">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Delete">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Paste">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Picture">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Print">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Print1">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.Save">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.TopMost">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Properties.Resources.TopMove">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Paint.Messages.WBBroadcastTypes">
            <summary>
            电子白板协作时所有的P2P消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.CbFileRequestReceived">
            <summary>
            回调委托。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="senderID">文件（夹）发送者的ID</param>
            <param name="fileName">文件（夹）名称</param>
            <param name="totalSize">文件（夹）大小</param>
            <param name="comment">备注</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送自定义信息、同步调用请求。    
            zhuweisky 2010.08.17
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.Int32,System.Byte[])">
            <summary>
            向服务器发送信息。
            </summary>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.String,System.Int32,System.Byte[])">
            <summary>
            向在线用户targetUserID发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Query(System.Int32,System.Byte[])">
            <summary>
            向服务器提交请求信息，并返回服务器的应答信息。如果超时没有应答则将抛出Timeout异常。
            </summary>      
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>服务器的应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向在线用户或服务器发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy,OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode)">
            <summary>
            向在线用户或服务器发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <param name="mode">通道选择模型。如果接收者为服务器，则忽略该参数。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendByP2PChannel(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            通过可靠的P2P通道向在线用户targetUserID发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID，不能为null。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>  
            <param name="actionType">当P2P通道不存在时，采取的操作</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.TransferByServer(System.String,System.Int32,System.Byte[])">
            <summary>
            即使与目标用户之间有可靠的P2P通道存在，也要通过服务器转发信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID，不能为null。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>         
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendCertainly(System.String,System.Int32,System.Byte[])">
            <summary>
            向在线用户或服务器发送信息，并等待其ACK。当前调用线程会一直阻塞，直到收到ACK；如果超时都没有收到ACK，则将抛出TimeoutException。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendBlob(System.String,System.Int32,System.Byte[],System.Int32)">
            <summary>
            向在线用户或服务器发送大的数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大的数据块信息</param>  
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendBlob(System.String,System.Int32,System.Byte[],System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode)">
            <summary>
            通过P2P通道向在线用户发送大的数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大的数据块信息</param>  
            <param name="fragmentSize">分片传递时，片段的大小</param>  
            <param name="mode">通道选择模型。如果接收者为服务器，则忽略该参数。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Query(System.String,System.Int32,System.Byte[])">
            <summary>
            向在线目标用户或服务器提交请求信息，并返回应答信息。如果目标用户不在线，或超时没有应答则将抛出TimeoutException。如果对方在处理请求时出现未捕获的异常，则该调用会抛出HandingException。
            </summary>      
            <param name="targetUserID">接收并处理请求消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Query(System.String,System.Int32,System.Byte[],OMCS.Communication.Plus.Application.CustomizeInfo.CallbackHandler,System.Object)">
            <summary>
            回复异步调用。向在线目标用户或服务器提交请求信息，当收到应答信息或超时时，将回调CallbackHandler函数。
            </summary>      
            <param name="targetUserID">接收并处理请求消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <param name="handler">用于处理回复信息的处理器</param>
            <param name="tag">携带的状态数据，将被传递给回调函数handler</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode">
            <summary>
            当Client发送消息给另外一个Client时，选择通道的模型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode.P2PChannelFirst">
            <summary>
            如果P2P通道存在，则使用P2P通道传送；否则，经过服务器中转。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode.TransferByServer">
            <summary>
            经过服务器中转，不使用P2P通道。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode.ByP2PChannel">
            <summary>
            使用P2P通道。如果P2P通道不存在，则丢弃消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.BlobReceiver">
            <summary>
            用于接收Blob的片段，并将其拼接为一个完整的Blob。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Blob.BlobID">
            <summary>
            大数据块唯一编号。从1开始逐个递增。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Blob.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Blob.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Passive.UdpPassiveEngine">
            <summary>
            客户端Udp引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Receiver.MessageBag">
            <summary>
            如果是一个有效消息，则Valid属性为true，且Message属性可用；如果是一个无效消息，则Valid属性为false，且ValidData属性可用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.StreamContextKey">
            <summary>
            针对二进制协议，用于封装一个TCP连接的相关信息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.MessageReceived">
            <summary>
            MessageReceived 用于验证是否为第一个消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.NetStreamDisposed">
            <summary>
            NetStreamDisposed tcp连接是否已经被释放。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.UserAddress">
            <summary>
            UserAddress 当前连接的客户的IP地址信息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.UserID">
            <summary>
            当前连接对应的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.StreamContextKey.HeaderBuffer">
            <summary>
            Buffer 用于接收消息头的缓冲区。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ContainerStyleMessageSpy">
            <summary>
            用于将多个InnerMessageSpy实例包装成一个整体，且也实现了IInnerMessageSpy接口。ContainerStyle模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.NakeDispatcher">
            <summary>
            INakeDispatcher接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.AgileTcpClient">
            <summary>
            可xml配置的TcpClient。支持IPV6。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.Port">
            <summary>
            Port 通信采用的本地端口，其值可能在GetNetworkStream方法中被修改。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.LocalIPAddress">
            <summary>
            LocalIPAddress 从哪个IP发出TCP连接。如果不设置，则选用第一块网卡的地址(此时，其值在GetNetworkStream方法中被修改)
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.SocketSendBuffSize">
            <summary>
            SocketSendBuffSize 网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.WaveFormatExtraData">
            <summary>
            This class used for marshalling from unmanaged code
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtraData.#ctor">
            <summary>
            parameterless constructor for marshalling
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtraData.#ctor(System.IO.BinaryReader)">
            <summary>
            Reads this structure from a BinaryReader
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WaveFormatExtraData.Serialize(System.IO.BinaryWriter)">
            <summary>
            Writes this structure to a BinaryWriter
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WaveFormatExtraData.ExtraData">
            <summary>
            Allows the extra data to be read
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AdpcmWaveFormat">
            <summary>
            Microsoft ADPCM
            See http://icculus.org/SDL_sound/downloads/external_documentation/wavecomp.htm
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AdpcmWaveFormat.#ctor">
            <summary>
            Empty constructor needed for marshalling from a pointer
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AdpcmWaveFormat.#ctor(System.Int32,System.Int32)">
            <summary>
            Microsoft ADPCM  
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Channels</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AdpcmWaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serializes this wave format
            </summary>
            <param name="writer">Binary writer</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AdpcmWaveFormat.ToString">
            <summary>
            String Description of this WaveFormat
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AdpcmWaveFormat.SamplesPerBlock">
            <summary>
            Samples per block
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AdpcmWaveFormat.NumCoefficients">
            <summary>
            Number of coefficients
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.AdpcmWaveFormat.Coefficients">
            <summary>
            Coefficients
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Views.ViewType.None">
            <summary>
            None 针对鼠标事件，不进行任何动作。通常用于ESC取消其它ViewEditor的当前动作时。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Paint.Views.ViewType.Operation">
            <summary>
            虚拟的View编辑器，主要用于单选或框选View对象、或移动、改变它们的大小。        
            </summary>
        </member>
        <!-- 对于成员“T:OMCS.Engine.Paint.ViewEditors.TextEditor”忽略有格式错误的 XML 注释 -->
        <member name="T:OMCS.Server.IUserVerifier">
            <summary>
            用户验证器接口。用于验证登录用户的帐号密码。
            </summary>
        </member>
        <member name="T:OMCS.Server.DefaultUserVerifier">
            <summary>
            默认全部通过验证。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_image_t.csp">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_image_t.plane">
            void*[4]
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_image_t.stride">
            int[4]
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_init_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_init_t.cpu_flags">
            unsigned int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_init_t.debug">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_info_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_info_t.actual_version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_info_t.build">
            char*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_info_t.cpu_flags">
            unsigned int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_info_t.num_threads">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_convert_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_convert_t.input">
            xvid_image_t->Anonymous_971b51cd_984e_49cc_b27b_b2a0a823b064
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_convert_t.output">
            xvid_image_t->Anonymous_971b51cd_984e_49cc_b27b_b2a0a823b064
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_convert_t.width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_convert_t.height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_gbl_convert_t.interlacing">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_create_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_create_t.width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_create_t.height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_create_t.handle">
            void*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_frame_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_frame_t.general">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_frame_t.bitstream">
            void*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_frame_t.length">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_frame_t.output">
            xvid_image_t->Anonymous_971b51cd_984e_49cc_b27b_b2a0a823b064
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_frame_t.brightness">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_ebf45572_3885_4809_bf30_07104133a75d.general">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_ebf45572_3885_4809_bf30_07104133a75d.time_base">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_ebf45572_3885_4809_bf30_07104133a75d.time_increment">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_ebf45572_3885_4809_bf30_07104133a75d.qscale">
            int*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_ebf45572_3885_4809_bf30_07104133a75d.qscale_stride">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc.general">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc.width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc.height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc.par">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc.par_width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc.par_height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_1e46c1eb_3d92_48a1_a4dc_03a31c73c060.vop">
            Anonymous_ebf45572_3885_4809_bf30_07104133a75d
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.Anonymous_1e46c1eb_3d92_48a1_a4dc_03a31c73c060.vol">
            Anonymous_7882bcc9_d50f_4f91_a812_639fce7507bc
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_stats_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_stats_t.type">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_dec_stats_t.data">
            Anonymous_1e46c1eb_3d92_48a1_a4dc_03a31c73c060
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_zone_t.frame">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_zone_t.mode">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_zone_t.increment">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_zone_t.base">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.type">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.quant">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.vol_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.vop_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.length">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.hlength">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.kblks">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.mblks">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.ublks">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.sse_y">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.sse_u">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_stats_t.sse_v">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_info_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_info_t.flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.num_zones">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.zones">
            xvid_enc_zone_t*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.mb_width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.mb_height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.fincr">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.fbase">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_create_t.param">
            void*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_destroy_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_destroy_t.num_frames">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.zone">
            xvid_enc_zone_t*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.mb_width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.mb_height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.fincr">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.fbase">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.min_quant">
            int[3]
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.max_quant">
            int[3]
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.reference">
            xvid_image_t->Anonymous_971b51cd_984e_49cc_b27b_b2a0a823b064
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.current">
            xvid_image_t->Anonymous_971b51cd_984e_49cc_b27b_b2a0a823b064
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.original">
            xvid_image_t->Anonymous_971b51cd_984e_49cc_b27b_b2a0a823b064
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.frame_num">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.type">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.quant">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.dquant">
            int*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.dquant_stride">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.vop_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.vol_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.motion_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.lambda">
            float*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.length">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.kblks">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.mblks">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.ublks">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.sse_y">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.sse_u">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.sse_v">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.bquant_ratio">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.bquant_offset">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plg_data_t.stats">
            xvid_enc_stats_t->Anonymous_7f6aacb2_e636_421f_ab4d_c8bec400725e
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_plugin_t.func">
            xvid_plugin_func*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_plugin_t.param">
            void*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_single_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_single_t.bitrate">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_single_t.reaction_delay_factor">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_single_t.averaging_period">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_single_t.buffer">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass1_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass1_t.filename">
            char*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.bitrate">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.filename">
            char*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.keyframe_boost">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.curve_compression_high">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.curve_compression_low">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.overflow_control_strength">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.max_overflow_improvement">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.max_overflow_degradation">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.kfreduction">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.kfthreshold">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.container_frame_overhead">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.vbv_size">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.vbv_initial">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.vbv_maxrate">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_2pass2_t.vbv_peakrate">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_ssim_t.b_printstat">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_ssim_t.stat_path">
            char*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_ssim_t.b_visualize">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_ssim_t.acc">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_plugin_ssim_t.cpu_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.profile">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.num_zones">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.zones">
            xvid_enc_zone_t*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.num_plugins">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.plugins">
            xvid_enc_plugin_t*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.num_threads">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.max_bframes">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.global">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.fincr">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.fbase">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.max_key_interval">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.frame_drop_ratio">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.bquant_ratio">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.bquant_offset">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.min_quant">
            int[3]
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.max_quant">
            int[3]
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_create_t.handle">
            void*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.version">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.vol_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.quant_intra_matrix">
            unsigned char*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.quant_inter_matrix">
            unsigned char*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.par">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.par_width">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.par_height">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.fincr">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.vop_flags">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.motion">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.type">
            <summary>
            type XVID_TYPE_AUTO=让编码器自动决定，I帧编码是关键帧，P帧编码是帧内预测
            </summary>
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.quant">
            <summary>
            quant 质量控制=量化参数，0~31，数值越小质量越高和码率成反比
            </summary>
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.bframe_threshold">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.bitstream">
            void*
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.length">
            int
        </member>
        <member name="F:OMCS.Engine.Video.Codec.Xvid.xvid_enc_frame_t.out_flags">
            int
        </member>
        <member name="T:OMCS.Tools.Camera">
            <summary>
            摄像头。用于获取本地所有摄像头的设备信息。
            </summary>
        </member>
        <member name="M:OMCS.Tools.Camera.GetCameras">
            <summary>
            枚举当前计算机上的所有摄像头设备。
            </summary>        
        </member>
        <member name="M:OMCS.Tools.Camera.GetCameraCapability(System.Int32)">
            <summary>
            获取目标摄像头的能力信息（分辨率、最大帧频）
            </summary>
            <param name="cameraDeviceIndex">目标摄像头的索引</param>        
        </member>
        <member name="M:OMCS.Tools.Camera.Support(System.Int32,System.Drawing.Size)">
            <summary>
            目标摄像头是否支持采集指定的分辨率。
            </summary>     
        </member>
        <member name="M:OMCS.Tools.Camera.Support(System.Int32,System.Drawing.Size,System.Int32@)">
            <summary>
            目标摄像头是否支持采集指定的分辨率。
            </summary>     
        </member>
        <member name="M:OMCS.Tools.Camera.GetCameraState(System.Int32)">
            <summary>
            获取摄像头的状态。
            </summary>
            <param name="cameraDeviceIndex">目标摄像头的索引</param>
            <returns>摄像头的状态</returns>
        </member>
        <member name="M:OMCS.Tools.Camera.MatchCameraVideoSize(System.Int32,System.Drawing.Size,OMCS.Passive.IVideoCapturerFactory)">
            <summary>
            查找目标摄像头所支持的分辨率中与指定分辨率最接近的分辨率。
            </summary>
            <param name="cameraIndex">摄像头索引</param>
            <param name="targetSize">指定的分辨率</param>
            <returns>最接近的分辨率。如果为null，表明摄像头无效</returns>
        </member>
        <member name="M:OMCS.Tools.Camera.MatchCameraVideoSize(System.Int32,System.Int32)">
            <summary>
            查找目标摄像头所支持的分辨率中与指定分辨率最接近的分辨率。
            </summary>
            <param name="cameraIndex">摄像头索引</param>
            <param name="targetSizeSum">指定的分辨率的长和宽的和值</param>
            <returns>最接近的分辨率。如果为null，表明摄像头无效</returns>
        </member>
        <member name="M:OMCS.Tools.Camera.SupportOutputFormat(System.Int32,System.Guid)">
            <summary>
            检测摄像头是否支持指定的输出格式。
            </summary>        
        </member>
        <member name="M:OMCS.Tools.Camera.GetFirstValidCamera">
            <summary>
            获取第一个有效的摄像头索引。
            </summary>        
        </member>
        <member name="T:OMCS.Tools.CameraInformation">
            <summary>
            摄像头的基础信息。
            </summary>
        </member>
        <member name="P:OMCS.Tools.CameraCapability.VideoSize">
            <summary>
            视频的分辨率、尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Tools.CameraCapability.MaxFrameRate">
            <summary>
            支持采集的最高帧频。
            </summary>
        </member>
        <member name="F:OMCS.Tools.DeviceState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:OMCS.Tools.DeviceState.NotExist">
            <summary>
            不存在
            </summary>
        </member>
        <member name="F:OMCS.Tools.DeviceState.InUsing">
            <summary>
            使用中
            </summary>
        </member>
        <member name="F:OMCS.Tools.DeviceState.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.IChatUnit">
            <summary>
            用于封装聊天组一个成员的相关信息的单元。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.MemberID">
            <summary>
            对应的组成员的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.Valid">
            <summary>
            是否有效？如果对应的组成员退出组或者掉线，则将返回false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.DynamicCameraConnector">
            <summary>
            摄像头连接器。（可将其连接到对应组成员的摄像头）。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.MicrophoneConnector">
            <summary>
            麦克风连接器。（可将其连接到对应组成员的麦克风）
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.ChatUnit">
            <summary>
            用于封装聊天组一个成员的相关信息的单元。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatUnit.Close">
            <summary>
            断开连接器的连接。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatUnit.Valid">
            <summary>
            如果组成员（MemberID）退出组或者掉线，则将返回false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatUnit.MicrophoneConnector">
            <summary>
            麦克风连接器，连接到组成员（MemberID）的麦克风。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatUnit.DynamicCameraConnector">
            <summary>
            摄像头连接器，连接到组成员（MemberID）的摄像头。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.SendingFileParas">
            <summary>
            发送文件的参数。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.SendingFileParas.#ctor(System.Int32,System.Int32)">
            <summary>
            Ctor。
            </summary>
            <param name="packageSize">文件数据包的大小。</param>
            <param name="sendSpanInMSecs">相邻的两个文件数据包之间的发送间隔。单位，毫秒。</param>       
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.SendingFileParas.SendingSpanInMSecs">
            <summary>
            相邻的两个文件数据包之间的发送间隔。单位，毫秒。默认值0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.SendingFileParas.FilePackageSize">
            <summary>
            文件数据包的大小。默认2048。网络环境越好，则数据包可以越大。比如，局网内部文件传输可以设为204800。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.StreamPlusContractHelper">
            <summary>
            针对OMCS.Communication.Plus.Core.StreamMessageHeader定制的服务端和客户端可以共用的ContractHelper。
            基于流协议，消息体TBody如果是从BaseSerializeContract继承（还要加上Serializable标签），则采用BaseSerializeContract序列化；
            否则使用更高效的OMCS.Communication.Plus.Serialization.ICompactSerializer序列化（由StreamContratAttribute指示采用CompactPropertySerializer/CompactFieldSerializer，如果没有标记StreamContratAttribute，则默认采用CompactPropertySerializer）。   
            如果消息体中包含ICompactSerializer不支持的或无法正确序列化的类型(如Font，其没有默认Ctor)，则可使用BaseSerializeContract方法。
            最后修正：2010.05.31
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.Server.FileMessageProcesser">
            <summary>
            FileMessageProcesser 使服务端能够提供下载上传的服务。
            zhuweisky 2010.08.13
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupManager">
            <summary>
            动态组管理器。
            （1）所有的组员都是在线的。只要组员掉线，则将其从组中移除。
            （2）如果要加入的目标组不存在，则自动创建目标组，并加入。
            （3）当某个组中不存在任何成员时（比如都退出），则销毁组。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupManager.GetGroupMembers(System.String)">
            <summary>
            返回的集合不可修改。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.DynamicGroupOutter">
            <summary>
            IGroupOutter 的实现。
            (1)所有组成员都是在线的。
            (2)尽可能使用P2P通道发送广播信息。
            (3)在从服务器获取组成员时，尝试与在线的组成员创建P2P连接。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.DynamicGroupOutter.TryP2PWhenGroupmateConnected">
            <summary>
            当组友上线时，是否自动进行P2P连接。默认值为true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes">
            <summary>
            GroupMessageTypeRoom 与组操作相关的所有消息类型定义。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.Join">
            <summary>
            请求加入组。对应协议为string,utf-8,groupID。回复协议为int,JoinGroupResult
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.QuitGroup">
            <summary>
            请求退出组。对应协议为string,utf-8,groupID。没有回复。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.SomeoneJoinGroupNotify">
            <summary>
            对组内通知新成员加入组。Server=>Client。对应协议为GroupNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.SomeoneQuitGroupNotify">
            <summary>
            对组内通知某成员退出组。Server=>Client。对应协议为GroupNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.GroupmateOfflineNotify">
            <summary>
            对组内通知某成员掉线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.BroadcastBlob">
            <summary>
            广播大数据块信息。协议为BlobFragmentContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.BroadcastBlobByServer">
            <summary>
            广播大数据块信息。协议为BlobFragmentContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.P2PChannelOpen">
            <summary>
            当客户端P2P通道创建成功时，通知服务器。C->S。消息体为P2PChannelReportContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.P2PChannelClose">
            <summary>
            当客户端P2P通道关闭时，通知服务器。C->S。消息体为P2PChannelReportContract。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.P2PAddress">
            <summary>
            客户端用于P2P通信的地址信息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.RelogonMode">
            <summary>
            重登陆模式。当从另外一个新连接上收到一个同名ID用户的消息时，地址管理器对旧的连接的处理模式。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.UserManagement.RelogonMode.IgnoreNew">
            <summary>
            忽略新的连接。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.UserManagement.RelogonMode.ReplaceOld">
            <summary>
            使用新的连接取代旧的连接。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.NetServer">
            <summary>
            规定：
            （1）普通用户编号只能由数字和字母组成（严格区分大小写），并且其最大长度会由IMessageHeader的实现类给出具体限制。
            （2）系统的虚拟账号使用"_"开头。    
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.NetServer.SystemUserID">
            <summary>
            当系统向客户发送消息时，消息头中source使用NetServer.SystemUserID
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.NetServer.MultiUserID">
            <summary>
            当服务端向多个客户发送同一个消息时，消息头中Dest使用NetServer.MultiUserID
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.NetServer.IsServerUser(System.String)">
            <summary>
            是否为代表服务器的虚拟用户ID，即NetServer.SystemUserID
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession">
            <summary>
            用于保存一对 IPEndPoint - IPEndPoint之间的UDP会话信息。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.SendFragment(System.Byte[],System.Int32,System.Int32,OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.DataFragmentType)">
            <summary>
            将数据报经过增强后，发送到网络，并缓存。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.Receive(System.Byte[])">
            <summary>
            根据接收到的的增强的数据报的类型进行正确的处理。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.DoPickRudeData">
            <summary>
            提取下一个正序的数据报。如果当前缓存没有数据报或没有正序的数据报，也没有可丢弃的数据报，则返回null。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.Ping">
            <summary>
            定时发送Ping系统数据报给对方。（并检查对方的心跳是否超时）
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.Resend(System.Int32)">
            <summary>
            定时重发ID最小的未确认数据报。（并检查对方的重发是否超时）
            </summary>
            <param name="spanInMsecs">距离上一次调用该方法的时间间隔</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.FeedbackVacancy(System.Int32)">
            <summary>
            向发送方反馈当前接收缓存中的空缺状态。
            </summary>
            <param name="spanInMsecs">距离上一次调用该方法的时间间隔。不能超过10ms</param>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.SessionClosed">
            <summary>
            当向DestIPEndPoint发送数据报时遭遇SocketException时（可能对方已经不再监听UDP端口），将触发此事件。事件参数为对方的端点。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.SessionReset">
            <summary>
            当对方的identity发生变化时（比如程序重启），将导致Session重置。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.OpenTime">
            <summary>
            UdpSession打开的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.UdpSession.DestIPEndPoint">
            <summary>
            当前session对方的端点。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SendingCircleBuffer`1.RemoveSmaller(System.UInt64)">
            <summary>
            移除小于等于ackID的数据。（表明对方已经收到了标志为ackID的数据报）
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SendingCircleBuffer`1.RemoveBetween(System.UInt64,System.UInt64)">
            <summary>
            移除startID-endID之间的数据，包含startID和endID。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SendingCircleBuffer`1.SessionResetted">
            <summary>
            当MaxID为0，而AckID大于0时，则认为当前session已重置，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SendingCircleBuffer`1.MaxID">
            <summary>
            曾加入过缓存中的最大ID值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SendingCircleBuffer`1.Capacity">
            <summary>
            缓存的最大容量
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.SendingCircleBuffer`1.Count">
            <summary>
            缓存中元素的个数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1">
            <summary>
            根据数据报ID与初始ID的差值，定位数据报应该存放的位置。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1.GetVacancyIDs(System.Int32,System.UInt64@,System.UInt64@)">
            <summary>
            获取所有空缺的ID，包括期望接收的下一个ID（比maxID大1）。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1.GetDescendingVacancyIDs(System.Int32,System.UInt64@,System.UInt64@)">
            <summary>
            从大到小获取空缺的数据报ID。
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1.MaxID">
            <summary>
            曾加入过缓存中的最大ID值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1.Capacity">
            <summary>
            缓存的最大容量
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1.HeadID">
            <summary>
            头元素的ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.ReceivingCircleBuffer`1.Count">
            <summary>
            缓存中元素的个数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient">
            <summary>
            增强的UdpClient。
            (1)通过为数据报添加EnhancedUdpHeader来增强数据报。
            (2)除系统数据报之外，从某个端点发出的每个数据报都拥有唯一编号（重发的数据报除外），编号从1开始递增。
            (3)发送数据块时，可能会分片，保证发送的每个数据报的大小不超过PMTU。
            (4)在接收方，会对数据报进行重组并保证顺序。不定时向发送方请求空缺数据报（最大为2s，可作为心跳）。
            (5)未接收到ACK的数据报，发送方会定时重发。动态调整滑动窗口的大小。
            (6)当未收到ACK的数据报数量达到预定值，或者，（maxDatagramIDSended - MinDatagramIDWaitAck） 达到预定值，则新的数据报发送将被阻塞。
            (7)通过ping ack 来启动自动PMTU测量。通过PMTU Ack来触发下一个更大的PMTU尝试。
            (8)尝试PMTU时，必须小于本机的MTU-8，否则，可能导致本机网络断开。
            (9)当重发超时，或发送数据抛出SocketException，或者连续一段时间没有收到对方的ping，则将关闭对应的Session。
            zhuweisky 2010.05.06 最后修正 2011.07.01
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.Initialize(OMCS.Communication.Basic.Engine.Udp.IPv6UdpClient,System.Int32)">
            <summary>
            初始化。如果将IEnhancedUdpClient实例注入到BaseUdpEngine，则该方法会被BaseUdpEngine自动调用。
            </summary>
            <param name="client">底层使用的真正的UdpClient</param>
            <param name="_maxDataSize">允许发送的最大的数据长度</param>
        </member>
        <!-- 对于成员“M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.Send(System.Byte[],System.Net.IPEndPoint)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.SendLostable(System.Byte[],System.Net.IPEndPoint)”忽略有格式错误的 XML 注释 -->
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.Close">
            <summary>
            在释放EnhancedUdpClient之前，调用该方法关闭所有的资源。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.DoDetect">
            <summary>
            由BaseCycleEngine调用，定时发送ping、重发数据报、空缺反馈。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.UdpSessionOpened">
            <summary>
            当向目标端点发送第一个消息或是从目标端点接收第一个消息时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.UdpSessionClosed">
            <summary>
            Session被关闭时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.UdpSessionReset">
            <summary>
            当对方出现状况时，将导致自己的Session重置，从而触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.HearbeatTimeoutInSecs">
            <summary>
            心跳超时的时间间隔以及重发数据包的最大超时，默认值为10s。（心跳/重发超时，将关闭对应的Session）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.AutoDiscoveryPMTU">
            <summary>
            是否启用自动发现PMTU。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.MTUOfCurrentMachine">
            <summary>
            当前机器的MTU值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpClient.SecurityLogEnabled">
            <summary>
            是否记录安全日志。默认值为false。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType">
            <summary>
            用于实现增强UDP的所有协议类型。可分为两大类：
            (1)系统数据报（用于实现增强UDP而设计，数据报ID始终为0）;
            (2)应用层数据报（包含了真正的用户数据），允许丢弃的数据报编号始终为0，不可丢弃的数据报编号从1开始递增。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.Data">
            <summary>
            包含了应用层数据的数据报。并且该应用层的数据必须保证被正序地传送给接收方。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.LostableData">
            <summary>
            可被丢弃数据报。
            </summary> 
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.ExpectedVacancy">
            <summary>
            接收方定时发送期望接收的数据报的ID给发送方。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.Ping">
            <summary>
            系统数据报。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.PingAck">
            <summary>
            系统数据报。对Ping的回复。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.PMTUTest">
            <summary>
            系统数据报。PMTU测试。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.PMTUAck">
            <summary>
            系统数据报。针对PMTUTest的回复。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.SessionResetNotify">
            <summary>
            当前的Session已经重置（已发送maxID=0，收到的AckID却大于0），通知对方。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUDType.SessionCloseNotify">
            <summary>
            当前的Session被主动关闭时，通知对方。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ContainerStyleTransformer">
            <summary>
            封装多个IMessageTransformer实例，将多个Transformer当作一个整体，并且此整体也实现了IMessageTransformer接口。ContainerStyle模式。
            </summary>	
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.StorageAccessMode">
            <summary>
            MMDevice STGM enumeration
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Interfaces.IMMEndpoint">
            <summary>
            defined in MMDeviceAPI.h
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClientStreamFlags">
            <summary>
            AUDCLNT_STREAMFLAGS
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamFlags.CrossProcess">
            <summary>
            AUDCLNT_STREAMFLAGS_CROSSPROCESS
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamFlags.Loopback">
            <summary>
            AUDCLNT_STREAMFLAGS_LOOPBACK
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamFlags.EventCallback">
            <summary>
            AUDCLNT_STREAMFLAGS_EVENTCALLBACK 
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientStreamFlags.NoPersist">
            <summary>
            AUDCLNT_STREAMFLAGS_NOPERSIST     
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioClientBufferFlags">
            <summary>
            Audio Client Buffer Flags
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientBufferFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientBufferFlags.DataDiscontinuity">
            <summary>
            AUDCLNT_BUFFERFLAGS_DATA_DISCONTINUITY
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientBufferFlags.Silent">
            <summary>
            AUDCLNT_BUFFERFLAGS_SILENT
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.AudioClientBufferFlags.TimestampError">
            <summary>
            AUDCLNT_BUFFERFLAGS_TIMESTAMP_ERROR
            </summary>
        </member>
        <member name="T:OMCS.Engine.Audio4ShortMessage.AudioPlayer">
            <summary>
            用于播放音频数据。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Paint.Views.LineView.Contains(System.Drawing.Point)">
            <summary>
            目标点是否在线段上 (y2-y1)(x-x1) = (y-y1)(x2-x1)
            </summary>		
        </member>
        <member name="T:OMCS.Engine.Paint.Application.WorkSpaceScroll">
            <summary>
            白板工作区的滚动条装置。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Paint.Application.WorkSpaceScroll.WorkSpaceScrollPositionChanged">
            <summary>
            当工作区的滚动条位置发生变化时，触发该事件。参数为AutoScrollPosition的X和Y
            </summary>
        </member>
        <member name="P:OMCS.Engine.Paint.Application.WorkSpaceScroll.SpringEventWhenScrollWorkSpace">
            <summary>
            当滚动工作区的滚动条时，是否触发WorkSpaceScrollPositionChanged事件。默认值：false。
            </summary>
        </member>
        <member name="T:OMCS.Server.MultimediaServer">
            <summary>
            OMCS多媒体服务器。
            </summary>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.#ctor(System.Int32,OMCS.Server.IUserVerifier,OMCS.OMCSConfiguration,System.Boolean)">
            <summary>
            OMCS服务器构造函数。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>
            <param name="config">OMCS配置信息</param>        
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.#ctor(System.Int32,OMCS.Server.IUserVerifier,OMCS.OMCSConfiguration,System.Boolean,System.String)">
            <summary>
            OMCS服务器构造函数。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>
            <param name="config">OMCS配置信息</param>
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logFilePath">日志文件的路径</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.#ctor(System.Int32,OMCS.Server.IUserVerifier,OMCS.OMCSConfiguration,System.Boolean,ESBasic.Loggers.IAgileLogger)">
            <summary>
            OMCS服务器构造函数。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>
            <param name="config">OMCS配置信息</param>
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logger">日志记录器</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.SendShortMessage(System.String,OMCS.Passive.ShortMessages.ShortMessage)">
            <summary>
            发送短信给目标用户。
            </summary>       
            <param name="destUserID">短信的接收者ID</param>
            <param name="msg">短信</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Server.MultimediaServer.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Server.MultimediaServer.Close">
            <summary>
            关闭OMCS多媒体服务器。
            </summary>
        </member>
        <member name="P:OMCS.Server.MultimediaServer.AgileChannelBusyGuesserEnabled">
            <summary>
            智能通道状态判定器是否开启。默认值为true。
            </summary>
        </member>
        <member name="E:OMCS.Server.MultimediaServer.ShortMessagePostFailed">
            <summary>
            当短信的接收者不在线时，将触发此事件。参数：短信接收者ID - 短信发送者ID - ShortMessage
            </summary>
        </member>
        <member name="P:OMCS.Server.MultimediaServer.Port">
            <summary>
            当前服务器所监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Server.MultimediaServer.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="E:OMCS.Server.MultimediaServer.UserDisconnected">
            <summary>
            客户端连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Server.MultimediaServer.UserConnected">
            <summary>
            客户端连接到服务器时，将触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ICreateDevEnum">
            <summary>
            The <b>ICreateDevEnum</b> interface creates an enumerator for devices within a particular category,
            such as video capture devices, audio capture devices, video compressors, and so forth.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICreateDevEnum.CreateClassEnumerator(System.Guid@,System.Runtime.InteropServices.ComTypes.IEnumMoniker@,System.Int32)">
            <summary>
            Creates a class enumerator for a specified device category.
            </summary>
            
            <param name="type">Specifies the class identifier of the device category.</param>
            <param name="enumMoniker">Address of a variable that receives an <b>IEnumMoniker</b> interface pointer</param>
            <param name="flags">Bitwise combination of zero or more flags. If zero, the method enumerates every filter in the category.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.FilterInfo">
            <summary>
            DirectShow filter information.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.FilterInfo.Name">
            <summary>
            Filter name.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.FilterInfo.MonikerString">
            <summary>
            Filters's moniker string.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OMCS.Engine.DShow.FilterInfo"/> class.
            </summary>
            
            <param name="monikerString">Filters's moniker string.</param>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.#ctor(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>
            Initializes a new instance of the <see cref="T:OMCS.Engine.DShow.FilterInfo"/> class.
            </summary>
            
            <param name="moniker">Filter's moniker object.</param>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.CompareTo(System.Object)">
            <summary>
            Compare the object with another instance of this class.
            </summary>
            
            <param name="value">Object to compare with.</param>
            
            <returns>A signed number indicating the relative values of this instance and <b>value</b>.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.CreateFilter(System.String)">
            <summary>
            Create an instance of the filter.
            </summary>
            
            <param name="filterMoniker">Filter's moniker string.</param>
            
            <returns>Returns filter's object, which implements <b>IBaseFilter</b> interface.</returns>
            
            <remarks>The returned filter's object should be released using <b>Marshal.ReleaseComObject()</b>.</remarks>
            
        </member>
        <member name="T:OMCS.Resource1">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:OMCS.Resource1.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:OMCS.Resource1.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:OMCS.Resource1.RemoteCursor">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:OMCS.Resource1.RemoteCursorCopy">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.AudioInOutMixer">
            <summary>
            将本地话筒设备的输入数据以及本地声音播放的输出数据进行混音。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.AudioInOutMixer.AudioMixed">
            <summary>
            本地话筒设备采集的一帧音频数据以及本地扬声器播放的一帧输出数据进行混音，每隔10ms触发一次。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.CameraCapturer">
            <summary>
            摄像头采集器。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.CameraCapturer.Stop">
            <summary>
            停止设备。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.CameraCapturer.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.CameraCapturer.VideoSizeChanged">
            <summary>
            当摄像头的采集分辨率发生变化时，触发此事件。 参数为新的分辨率。
            </summary>
        </member>
        <member name="P:OMCS.Engine.Video.CameraCapturer.DeviceMoniker">
            <summary>
            当前摄像头的唯一标识。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Serialization.SerializeException">
            <summary>
            序列化或反序列化时，产生的异常。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileReceiver">
            <summary>
            单个文件接收器。实现IFileReceiver接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileReceiver.CurrentTempFilePath">
            <summary>
            临时文件路径。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.PassiveFilePackageSender">
            <summary>
            用于Client向Server发送文件包(可能是通过Server转发)
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileTransmitHelper">
            <summary>
            用于协助文件传送时为每个传送项目生成唯一的编号。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom">
            <summary>
            所有与自定义信息相关的消息类型的空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.InformationByPost">
            <summary>
            信息。C->S 或 S->C 或 C->C。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.InformationBySend">
            <summary>
            信息。C->S 或 S->C 或 C->C。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.Request">
            <summary>
            请求信息。 C->S 或 C->C 。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.Response">
            <summary>
            对应request的应答信息。 C->C 或 S->C 或 C->S。回复协议为BinaryInformationContract。如果消息体为null，则表示对方在处理请求时抛出了异常。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.InformationNeedAck">
            <summary>
            需要进行ACK回复确认的信息。C->S 或 S->C 或 C->C。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.Ack">
            <summary>
            对InformationCertainly类型的信息的确认回复。协议体为空。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.BlobInformation">
            <summary>
            大块二进制信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.GetClientTimeRequest">
            <summary>
            S->C
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.GetClientTimeResponse">
            <summary>
            C->S
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.EnhancedP2P.EnhancedUdpDatagram.Identity">
            <summary>
            当前用户的UDP身份标记。在进程生命周期内，不会被改变。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.ContextKeyManager">
            <summary>
            用于管理所有的ContextKey ,ContextKeyManager中的所有成员方法都是线程安全的。
            zhuweisky 
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ContextKeyManager.ExpiredSpanInSecs">
            <summary>
            ExpiredSpanInSecs 某个连接建立后，如果在ExpiredSpanInSecs时间内收不到来自客户端的任何数据，则将触发ContextExpired事件（只是给出通知，并不释放Context）。
            如果ExpiredSpanInSecs小于等于0，则不做过期检查。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.AgileTcpListener">
            <summary>
            用于封装TCP监听者及监听线程。支持IPV6。
            zhuweisky 2005.05.23
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AgileTcpListener.FillKeepAliveStruct(System.Int32,System.Int32,System.Int32)">
            <summary>
            FillKeepAliveStruct 得到Keep-Alive结构值
            </summary>
            <param name="onOff">是否启用Keep-Alive</param>
            <param name="keepAliveTimeInMSec">最大存活时间ms</param>
            <param name="keepAliveIntervalInMSec">探测时间间隔ms</param>
            <returns></returns>
        </member>
        <member name="E:OMCS.Communication.Basic.AgileTcpListener.TcpConnectionEstablished">
            <summary>
            当新的Tcp连接成功建立时，会触发此事件	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpListener.AsynConnectionEvent">
            <summary>
            异步引发连接成功的事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpListener.SocketSendBuffSize">
            <summary>
            Socket(网卡)发送缓冲区的大小。默认为8k。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpListener.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.NormalInstance">
            <summary>
            如果在封闭的局网，可正常启动；一旦连接到公网，则验证授权，授权通过后，才能继续正常工作。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.JustOnInternet">
            <summary>
            只能在公网运行（必须通过授权服务器验证后，才能启动）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.SecurityDog">
            <summary>
            使用加密狗才可启动。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.AuthorizedSN">
            <summary>
            授权序列（硬盘和mac相关信息）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.JustInLAN">
            <summary>
            局网买断
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.WasapiLoopbackCapture">
            <summary>
            WASAPI Loopback Capture
            based on a contribution from "Pygmy" - http://naudio.codeplex.com/discussions/203605
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiLoopbackCapture.#ctor">
            <summary>
            Initialises a new instance of the WASAPI capture class
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiLoopbackCapture.#ctor(OMCS.Engine.Soundcard.MMDevice)">
            <summary>
            Initialises a new instance of the WASAPI capture class
            </summary>
            <param name="captureDevice">Capture device to use</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiLoopbackCapture.GetDefaultLoopbackCaptureDevice">
            <summary>
            Gets the default audio loopback capture device
            </summary>
            <returns>The default audio loopback capture device</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.WasapiLoopbackCapture.GetAudioClientStreamFlags">
            <summary>
            Specify loopback
            </summary>
        </member>
        <member name="P:OMCS.Engine.Soundcard.WasapiLoopbackCapture.WaveFormat">
            <summary>
            Recording wave format
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.Role">
            <summary>
            The ERole enumeration defines constants that indicate the role 
            that the system has assigned to an audio endpoint device
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.Role.Console">
            <summary>
            Games, system notification sounds, and voice commands.
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.Role.Multimedia">
            <summary>
            Music, movies, narration, and live music recording
            </summary>
        </member>
        <member name="F:OMCS.Engine.Soundcard.Role.Communications">
            <summary>
            Voice communications (talking to another person).
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopInfoContract.AllowControl">
            <summary>
            允许guest操作桌面。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.KeyboardCommandContract.Down">
            <summary>
            按下还是Up
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.KeyboardCommandContract.KeyValue">
            <summary>
            按键的值。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.MousePressCommandContract.Down">
            <summary>
            按下还是Up
            </summary>
        </member>
        <member name="T:OMCS.Passive.ChannelMode">
            <summary>
            Owner发送帧数据给Guest时，通道的选择模型。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ChannelMode.P2PDisabled">
            <summary>
            不启用P2P。即所有消息都经过OMCS服务器中转。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ChannelMode.P2PChannelFirst">
            <summary>
            启用P2P。如果成功创建P2P通道，则使用P2P通道发送消息。
            </summary>
        </member>
        <member name="T:OMCS.Passive.FrameDisardedMode">
            <summary>
            智能丢帧模式。
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DontDiscard">
            <summary>
            不允许丢帧
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DiscardALittle">
            <summary>
            尽可能少的丢帧。
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DiscardStandard">
            <summary>
            中等程度的丢帧。（位于DiscardALittle与DiscardWhenNeed之间）
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DiscardWhenNeed">
            <summary>
            需要时，就丢帧。
            </summary>
        </member>
        <member name="T:OMCS.GlobalUtil">
            <summary>
            全局公共设施。用于设置全局参数。
            </summary>
        </member>
        <member name="M:OMCS.GlobalUtil.SetMaxLengthOfUserID(System.Byte)">
            <summary>
            设置UserID（包括GroupID）的最大长度(不能超过255)。必须在OMCS引擎初始化之前设置才有效。注意，客户端与服务端要统一设置。
            </summary>       
        </member>
        <member name="M:OMCS.GlobalUtil.SetMaxLengthOfMessage(System.Int32)">
            <summary>
            设置消息的最大长度,初始值为1M。必须在OMCS引擎初始化之前设置才有效。注意，客户端与服务端要统一设置。
            </summary>  
        </member>
        <member name="M:OMCS.GlobalUtil.SetAuthorizedUser(System.String,System.String)">
            <summary>
            设置授权帐号和密码。在OMCS服务端初始化之前设置。
            </summary>  
        </member>
        <member name="P:OMCS.GlobalUtil.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值5。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.Codec.XvidEncoder">
            <summary>
            XVID解码器。zhuweisky 2010.01.25
            注意：xvid/divx编码，长宽必须是8的倍数。
            </summary>
        </member>
        <member name="M:OMCS.Engine.Video.Codec.XvidEncoder.#ctor(OMCS.Engine.BitmapInfoHeader,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ctor.
            </summary>
            <param name="header">要编码图像的头信息。</param>
            <param name="_frameRate">帧率</param>
            <param name="_quantCoef">编码质量，取值0~31。取值越小，越清晰。</param>
            <param name="_maxKeyInterval">关键帧间隔。0表示最大关键帧间隔(如果有丢帧存在，则模糊会累加)。</param>
        </member>
        <member name="M:OMCS.Engine.Video.Codec.XvidEncoder.Encode(System.Byte[],System.Boolean,OMCS.Engine.Video.FrameType@,System.Byte@)">
            <summary>
            Encode 进行XVID编码。
            </summary>
            <param name="imageBuff">RGB24位图数据，不包含Header</param>
            <param name="frameType">编码帧的类型。1--I帧，2--P帧，3--B帧</param>
            <param name="forceIFrame">强制编码为I帧</param>
            <param name="frameNumber">编码帧的序号，从1开始计数到达最大后再循环</param>
            <returns>编码后的数据。（DataBuffer是要被复用的，所以调用者根据需要可能要拷贝编码结果）</returns>       
        </member>
        <member name="P:OMCS.Engine.Video.Codec.XvidEncoder.QuantCoef">
            <summary>
            编码质量控制量化参数，0~31。数值越小质量越高和码率成反比。可在运行的过程中动态修改。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Video.Codec.XvidDecoder">
            <summary>
            XVID解码器。zhuweisky 2010.01.25
            注意：xvid/divx编码，长宽必须是8的倍数。
            </summary>
        </member>
        <member name="F:OMCS.Engine.Video.FrameType.Original">
            <summary>
            未编码的帧。
            </summary>
        </member>
        <member name="E:OMCS.Engine.Video.EmptyVideoCapturer.FrameDiscarded">
            <summary>
            在过去的5秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IPin">
            <summary>
            This interface is exposed by all input and output pins of DirectShow filters.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.Connect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects the pin to another pin.
            </summary>
            
            <param name="receivePin">Other pin to connect to.</param>
            <param name="mediaType">Type to use for the connections (optional).</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.ReceiveConnection(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Makes a connection to this pin and is called by a connecting pin.
            </summary>
            
            <param name="receivePin">Connecting pin.</param>
            <param name="mediaType">Media type of the samples to be streamed.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.Disconnect">
            <summary>
            Breaks the current pin connection.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.ConnectedTo(OMCS.Engine.DShow.Core.IPin@)">
            <summary>
            Returns a pointer to the connecting pin.
            </summary>
            
            <param name="pin">Receives <b>IPin</b> interface of connected pin (if any).</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.ConnectionMediaType(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Returns the media type of this pin's connection.
            </summary>
            
            <param name="mediaType">Pointer to an <see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> structure. If the pin is connected,
            the media type is returned. Otherwise, the structure is initialized to a default state in which
            all elements are 0, with the exception of <b>lSampleSize</b>, which is set to 1, and
            <b>FixedSizeSamples</b>, which is set to <b>true</b>.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryPinInfo(OMCS.Engine.DShow.Core.PinInfo@)">
            <summary>
            Retrieves information about this pin (for example, the name, owning filter, and direction).
            </summary>
            
            <param name="pinInfo"><see cref="T:OMCS.Engine.DShow.Core.PinInfo"/> structure that receives the pin information.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryDirection(OMCS.Engine.DShow.Core.PinDirection@)">
            <summary>
            Retrieves the direction for this pin.
            </summary>
            
            <param name="pinDirection">Receives direction of the pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryId(System.String@)">
            <summary>
            Retrieves an identifier for the pin.
            </summary>
            
            <param name="id">Pin identifier.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryAccept(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Queries whether a given media type is acceptable by the pin.
            </summary>
            
            <param name="mediaType"><see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> structure that specifies the media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.EnumMediaTypes(System.IntPtr)">
            <summary>
            Provides an enumerator for this pin's preferred media types.
            </summary>
            
            <param name="enumerator">Address of a variable that receives a pointer to the <b>IEnumMediaTypes</b> interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryInternalConnections(System.IntPtr,System.Int32@)">
            <summary>
            Provides an array of the pins to which this pin internally connects.
            </summary>
            
            <param name="apPin">Address of an array of <b>IPin</b> pointers.</param>
            <param name="nPin">On input, specifies the size of the array. When the method returns,
            the value is set to the number of pointers returned in the array.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.EndOfStream">
            <summary>
            Notifies the pin that no additional data is expected.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.BeginFlush">
            <summary>
            Begins a flush operation.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.EndFlush">
            <summary>
            Ends a flush operation.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.NewSegment(System.Int64,System.Int64,System.Double)">
            <summary>
            Specifies that samples following this call are grouped as a segment with a given start time, stop time, and rate.
            </summary>
            
            <param name="start">Start time of the segment, relative to the original source, in 100-nanosecond units.</param>
            <param name="stop">End time of the segment, relative to the original source, in 100-nanosecond units.</param>
            <param name="rate">Rate at which this segment should be processed, as a percentage of the original rate.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.TcpChannelManager">
            <summary>
            TcpChannelManager 基于TCP的P2P通道管理器。将其配置到OMCS.Communication.Basic.Passive.MessageTransceiver.P2PChannelManager属性。
            目前只解决了同一局域网的P2P通信。
            zhuweisky 2010.05.24
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Receiver.IMessagBagParser">
            <summary>
            用于在指定的连接或端口上接收数据。用于UDP引擎（服务端和客户端）以及客户端的Tcp引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Receiver.IMessagBagParser.ParseMessageBag(System.Net.IPEndPoint,System.Byte[])">
            <summary>
            执行一次接收操作，如果没有完整的消息，则返回null。      
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey">
            <summary>
            针对文本协议，用于封装一个TCP连接的相关信息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.JustReadBytes(System.Int32)">
            <summary>
            JustReadBytes 当一次数据接收完毕时，通知ContextKey本次接收了多少字节。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.GetNextRoundedMessage">
            <summary>
            GetNextRoundedMessage 从当前缓冲区中提取一条完整的消息。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.IsBufferFull">
            <summary>
            IsBufferFull 当前连接所使用的的接收缓冲区是否已经没有空位接收新的数据了。（这通常在接收缓冲区的尺寸比最大消息的尺寸要小所导致）
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.Reset">
            <summary>
            Reset 将接收新数据的偏移重置到接收缓冲区的起始处。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.Buffer">
            <summary>
            Buffer 当前连接所使用的的接收缓冲区。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.OffsetForReceive">
            <summary>
            OffsetForReceive 从当前连接所使用的接收缓冲区的哪个偏移位置开始继续接收新来的字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.MaxSizeForReceive">
            <summary>
            MaxSizeForReceive 当前连接所使用的接收缓冲区最多还可以接纳多少字节的数据。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ProcesserFactory">
            <summary>
            IProcesserFactory接口的默认实现，用于挂接多个消息处理器，然后根据要处理的消息类型返回正确的处理器。
            </summary>
        </member>
        <member name="T:OMCS.Engine.Soundcard.MMDeviceEnumerator">
            <summary>
            MM Device Enumerator
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceEnumerator.#ctor">
            <summary>
            Creates a new MM Device Enumerator
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceEnumerator.EnumerateAudioEndPoints(OMCS.Engine.Soundcard.DataFlow,OMCS.Engine.Soundcard.DeviceState)">
            <summary>
            Enumerate Audio Endpoints
            </summary>
            <param name="dataFlow">Desired DataFlow</param>
            <param name="dwStateMask">State Mask</param>
            <returns>Device Collection</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceEnumerator.GetDefaultAudioEndpoint(OMCS.Engine.Soundcard.DataFlow,OMCS.Engine.Soundcard.Role)">
            <summary>
            Get Default Endpoint
            </summary>
            <param name="dataFlow">Data Flow</param>
            <param name="role">Role</param>
            <returns>Device</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceEnumerator.GetDevice(System.String)">
            <summary>
            Get device by ID
            </summary>
            <param name="id">Device ID</param>
            <returns>Device</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceEnumerator.RegisterEndpointNotificationCallback(OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient)">
            <summary>
            Registers a call back for Device Events
            </summary>
            <param name="client">Object implementing IMMNotificationClient type casted as IMMNotificationClient interface</param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.MMDeviceEnumerator.UnregisterEndpointNotificationCallback(OMCS.Engine.Soundcard.Interfaces.IMMNotificationClient)">
            <summary>
            Unregisters a call back for Device Events
            </summary>
            <param name="client">Object implementing IMMNotificationClient type casted as IMMNotificationClient interface </param>
            <returns></returns>
        </member>
        <member name="T:OMCS.Engine.Soundcard.AudioRenderClient">
            <summary>
            Audio Render Client
            </summary>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioRenderClient.GetBuffer(System.Int32)">
            <summary>
            Gets a pointer to the buffer
            </summary>
            <param name="numFramesRequested">Number of frames requested</param>
            <returns>Pointer to the buffer</returns>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioRenderClient.ReleaseBuffer(System.Int32,OMCS.Engine.Soundcard.AudioClientBufferFlags)">
            <summary>
            Release buffer
            </summary>
            <param name="numFramesWritten">Number of frames written</param>
            <param name="bufferFlags">Buffer flags</param>
        </member>
        <member name="M:OMCS.Engine.Soundcard.AudioRenderClient.Dispose">
            <summary>
            Release the COM object
            </summary>
        </member>
        <member name="M:OMCS.Engine.Audio4ShortMessage.WaveInRecorder.#ctor(System.Int32,OMCS.Engine.Audio4ShortMessage.WaveFormat,System.Int32,System.Int32,ESBasic.CbGeneric{System.IntPtr,System.Int32})">
            <summary>
            
            </summary>
            <param name="deviceIndex"></param>
            <param name="format"></param>
            <param name="bufferSize"> 采集音频的缓冲区大小( 必须是320的倍数)。每采集满BufferSize的数据时，就触发一次AudioCaptured事件。</param>
            <param name="bufferCount"></param>
            <param name="doneProc"></param>
        </member>
    </members>
</doc>
